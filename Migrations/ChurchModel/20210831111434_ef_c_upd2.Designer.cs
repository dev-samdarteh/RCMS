// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RhemaCMS.Models.CLNTModels;

namespace RhemaCMS.Migrations.ChurchModel
{
    [DbContext(typeof(ChurchModelContext))]
    [Migration("20210831111434_ef_c_upd2")]
    partial class ef_c_upd2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AccountPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LengthInDays")
                        .HasColumnType("int");

                    b.Property<string>("LongevityStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("PeriodDesc")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int>("PeriodIndex")
                        .HasColumnType("int");

                    b.Property<string>("PeriodStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.ToTable("AccountPeriod");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppGlobalOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Allias")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ChurchLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Motto")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PrefixKey")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TotalLevels")
                        .HasColumnType("int");

                    b.Property<string>("strFaithStream")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("strFaithTypeCategory")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("AppGlobalOwner");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppUtilityNVP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<string>("ApplyToMemberStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<decimal?>("GradeLevel")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChurchService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeceased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainlineActivity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSequenced")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("NVPCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("NVPCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NVPDesc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("NVPFromDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("NVPNumVal")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("NVPNumValTo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NVPStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("NVPSubCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("NVPToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NVPValue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OccurFreqCode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<bool?>("RequireUserCustom")
                        .HasColumnType("bit");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("TargetOccurences")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ValueType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("NVPCategoryId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("AppUtilityNVP");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActionRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalActionDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ApprovalProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("CallerRefId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("LastActionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("nvarchar(6)")
                        .HasMaxLength(6);

                    b.Property<string>("ProcessSubCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("ApprovalProcessId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ApprovalAction");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalActionStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionStepDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ActionStepStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovalActionId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovalProcessStepRefId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStepIndex")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ApproverMemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<bool>("IsCurrentStep")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("StepRequestDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalActionId");

                    b.HasIndex("ApprovalProcessStepRefId");

                    b.HasIndex("ApproverChurchBodyId");

                    b.HasIndex("ApproverChurchMemberId");

                    b.HasIndex("ApproverChurchRoleId");

                    b.HasIndex("ApproverMemberChurchRoleId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ApprovalActionStep");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLevels")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("EscalChurchRoleId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EscalSlaMaxHrs")
                        .HasColumnName("EscalSLA_MaxHrs")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("EscalSlaMinHrs")
                        .HasColumnName("EscalSLA_MinHrs")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("ProcessDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ProcessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ProcessStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ProcessSubCode")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("RemindFreqHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TargetChurchLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EscalChurchRoleId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ApprovalProcess");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalProcessApprover", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ApprovalProcessStepId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver1ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver1ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver1ChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver1MemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver2ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver2ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver2ChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Approver2MemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("EscalChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("EscalChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("EscalChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("EscalMemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ApprovalProcessStepId");

                    b.HasIndex("Approver1ChurchBodyId");

                    b.HasIndex("Approver1ChurchMemberId");

                    b.HasIndex("Approver1ChurchRoleId");

                    b.HasIndex("Approver1MemberChurchRoleId");

                    b.HasIndex("Approver2ChurchBodyId");

                    b.HasIndex("Approver2ChurchMemberId");

                    b.HasIndex("Approver2ChurchRoleId");

                    b.HasIndex("Approver2MemberChurchRoleId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("EscalChurchBodyId");

                    b.HasIndex("EscalChurchMemberId");

                    b.HasIndex("EscalChurchRoleId");

                    b.HasIndex("EscalMemberChurchRoleId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ApprovalProcessApprover");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalProcessStep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalProcessId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ConcurrProcessStepId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsConcurrentWithOther")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessStepName")
                        .HasColumnType("nvarchar(7)")
                        .HasMaxLength(7);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("StepDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("StepIndex")
                        .HasColumnType("int");

                    b.Property<string>("StepStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ApprovalProcessId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ConcurrProcessStepId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ApprovalProcessStep");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AssetCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("AssetCategory");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CBMemberRollBal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<long>("TotRoll")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_AA")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_C")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_F")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_M")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_MA")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_O")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_Y")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_YA")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.ToTable("CBMemberRollBal");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CBOffertoryTransBal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotAmtCol")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotAmtNet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotAmtOut")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("CBOffertoryTransBal");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CBTitheTransBal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotAmtCol")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotAmtNet")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotAmtOut")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("CBTitheTransBal");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CUMemberRollBal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<long>("TotRoll")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_AA")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_C")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_F")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_M")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_MA")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_O")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_Y")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_YA")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.HasIndex("ChurchUnitId");

                    b.ToTable("CUMemberRollBal");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CertificateType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CertLevel")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CertName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("CertificateType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchAsset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AssetCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("AssetName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsCapitalized")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssetCategoryId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchAsset");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchAttendAttendee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeBracketId")
                        .HasColumnType("int");

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("AttendEventDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("AttendeeType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchEventId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchRankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateAttended")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnrollMode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityId")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<decimal?>("PersBPMax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PersBPMin")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PersKgWt")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ResidenceLoc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("TempCelc")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("VisitReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool?>("isPersFirstimer")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AgeBracketId");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchEventId");

                    b.HasIndex("ChurchMemStatusId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchRankId");

                    b.HasIndex("NationalityId");

                    b.ToTable("ChurchAttendAttendee");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchAttendHeadCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchEventId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CountDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CountEventDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CountType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<long>("TotCount")
                        .HasColumnType("bigint");

                    b.Property<long>("TotF")
                        .HasColumnType("bigint");

                    b.Property<long>("TotM")
                        .HasColumnType("bigint");

                    b.Property<long>("TotO")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_AA")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_C")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_MA")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_Y")
                        .HasColumnType("bigint");

                    b.Property<long>("Tot_YA")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchEventId");

                    b.HasIndex("ChurchUnitId");

                    b.ToTable("ChurchAttendHeadCount");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("BriefHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ChurchBodyLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChurchCodeCustom")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryRegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("DateFormed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateInnaug")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("IsFullAutonomy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupervisedByParentBody")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("MSTR_RootChurchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrgType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SubscriptionKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("SupervisedByChurchBodyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchLevelId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CountryRegionId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.HasIndex("ParentChurchBodyId");

                    b.HasIndex("SupervisedByChurchBodyId");

                    b.ToTable("ChurchBody");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBodyService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<bool>("IsTimed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<long>("MaxPersCapacity")
                        .HasColumnType("bigint");

                    b.Property<string>("MeetingDay")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceCategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServiceEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ServiceStart")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ServiceCategoryId");

                    b.ToTable("ChurchBodyService");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchEventCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchlifeActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("EventFrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("EventTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsChurchServiceEvent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEventActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ThemeColor")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchBodyServiceId");

                    b.HasIndex("ChurchEventCategoryId");

                    b.HasIndex("ChurchlifeActivityId");

                    b.ToTable("ChurchCalendarEvent");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchCalendarEventDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchCalendarEventId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchlifeActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CustomSessionDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("EventDescription")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("EventFrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventSessionCode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("EventStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("EventTo")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsChurchServiceEvent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentEvent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEventActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullDay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Venue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchBodyServiceId");

                    b.HasIndex("ChurchCalendarEventId");

                    b.HasIndex("ChurchlifeActivityId");

                    b.ToTable("ChurchCalendarEventDetail");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchEventCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchEventCategory");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LevelIndex")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("MSTR_ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("PrefixKey")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.ToTable("ChurchLevel");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TypeLevelIndex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ChurchMemType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GlobalMemberCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Hobbies")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Hometown")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("HometownRegionId")
                        .HasColumnType("int");

                    b.Property<int?>("IdTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MaidenName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MarriageRegNo")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MarriageType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MemberCustomCode")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("MemberScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("MotherTongueId")
                        .HasColumnType("int");

                    b.Property<string>("National_IdNum")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NationalityId")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrimContactInfoId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("HometownRegionId");

                    b.HasIndex("IdTypeId");

                    b.HasIndex("MotherTongueId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("PrimContactInfoId");

                    b.ToTable("ChurchMember");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Interval")
                        .HasColumnType("int");

                    b.Property<int>("IntervalDays")
                        .HasColumnType("int");

                    b.Property<string>("IntervalFreq")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("Month")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PeriodDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PeriodType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("Quarter")
                        .HasColumnType("int");

                    b.Property<int?>("Semester")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Week")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ChurchPeriod");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ApplyToChurchUnitId")
                        .HasColumnType("int");

                    b.Property<string>("ApplyToGender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("GlobalRoleCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<bool>("IsAdhocRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApplyToMainstreamUnit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MaxNumAllowed")
                        .HasColumnType("int");

                    b.Property<int?>("MinNumAllowed")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<decimal?>("OfficeTermMax_Yrs")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("OfficeTermType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("OrgType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("OwnershipStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ParentRoleCBId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentRoleId")
                        .HasColumnType("int");

                    b.Property<string>("PrimaryFunction")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("RankIndex")
                        .HasColumnType("int");

                    b.Property<string>("RootRoleCode")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TargetChurchLevelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ApplyToChurchUnitId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.HasIndex("ParentRoleCBId");

                    b.HasIndex("ParentRoleId");

                    b.HasIndex("TargetChurchLevelId");

                    b.ToTable("ChurchRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ApprovalStatusComments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("AttachedToChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("AttachedToChurchBodyList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CurrentScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("CustomTransMessage")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DesigRolesList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EApprovalActionId")
                        .HasColumnType("int");

                    b.Property<string>("FrAckStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("FrAckStatusComments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("FrReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FromChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("FromChurchRankId")
                        .HasColumnType("int");

                    b.Property<int?>("FromMemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("IApprovalActionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("ReqStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ReqStatusComments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequestorChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestorMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("RequestorRoleId")
                        .HasColumnType("int");

                    b.Property<bool>("RequireApproval")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("StatusModDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TempMemRankIdFrCB")
                        .HasColumnType("int");

                    b.Property<int?>("TempMemRankIdToCB")
                        .HasColumnType("int");

                    b.Property<int?>("TempMemStatusIdFrCB")
                        .HasColumnType("int");

                    b.Property<int?>("TempMemStatusIdToCB")
                        .HasColumnType("int");

                    b.Property<string>("TempMemTypeCodeFrCB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempMemTypeCodeToCB")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ToChurchRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToReceivedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ToRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ToRoleUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("TransMessageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TransferDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TransferReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("TransferSubType")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("TransferType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("WorkSpanStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("AttachedToChurchBodyId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("EApprovalActionId");

                    b.HasIndex("FromChurchBodyId");

                    b.HasIndex("FromChurchRankId");

                    b.HasIndex("FromMemberChurchRoleId");

                    b.HasIndex("IApprovalActionId");

                    b.HasIndex("RequestorChurchBodyId");

                    b.HasIndex("RequestorMemberId");

                    b.HasIndex("RequestorRoleId");

                    b.HasIndex("TempMemRankIdFrCB");

                    b.HasIndex("TempMemRankIdToCB");

                    b.HasIndex("TempMemStatusIdFrCB");

                    b.HasIndex("TempMemStatusIdToCB");

                    b.HasIndex("ToChurchBodyId");

                    b.HasIndex("ToChurchRoleId");

                    b.HasIndex("ToRoleUnitId");

                    b.HasIndex("TransMessageId");

                    b.ToTable("ChurchTransfer");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("BriefHistory")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<string>("CoreFunction")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeactive")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateFormed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateInnaug")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("GenderStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("GlobalUnitCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("IsAgeBracketOverlaps")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullAutonomy")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupervisedByParentUnit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUnitGen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<double?>("OrderIndex")
                        .HasColumnType("float");

                    b.Property<string>("OrgType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentUnitCBId")
                        .HasColumnType("int");

                    b.Property<int?>("ParentUnitId")
                        .HasColumnType("int");

                    b.Property<string>("RootUnitCode")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("SupervisedByUnitCBId")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisedByUnitId")
                        .HasColumnType("int");

                    b.Property<int?>("TargetChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("UnitCodeCustom")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("UnitLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnitMaxAge")
                        .HasColumnType("int");

                    b.Property<int?>("UnitMinAge")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.HasIndex("ParentUnitCBId");

                    b.HasIndex("ParentUnitId");

                    b.HasIndex("SupervisedByUnitCBId");

                    b.HasIndex("SupervisedByUnitId");

                    b.HasIndex("TargetChurchLevelId");

                    b.ToTable("ChurchUnit");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgeBracketId")
                        .HasColumnType("int");

                    b.Property<int>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchActivityId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchContactId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchVisitorTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Denomination")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DigitalAddress")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtConChurchContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtConChurchContactLocation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ExtConChurchContactMobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtConChurchContactName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("FirstVisitDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<bool?>("IsContactPersChurchFellow")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("MSTR_FaithTypeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("MaritalStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalityId")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("PrimaryLanguageId")
                        .HasColumnType("int");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Vis_Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("VisitReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AgeBracketId");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchActivityId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchContactId");

                    b.HasIndex("ChurchVisitorTypeId");

                    b.HasIndex("NationalityId");

                    b.HasIndex("PrimaryLanguageId");

                    b.ToTable("ChurchVisitor");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<bool>("ApplyToClergyOnly")
                        .HasColumnType("bit");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("ChurchVisitorType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchlifeActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsChurchService")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMainlineActivity")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("ShortCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ChurchlifeActivity");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchlifeActivityReqDef", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchlifeActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSequenced")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("OccurFreqCode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RequirementDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("TargetOccurences")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchlifeActivityId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("ChurchlifeActivityReqDef");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchUnitId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactInfoDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DigitalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExtHolderName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsChurchBody")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChurchFellow")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChurchUnit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimaryContact")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone1")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MobilePhone2")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool>("ResAddrSameAsPostAddr")
                        .HasColumnType("bit");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("RegionId");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Country", b =>
                {
                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha2Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CurrEngName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrLocName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrSymbol")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("EngName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("CtryAlpha3Code");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("IsChurchCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("CountryCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RegCode")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("CountryRegion");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegionCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("CountryRegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChurchRegion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultRegion")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CountryRegionId");

                    b.ToTable("CountryRegionCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("IsBaseCurrency")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SubAcronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SubSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CurrencyCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("BaseRate")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("IsBaseCurrency")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("CurrencyCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.DonationTrans", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountPeriodId")
                        .HasColumnType("int");

                    b.Property<decimal?>("AmtEquiv")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchAssetId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchFellow")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDonated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DonatedByAdhoc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("PmntMode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("PmntModeRefNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PmntRefPers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RelatedEventId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AccountPeriodId");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchAssetId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("RelatedEventId");

                    b.ToTable("DonationTrans");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.EventActivityReqLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int>("ChurchCalendarId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchEventId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Completed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequirementDefId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchEventId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("MemberChurchRoleId");

                    b.HasIndex("RequirementDefId");

                    b.ToTable("EventActivityReqLog");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.InstitutionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<decimal?>("EduLevelIndex")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("InstitutionType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpoken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("LanguageSpoken");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpokenCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChurchLanguage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultLanguage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<int>("LanguageSpokenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("LanguageSpokenId");

                    b.ToTable("LanguageSpokenCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("BatchCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DepartReason")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsChurchUnit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrentRole")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeadRole")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("OrgType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("RolePhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleProfile")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchRoleId");

                    b.HasIndex("ChurchUnitId");

                    b.ToTable("MemberChurchRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchUnitId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DepartReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCoreArea")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCurrUnit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPioneer")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchUnitId");

                    b.ToTable("MemberChurchUnit");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchlife", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyServiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchlifePhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateDeparted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateJoined")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartMode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("DepartReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("EnrollMode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("EnrollReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("HealthConditionStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<bool>("IsCurrentMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeceased")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMemBaptized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMemCommunicant")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMemConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPioneer")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("MemberlifeSummary")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("NonCommReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NonConfirmReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchBodyServiceId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberChurchlife");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchlifeActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchEventId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchlifeActivityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventPhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HostVenueScope")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsChurchEvent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int?>("OfficiatedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("OfficiatedByChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("OfficiatedByNameExt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OfficiatedByRoleExt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OfficiatedByScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("OfficiatingVenueExt")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("VenueChurchBodyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchEventId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchlifeActivityId");

                    b.HasIndex("MemberChurchRoleId");

                    b.HasIndex("OfficiatedByChurchBodyId");

                    b.HasIndex("OfficiatedByChurchMemberId");

                    b.HasIndex("VenueChurchBodyId");

                    b.ToTable("MemberChurchlifeActivity");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchlifeEventTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCommenced")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<bool>("IsCurrentTask")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberChurchRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("MemberChurchlifeActivityId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RequirementDefId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("TaskStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("MemberChurchRoleId");

                    b.HasIndex("MemberChurchlifeActivityId");

                    b.HasIndex("RequirementDefId");

                    b.ToTable("MemberChurchlifeEventTask");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("CityExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("ContactChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("ContactNameExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3CodeExtCon")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DenominationExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DigitalAddressExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmailExtCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaithAffiliationExtCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCurrentContact")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LocationExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone1ExtCon")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MobilePhone2ExtCon")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrlExtCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("RegionIdExtCon")
                        .HasColumnType("int");

                    b.Property<string>("RelationCategory")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("RelationScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("RelationshipCode")
                        .HasColumnType("int");

                    b.Property<bool>("ResAddrSameAsPostAddrExtCon")
                        .HasColumnType("bit");

                    b.Property<string>("ResidenceAddressExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ContactChurchBodyId");

                    b.HasIndex("ContactChurchMemberId");

                    b.HasIndex("CtryAlpha3CodeExtCon");

                    b.HasIndex("RegionIdExtCon");

                    b.HasIndex("RelationshipCode");

                    b.ToTable("MemberContact");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberEducation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("CertificateId")
                        .HasColumnType("int");

                    b.Property<string>("CertificatePhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Discipline")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InstitutionName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("InstitutionTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("CertificateId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("InstitutionTypeId");

                    b.ToTable("MemberEducation");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberLanguageSpoken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPrimaryLanguage")
                        .HasColumnType("bit");

                    b.Property<int?>("LanguageSpokenId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ProficiencyLevel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("LanguageSpokenId");

                    b.ToTable("MemberLanguageSpoken");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberProfessionBrand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("BrandProfile")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivePractice")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Profession")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberProfessionBrand");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchRankId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentRank")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchRankId");

                    b.ToTable("MemberRank");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchYear")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RegCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchPeriodId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("MemberRegistration");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("CityExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3CodeExtCon")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DenominationExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DigitalAddressExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("EmailExtCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaithAffiliationExtCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNextOfKin")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LocationExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone1ExtCon")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MobilePhone2ExtCon")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrlExtCon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressExtCon")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("RegionIdExtCon")
                        .HasColumnType("int");

                    b.Property<string>("RelationCategory")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("RelationChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationChurchMemberId")
                        .HasColumnType("int");

                    b.Property<string>("RelationNameExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("RelationScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("RelationshipCode")
                        .HasColumnType("int");

                    b.Property<bool>("ResAddrSameAsPostAddrExtCon")
                        .HasColumnType("bit");

                    b.Property<string>("ResidenceAddressExtCon")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("CtryAlpha3CodeExtCon");

                    b.HasIndex("RegionIdExtCon");

                    b.HasIndex("RelationChurchBodyId");

                    b.HasIndex("RelationChurchMemberId");

                    b.HasIndex("RelationshipCode");

                    b.ToTable("MemberRelation");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ToChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemStatusId");

                    b.HasIndex("ChurchMemberId");

                    b.ToTable("MemberStatus");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrent")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("MemberTypeCode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("MemberType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberWorkExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCurrentWork")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkPlace")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("WorkRole")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("MemberWorkExperience");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.National_IdType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("IdTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("OwnedByChurchBodyId");

                    b.ToTable("National_IdType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.OffertoryTrans", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AmtPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OffertoryDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("OffertoryTypeId")
                        .HasColumnType("int");

                    b.Property<string>("PostStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceivedByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("RelatedEventId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchPeriodId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("OffertoryTypeId");

                    b.HasIndex("RelatedEventId");

                    b.ToTable("OffertoryTrans");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.OffertoryTransDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<long?>("OffertoryTransId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PayModeAmt")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PayModeCarrier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PayModeTransDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayToName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PaymentMode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("PmntModeRefNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("OffertoryTransId");

                    b.ToTable("OffertoryTransDetail");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.RelationshipType", b =>
                {
                    b.Property<int>("RelationCode")
                        .HasColumnType("int");

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("IsChild")
                        .HasColumnType("bit");

                    b.Property<bool>("IsParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSpouse")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LevelIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("OwnedByChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeFemalePairCode")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeGenericPairCode")
                        .HasColumnType("int");

                    b.Property<int?>("RelationshipTypeMalePairCode")
                        .HasColumnType("int");

                    b.HasKey("RelationCode");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("RelationshipType");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.TitheTrans", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Corporate_ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("PostStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PostedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReceivedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal?>("TitheAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("TitheDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TitheMode")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("TithedByScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("TitherDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ChurchMemberId");

                    b.HasIndex("ChurchPeriodId");

                    b.HasIndex("Corporate_ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("TitheTrans");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.TitheTransDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<decimal>("PayModeAmt")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("PayModeCarrier")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("PayModeTransDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PayToName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PaymentMode")
                        .HasColumnType("nvarchar(4)")
                        .HasMaxLength(4);

                    b.Property<string>("PmntModeRefNo")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<long?>("TitheTransId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("TitheTransId");

                    b.ToTable("TitheTransDetail");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.UserAuditTrail_CL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("AuditType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("UI_Desc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserAuditTrail_CL");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AccountPeriod", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppGlobalOwner", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AppUtilityNVP", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country_NVP")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "NVPCategory")
                        .WithMany()
                        .HasForeignKey("NVPCategoryId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalAction", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalProcess", "ApprovalProcess")
                        .WithMany()
                        .HasForeignKey("ApprovalProcessId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalActionStep", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalAction", "ApprovalAction")
                        .WithMany()
                        .HasForeignKey("ApprovalActionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalProcessStep", "ApprovalProcessStepRef")
                        .WithMany()
                        .HasForeignKey("ApprovalProcessStepRefId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ApproverChurchBody")
                        .WithMany()
                        .HasForeignKey("ApproverChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ApproverChurchMember")
                        .WithMany()
                        .HasForeignKey("ApproverChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "ApproverChurchRole")
                        .WithMany()
                        .HasForeignKey("ApproverChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "ApproverMemberChurchRole")
                        .WithMany()
                        .HasForeignKey("ApproverMemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalProcess", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "EscalChurchRole")
                        .WithMany()
                        .HasForeignKey("EscalChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalProcessApprover", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalProcessStep", "ApprovalProcessStep")
                        .WithMany()
                        .HasForeignKey("ApprovalProcessStepId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "Approver1ChurchBody")
                        .WithMany()
                        .HasForeignKey("Approver1ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "Approver1ChurchMember")
                        .WithMany()
                        .HasForeignKey("Approver1ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "Approver1ChurchRole")
                        .WithMany()
                        .HasForeignKey("Approver1ChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "Approver1MemberChurchRole")
                        .WithMany()
                        .HasForeignKey("Approver1MemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "Approver2ChurchBody")
                        .WithMany()
                        .HasForeignKey("Approver2ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "Approver2ChurchMember")
                        .WithMany()
                        .HasForeignKey("Approver2ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "Approver2ChurchRole")
                        .WithMany()
                        .HasForeignKey("Approver2ChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "Approver2MemberChurchRole")
                        .WithMany()
                        .HasForeignKey("Approver2MemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "EscalChurchBody")
                        .WithMany()
                        .HasForeignKey("EscalChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "EscalChurchMember")
                        .WithMany()
                        .HasForeignKey("EscalChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "EscalChurchRole")
                        .WithMany()
                        .HasForeignKey("EscalChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "EscalMemberChurchRole")
                        .WithMany()
                        .HasForeignKey("EscalMemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ApprovalProcessStep", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalProcess", "ApprovalProcess")
                        .WithMany()
                        .HasForeignKey("ApprovalProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalProcessStep", "ConcurrProcessStep")
                        .WithMany()
                        .HasForeignKey("ConcurrProcessStepId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.AssetCategory", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CBMemberRollBal", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CBOffertoryTransBal", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CurrencyCountry")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CBTitheTransBal", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CurrencyCountry")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CUMemberRollBal", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "ChurchUnit")
                        .WithMany()
                        .HasForeignKey("ChurchUnitId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CertificateType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchAsset", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AssetCategory", "AssetCategory")
                        .WithMany()
                        .HasForeignKey("AssetCategoryId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchAttendAttendee", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "AgeBracket")
                        .WithMany()
                        .HasForeignKey("AgeBracketId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "ChurchEvent")
                        .WithMany()
                        .HasForeignKey("ChurchEventId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchMemStatus_NVP")
                        .WithMany()
                        .HasForeignKey("ChurchMemStatusId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchRank_NVP")
                        .WithMany()
                        .HasForeignKey("ChurchRankId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchAttendHeadCount", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "ChurchEvent")
                        .WithMany()
                        .HasForeignKey("ChurchEventId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "ChurchUnit")
                        .WithMany()
                        .HasForeignKey("ChurchUnitId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBody", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLevel", "ChurchLevel")
                        .WithMany()
                        .HasForeignKey("ChurchLevelId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ParentChurchBody")
                        .WithMany()
                        .HasForeignKey("ParentChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "SupervisedByChurchBody")
                        .WithMany()
                        .HasForeignKey("SupervisedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchBodyService", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBodyService", "ServiceCategory")
                        .WithMany()
                        .HasForeignKey("ServiceCategoryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBodyService", "ChurchBodyService")
                        .WithMany()
                        .HasForeignKey("ChurchBodyServiceId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchEventCategory_NVP")
                        .WithMany()
                        .HasForeignKey("ChurchEventCategoryId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchlifeActivity_NVP")
                        .WithMany()
                        .HasForeignKey("ChurchlifeActivityId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchCalendarEventDetail", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBodyService", "ChurchBodyService")
                        .WithMany()
                        .HasForeignKey("ChurchBodyServiceId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "ChurchCalendarEvent")
                        .WithMany()
                        .HasForeignKey("ChurchCalendarEventId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchlifeActivity_NVP")
                        .WithMany()
                        .HasForeignKey("ChurchlifeActivityId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchEventCategory", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchLevel", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMemType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchMember", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "HometownRegion")
                        .WithMany()
                        .HasForeignKey("HometownRegionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "IdType")
                        .WithMany()
                        .HasForeignKey("IdTypeId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "MotherTongue")
                        .WithMany()
                        .HasForeignKey("MotherTongueId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("PrimContactInfoId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchPeriod", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "ApplyToChurchUnit")
                        .WithMany()
                        .HasForeignKey("ApplyToChurchUnitId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ParentRoleCB")
                        .WithMany()
                        .HasForeignKey("ParentRoleCBId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "ParentChurchRole")
                        .WithMany()
                        .HasForeignKey("ParentRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLevel", "TargetChurchLevel")
                        .WithMany()
                        .HasForeignKey("TargetChurchLevelId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchTransfer", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "AttachedToChurchBody")
                        .WithMany()
                        .HasForeignKey("AttachedToChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalAction", "EApprovalAction")
                        .WithMany()
                        .HasForeignKey("EApprovalActionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "FromChurchBody")
                        .WithMany()
                        .HasForeignKey("FromChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "FromChurchPosition_NVP")
                        .WithMany()
                        .HasForeignKey("FromChurchRankId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "FromMemberChurchRole")
                        .WithMany()
                        .HasForeignKey("FromMemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ApprovalAction", "IApprovalAction")
                        .WithMany()
                        .HasForeignKey("IApprovalActionId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "RequestorChurchBody")
                        .WithMany()
                        .HasForeignKey("RequestorChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "RequestorMember")
                        .WithMany()
                        .HasForeignKey("RequestorMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "RequestorRole")
                        .WithMany()
                        .HasForeignKey("RequestorRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "TempMemRankFrCB_NVP")
                        .WithMany()
                        .HasForeignKey("TempMemRankIdFrCB");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "TempMemRankToCB_NVP")
                        .WithMany()
                        .HasForeignKey("TempMemRankIdToCB");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "TempMemStatusFrCB_NVP")
                        .WithMany()
                        .HasForeignKey("TempMemStatusIdFrCB");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "TempMemStatusToCB_NVP")
                        .WithMany()
                        .HasForeignKey("TempMemStatusIdToCB");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ToChurchBody")
                        .WithMany()
                        .HasForeignKey("ToChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "ToChurchRole")
                        .WithMany()
                        .HasForeignKey("ToChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "ToRoleUnit")
                        .WithMany()
                        .HasForeignKey("ToRoleUnitId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "TransMessage")
                        .WithMany()
                        .HasForeignKey("TransMessageId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchUnit", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ParentUnitCB")
                        .WithMany()
                        .HasForeignKey("ParentUnitCBId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "ParentChurchUnit")
                        .WithMany()
                        .HasForeignKey("ParentUnitId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "SupervisedByUnitCB")
                        .WithMany()
                        .HasForeignKey("SupervisedByUnitCBId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "SupervisedByUnit")
                        .WithMany()
                        .HasForeignKey("SupervisedByUnitId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchLevel", "TargetChurchLevel")
                        .WithMany()
                        .HasForeignKey("TargetChurchLevelId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitor", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "AgeBracket")
                        .WithMany()
                        .HasForeignKey("AgeBracketId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchlifeActivity", "ChurchActivity")
                        .WithMany()
                        .HasForeignKey("ChurchActivityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchContact")
                        .WithMany()
                        .HasForeignKey("ChurchContactId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchVisitorType", "ChurchVisitorType")
                        .WithMany()
                        .HasForeignKey("ChurchVisitorTypeId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.LanguageSpoken", "PrimaryLanguage")
                        .WithMany()
                        .HasForeignKey("PrimaryLanguageId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchVisitorType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "CountryAppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchlifeActivity", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ChurchlifeActivityReqDef", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchlifeActivity", "ChurchlifeActivity")
                        .WithMany()
                        .HasForeignKey("ChurchlifeActivityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.ContactInfo", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegion", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CountryRegionCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.Currency", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.CurrencyCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.DonationTrans", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AccountPeriod", "AccountPeriod")
                        .WithMany()
                        .HasForeignKey("AccountPeriodId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchAsset", "ChurchAsset")
                        .WithMany()
                        .HasForeignKey("ChurchAssetId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "RelatedEvent")
                        .WithMany()
                        .HasForeignKey("RelatedEventId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.EventActivityReqLog", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "ChurchEvent")
                        .WithMany()
                        .HasForeignKey("ChurchEventId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "MemberChurchRole")
                        .WithMany()
                        .HasForeignKey("MemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchlifeActivityReqDef", "ActivityRequirementDef")
                        .WithMany()
                        .HasForeignKey("RequirementDefId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.InstitutionType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpoken", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.LanguageSpokenCustom", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.LanguageSpoken", "LanguageSpoken")
                        .WithMany()
                        .HasForeignKey("LanguageSpokenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchRole", "ChurchRole")
                        .WithMany()
                        .HasForeignKey("ChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "ChurchUnit")
                        .WithMany()
                        .HasForeignKey("ChurchUnitId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchUnit", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchUnit", "ChurchUnit")
                        .WithMany()
                        .HasForeignKey("ChurchUnitId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchlife", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBodyService", "ChurchBodyService")
                        .WithMany()
                        .HasForeignKey("ChurchBodyServiceId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchlifeActivity", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "ChurchEvent")
                        .WithMany()
                        .HasForeignKey("ChurchEventId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchlifeActivity")
                        .WithMany()
                        .HasForeignKey("ChurchlifeActivityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "MemberChurchRole")
                        .WithMany()
                        .HasForeignKey("MemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OfficiatedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OfficiatedByChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "OfficiatedByChurchMember")
                        .WithMany()
                        .HasForeignKey("OfficiatedByChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "VenueChurchBody")
                        .WithMany()
                        .HasForeignKey("VenueChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberChurchlifeEventTask", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchRole", "MemberChurchRole")
                        .WithMany()
                        .HasForeignKey("MemberChurchRoleId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.MemberChurchlifeActivity", "MemberChurchlifeActivity")
                        .WithMany()
                        .HasForeignKey("MemberChurchlifeActivityId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ActivityRequirementDef")
                        .WithMany()
                        .HasForeignKey("RequirementDefId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberContact", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "RelationChurchBody")
                        .WithMany()
                        .HasForeignKey("ContactChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "RelationChurchMember")
                        .WithMany()
                        .HasForeignKey("ContactChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CountryExtCon")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3CodeExtCon");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "RegionExtCon")
                        .WithMany()
                        .HasForeignKey("RegionIdExtCon");

                    b.HasOne("RhemaCMS.Models.CLNTModels.RelationshipType", "RelationshipType")
                        .WithMany()
                        .HasForeignKey("RelationshipCode");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberEducation", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "CertificateType_NVP")
                        .WithMany()
                        .HasForeignKey("CertificateId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "InstitutionType_NVP")
                        .WithMany()
                        .HasForeignKey("InstitutionTypeId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberLanguageSpoken", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "LanguageSpoken")
                        .WithMany()
                        .HasForeignKey("LanguageSpokenId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberProfessionBrand", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRank", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchRank_NVP")
                        .WithMany()
                        .HasForeignKey("ChurchRankId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRegistration", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberRelation", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CountryExtCon")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3CodeExtCon");

                    b.HasOne("RhemaCMS.Models.CLNTModels.CountryRegion", "RegionExtCon")
                        .WithMany()
                        .HasForeignKey("RegionIdExtCon");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "RelationChurchBody")
                        .WithMany()
                        .HasForeignKey("RelationChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "RelationChurchMember")
                        .WithMany()
                        .HasForeignKey("RelationChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.RelationshipType", "RelationshipType")
                        .WithMany()
                        .HasForeignKey("RelationshipCode");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberStatus", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "ChurchMemStatus_NVP")
                        .WithMany()
                        .HasForeignKey("ChurchMemStatusId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.MemberWorkExperience", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.National_IdType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "OwnedByChurchBody")
                        .WithMany()
                        .HasForeignKey("OwnedByChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.OffertoryTrans", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CurrencyCountry")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.AppUtilityNVP", "OffertoryType")
                        .WithMany()
                        .HasForeignKey("OffertoryTypeId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchCalendarEvent", "RelatedEvent")
                        .WithMany()
                        .HasForeignKey("RelatedEventId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.OffertoryTransDetail", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CurrencyCountry")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.OffertoryTrans", "OffertoryTrans")
                        .WithMany()
                        .HasForeignKey("OffertoryTransId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.RelationshipType", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.TitheTrans", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "ChurchMember")
                        .WithMany()
                        .HasForeignKey("ChurchMemberId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchPeriod", "ChurchPeriod")
                        .WithMany()
                        .HasForeignKey("ChurchPeriodId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchMember", "Corporate_ChurchBody")
                        .WithMany()
                        .HasForeignKey("Corporate_ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CurrencyCountry")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.CLNTModels.TitheTransDetail", b =>
                {
                    b.HasOne("RhemaCMS.Models.CLNTModels.AppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.ChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.CLNTModels.Country", "CurrencyCountry")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.CLNTModels.TitheTrans", "TitheTrans")
                        .WithMany()
                        .HasForeignKey("TitheTransId");
                });
#pragma warning restore 612, 618
        }
    }
}
