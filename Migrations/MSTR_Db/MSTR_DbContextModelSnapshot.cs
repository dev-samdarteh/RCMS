// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RhemaCMS.Models.MSTRModels;

namespace RhemaCMS.Migrations
{
    [DbContext(typeof(MSTR_DbContext))]
    partial class MSTR_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.AppSubscription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("AppSubscriptionPackageId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Expr")
                        .HasColumnName("EXPR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Pwd")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Sladesc")
                        .HasColumnName("SLADesc")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Slastatus")
                        .HasColumnName("SLAStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("StatusReason")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Strt")
                        .HasColumnName("STRT")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriberPhoneNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SubscriptionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionKey")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("SubscriptionPeriod")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TotalSubscribed")
                        .HasColumnType("int");

                    b.Property<string>("UserDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("AppSubscriptionPackageId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("AppSubscription");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.AppSubscriptionPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<decimal?>("UnitCost")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("AppSubscriptionPackage");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.ChurchFaithType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("FaithDescription")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("FaithTypeClassId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FaithTypeClassId");

                    b.ToTable("ChurchFaithType");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.ClientAppServerConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ConfigDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("DbaseName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("ServerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SvrPassword")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SvrUserId")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.ToTable("ClientAppServerConfig");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Allias")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("ChurchLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("FaithTypeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Motto")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("PrefixKey")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("TotalLevels")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("FaithTypeCategoryId");

                    b.ToTable("MSTRAppGlobalOwner");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRAppUtilityNVP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("NvpCategoryId")
                        .HasColumnName("NVP_CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("NvpCode")
                        .HasColumnName("NVPCode")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("NvpStatus")
                        .HasColumnName("NVPStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("NvpTag")
                        .HasColumnName("NVPTag")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("NvpValue")
                        .HasColumnName("NVPValue")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("OrderIndex")
                        .HasColumnType("int");

                    b.Property<bool?>("RequireUserCustom")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("NvpCategoryId");

                    b.ToTable("MSTRAppUtilityNVP");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRChurchBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchLevelId")
                        .HasColumnType("int");

                    b.Property<string>("ChurchWorkStatus")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<int?>("CountryRegionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("GlobalChurchCode")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("IsWaiveSubscription")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("LicenseKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("OrgType")
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<int?>("ParentChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("RootChurchCode")
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("SubscriptionKey")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchLevelId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CountryRegionId");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("MSTRChurchBody");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRChurchLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Acronym")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CustomName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int>("LevelIndex")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("PrefixKey")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.ToTable("MSTRChurchLevel");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRContactInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("DigitalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("MobilePhone1")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("MobilePhone2")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int?>("RefUserId")
                        .HasColumnType("int");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<bool>("ResAddrSameAsPostAddr")
                        .HasColumnType("bit");

                    b.Property<string>("ResidenceAddress")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CtryAlpha3Code");

                    b.HasIndex("RegionId");

                    b.ToTable("MSTRContactInfo");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRCountry", b =>
                {
                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CallingCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("CapitalCity")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha2Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("Curr3LISOSymbol")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("CurrEngName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrLocName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CurrSymbol")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("EngName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("CtryAlpha3Code");

                    b.ToTable("MSTRCountry");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRCountryCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<bool>("IsChurchCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDefaultCountry")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MSTRCountryCustom");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRCountryRegion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("CtryAlpha3Code")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegCode")
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.Property<string>("SharingStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("Id");

                    b.HasIndex("CtryAlpha3Code");

                    b.ToTable("MSTRCountryRegion");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.SubscriptionChurchBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<int>("GlobalSubscriptionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("GlobalSubscriptionId");

                    b.ToTable("SubscriptionChurchBody");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserAuditTrail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("AuditType")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventDetail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("UI_Desc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserAuditTrail");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("GroupDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("GroupLevel")
                        .HasColumnType("int");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GroupType")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("OwnedBy")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("UserGroupCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("UserGroupCategoryId");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserGroupPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<bool>("CreatePerm")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("DeletePerm")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPerm")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Expr")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("ManagePerm")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("Strt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserPermissionId")
                        .HasColumnType("int");

                    b.Property<bool>("ViewPerm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserPermissionId");

                    b.ToTable("UserGroupPermission");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserGroupRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Expr")
                        .HasColumnName("EXPR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("Strt")
                        .HasColumnName("STRT")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserGroupRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("PermStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("PermissionCode")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("PermissionName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("UserPermCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRolePermissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserPermCategoryId");

                    b.HasIndex("UserRolePermissionId");

                    b.ToTable("UserPermission");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchMemberId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Expr")
                        .HasColumnName("EXPR")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCLNTInit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChurchMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMSTRInit")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerUserId")
                        .HasColumnType("int");

                    b.Property<int?>("ProfileLevel")
                        .HasColumnType("int");

                    b.Property<string>("ProfileScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Pwd")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<DateTime?>("PwdExpr")
                        .HasColumnType("datetime2");

                    b.Property<string>("PwdSecurityAns")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PwdSecurityQue")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<bool>("ResetPwdOnNextLogOn")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Strt")
                        .HasColumnName("STRT")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserDesc")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("UserKey")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("UserPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserScope")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("UserStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("ContactInfoId");

                    b.ToTable("UserProfile");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserProfileGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Expr")
                        .HasColumnName("EXPR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("Strt")
                        .HasColumnName("STRT")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserGroupId")
                        .HasColumnType("int");

                    b.Property<int>("UserProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("UserGroupId");

                    b.HasIndex("UserProfileId");

                    b.ToTable("UserProfileGroup");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserProfileRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Expr")
                        .HasColumnName("EXPR")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("ProfileRoleStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<DateTime?>("Strt")
                        .HasColumnName("STRT")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserProfileId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("UserProfileId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserProfileRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<string>("OwnedBy")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("RoleDesc")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("RoleLevel")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RoleStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("RoleType")
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AppGlobalOwnerId")
                        .HasColumnType("int");

                    b.Property<int?>("ChurchBodyId")
                        .HasColumnType("int");

                    b.Property<bool>("CreatePerm")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("DeletePerm")
                        .HasColumnType("bit");

                    b.Property<bool>("EditPerm")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastMod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LastModByUserId")
                        .HasColumnType("int");

                    b.Property<bool>("ManagePerm")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<int?>("UserPermissionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserRoleId")
                        .HasColumnType("int");

                    b.Property<bool>("ViewPerm")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AppGlobalOwnerId");

                    b.HasIndex("ChurchBodyId");

                    b.HasIndex("UserPermissionId");

                    b.HasIndex("UserRoleId");

                    b.ToTable("UserRolePermission");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.AppSubscription", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.AppSubscriptionPackage", "AppSubscriptionPackage")
                        .WithMany()
                        .HasForeignKey("AppSubscriptionPackageId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.ChurchFaithType", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.ChurchFaithType", "FaithTypeClass")
                        .WithMany("SubFaithTypes")
                        .HasForeignKey("FaithTypeClassId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.ClientAppServerConfig", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRCountry", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.MSTRModels.ChurchFaithType", "FaithTypeCategory")
                        .WithMany()
                        .HasForeignKey("FaithTypeCategoryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRAppUtilityNVP", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppUtilityNVP", "NvpCategory")
                        .WithMany()
                        .HasForeignKey("NvpCategoryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRChurchBody", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchLevel", "ChurchLevel")
                        .WithMany()
                        .HasForeignKey("ChurchLevelId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRCountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("CountryRegionId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRCountry", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRContactInfo", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRCountry", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRCountryRegion", "CountryRegion")
                        .WithMany()
                        .HasForeignKey("RegionId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.MSTRCountryRegion", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRCountry", "Country")
                        .WithMany()
                        .HasForeignKey("CtryAlpha3Code");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.SubscriptionChurchBody", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.MSTRModels.AppSubscription", "GlobalSubscription")
                        .WithMany("SubscriptionChurchBody")
                        .HasForeignKey("GlobalSubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserAuditTrail", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserGroup", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserGroup", "UserGroupCategory")
                        .WithMany()
                        .HasForeignKey("UserGroupCategoryId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserGroupPermission", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserPermission", "UserPermission")
                        .WithMany()
                        .HasForeignKey("UserPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserGroupRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserPermission", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.UserPermission", "UserPermCategory")
                        .WithMany()
                        .HasForeignKey("UserPermCategoryId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserRolePermission", null)
                        .WithMany("UserPermissions")
                        .HasForeignKey("UserRolePermissionId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserProfile", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRContactInfo", "ContactInfo")
                        .WithMany()
                        .HasForeignKey("ContactInfoId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserProfileGroup", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserGroup", "UserGroup")
                        .WithMany()
                        .HasForeignKey("UserGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserProfileRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserProfile", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserRole", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");
                });

            modelBuilder.Entity("RhemaCMS.Models.MSTRModels.UserRolePermission", b =>
                {
                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRAppGlobalOwner", "AppGlobalOwner")
                        .WithMany()
                        .HasForeignKey("AppGlobalOwnerId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.MSTRChurchBody", "ChurchBody")
                        .WithMany()
                        .HasForeignKey("ChurchBodyId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserPermission", "UserPermission")
                        .WithMany()
                        .HasForeignKey("UserPermissionId");

                    b.HasOne("RhemaCMS.Models.MSTRModels.UserRole", "UserRole")
                        .WithMany()
                        .HasForeignKey("UserRoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
