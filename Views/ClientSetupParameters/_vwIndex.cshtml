
@model RhemaCMS.Models.ViewModels.vm_cl.ClientSetupParametersModel

@{
    ViewData["Title"] = (!string.IsNullOrEmpty(ViewBag.AppName) ? ViewBag.AppName : "") + " - Dashboard";
}

@if (Model != null)
{
    <body id="page-top" class="hold-transition sidebar-mini-md sidebar-toggled layout-fixed w-100">
        <input type="hidden" id="_oSetIndex" data-value="@Model.setIndex" />
        <input type="hidden" id="_oSubSetIndex" data-value="@Model.subSetIndex" />

        @*<input type="hidden" id="_oChurchBody_Logged" data-value="@Model.oChurchBody_Logged" />*@
        @*<input type="hidden" id="_pageIndex" data-value="@Model.pageIndex" />*@

        <input type="hidden" id="_oChurchBodyId_Logged" data-value="@Model.oChurchBodyId_Logged" />
        <input type="hidden" id="_oAppGloOwnId_Logged" data-value="@Model.oAppGloOwnId_Logged" />
        <input type="hidden" id="_oUserId_Logged" data-value="@Model.oUserId_Logged" />


        <div class="wrapper" id="divSetupMain">

            <div class="content-header border-bottom border-info mb-0 pb-0">
                <div class="row m-0">
                    <div class="col-sm-6">
                        <h3> Setup Parameters </h3>
                    </div>
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item active">
                                <a asp-controller="ClientSetupParameters" asp-action="Index" class="text-info">
                                    <i class="fas fa-refresh mr-1"></i>
                                </a>
                            </li>
                        </ol>
                    </div>
                </div>
            </div>
            <!-- Main content -->
            <section class="content">
                <div class="container mt-5 mb-5">
                    <div class="row">

                        <div class="col-md-2">
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title text-primary"> Church Building Blocks </h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-minus"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.card-header -->
                                <div class="card-body p-0 ">
                                    <ul class="nav nav-pills flex-column">
                                        <li class="nav-item active">
                                            <a href="#section-cb" class="nav-link">
                                                <i class="fas fa-check-double pr-2"></i>
                                                Working (Logged) Unit
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-ago" class="nav-link">
                                                <i class="fas fa-church pr-2"></i>
                                                Denomination (Church)
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-cl" class="nav-link">
                                                <i class="fas fa-object-group pr-2"></i>
                                                Church Levels
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-cba" class="nav-link">
                                                <i class="fas fa-layer-group pr-2"></i>
                                                Top-level Units
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-chstruct" class="nav-link">
                                                <i class="fas fa-chart-line pr-2"></i>
                                                Church Structure
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-cu" class="nav-link">
                                                <i class="fas fa-layer-group pr-2"></i>
                                                Church Units (Groupings)
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-crl" class="nav-link">
                                                <i class="fas fa-user-tie pr-2"></i>
                                                Church Positions (Roles)
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title text-primary"> Churchlife Parameters </h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.card-header -->
                                <div class="card-body p-0 collapse">
                                    <ul class="nav nav-pills flex-column">
                                        <li class="nav-item">
                                            <a href="#section-nvp" class="nav-link">
                                                <i class="fas fa-cogs pr-2"></i>
                                                Parameters Pool
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-cpr" class="nav-link">
                                                <i class="fas fa-calendar-day pr-2"></i>
                                                Church Periods
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-cr" class="nav-link">
                                                <i class="fas fa-ellipsis-v"></i>
                                                <i class="fas fa-ellipsis-v pr-2"></i>
                                                Church Ranks
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-nvp" class="nav-link">
                                                <i class="fas fa-place-of-worship pr-2"></i>
                                                Churchlife Activities
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-nvp" class="nav-link">
                                                <i class="fas fa-sort-numeric-asc pr-2"></i>
                                                Churchlife Activity Steps
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-nvp" class="nav-link">
                                                <i class="fas fa-user-cog pr-2"></i>
                                                Church Transfer Settings
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-cmt" class="nav-link">
                                                <i class="fas fa-user-alt-slash pr-2"></i>
                                                Church Member Types
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-cms" class="nav-link">
                                                <i class="fas fa-traffic-light pr-2"></i>
                                                Church Member Statuses
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-nvp" class="nav-link">
                                                <i class="fas fa-user-cog pr-2"></i>
                                                Member Code Format
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title text-primary"> General Lookups </h3>
                                    <div class="card-tools">
                                        <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                                <!-- /.card-header -->
                                <div class="card-body p-0 collapse">
                                    <ul class="nav nav-pills flex-column">
                                        <li class="nav-item">
                                            <a href="#section-crc" class="nav-link">
                                                <i class="fas fa-flag pr-2"></i>
                                                Countries &amp; Demographies
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-lspk" class="nav-link">
                                                <i class="fas fa-microphone pr-2"></i>
                                                Languages Spoken
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-nidt" class="nav-link">
                                                <i class="fas fa-fingerprint pr-2"></i>
                                                National ID Types
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-inst" class="nav-link">
                                                <i class="fas fa-graduation-cap pr-2"></i>
                                                Institution Types
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-ctt" class="nav-link">
                                                <i class="fas fa-user-graduate pr-2"></i>
                                                Certificate Types
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a href="#section-rlt" class="nav-link">
                                                <i class="fas fa-handshake pr-2"></i>
                                                Relationship Types
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>

                        <div class="col-md">
                            <div class="row ">
                                <section class="col-lg-12 connectedSortable m-0 p-0">
                                    @{
                                        if (Model.setIndex == 0 || Model.setIndex == 3)
                                        {
                                            <!-- CB 3  -->
                                            <div id="section-cb" class="card">
                                                <h6 class="card-header card-title bg-success">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed3" aria-expanded="true" aria-controls="collapse-collapsed3" id="heading-collapsed">
                                                        <i class="fas fa-check-double pr-2"></i>
                                                        <i class="fa fa-chevron-down pull-right"></i>
                                                        Working (Logged) Unit
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed3" class="collapse" aria-labelledby="heading-collapsed">
                                                    <!-- ONLY CB subscriber access -->
                                                    <div class="card-header bg-transparent border-bottom border-light ">
                                                        <small> <i class="fa fa-info-circle fa-lg mr-1"></i> All configurations and church data are tied to this working unit including login authorization and data privacy. </small>

                                                        @{ if (Model.oChurchBodyModel != null)
                                                            {
                                                                if (Model.oChurchBodyModel.oChurchBody != null)
                                                                {
                                                                    var strDesc_CB = '"' + Model.oChurchBodyModel.oChurchBody.Name + '"';
                                                                    if (Model.oChurchBodyModel.oChurchBody.Id == Model.oChurchBodyId_Logged)
                                                                    {
                                                                        <div class="btn-group float-right">
                                                                            <button type="button" class="btn btn-sm btn-light" onclick="AddEditCurrData_CB(@Model.oChurchBodyModel.oChurchBody.Id, @Model.oChurchBodyModel.oAppGloOwnId_Logged, @Model.oChurchBodyModel.oChurchBodyId_Logged, @strDesc_CB, 3)">
                                                                                <i class="fas fa-edit text-primary"></i> @*<span class="text-sm"> Modify </span>*@
                                                                            </button>
                                                                            <button type="button" class="btn btn-sm btn-light dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                                                <span class="sr-only"> @*Toggle Dropdown*@</span>
                                                                            </button>
                                                                            <div class="dropdown-menu">
                                                                                <a class="dropdown-item" role="button" onclick="SynchChurchParameters_CB()">
                                                                                    <i class="fas fa-refresh fa-sm text-secondary mr-1"></i> <span class="text-sm"> Synchronize Church Network </span>
                                                                                </a>
                                                                                <div class="dropdown-divider"></div>
                                                                                <a class="dropdown-item" role="button" onclick="ResetChurchNetwork_CB()">
                                                                                    <i class="fas fa-download fa-sm text-secondary mr-1 "></i> <span class="text-sm"> Reset to Default Church Network </span>
                                                                                </a>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    </div>
                                                    <div class="card-body mt-1 p2 pt-0">
                                                        @{
                                                            if (Model.oChurchBodyModel != null)
                                                            {
                                                                await Html.RenderPartialAsync("_vwParamCB", Model.oChurchBodyModel);
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 1)
                                        {
                                            <!-- AGO 1  ... -->
                                            <div id="section-ago" class="card ">
                                                <h6 class="card-header card-title bg-gray-light ">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed1" aria-expanded="true" aria-controls="collapse-collapsed1" id="heading-collapsed">
                                                        <i class="fas fa-church pr-2"></i>
                                                        <i class="fa fa-chevron-down pull-right"></i>
                                                        Denomination (Church)
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed1" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        @{ await Html.RenderPartialAsync("_vwParamAGO", Model.oAppGlobalOwnModel); }
                                                    </div>
                                                    <!-- ONLY HQ level access -->
                                                    <div class="card-footer clearfix">
                                                        @{ var strDesc = '"' + Model.oAppGlobalOwnModel.oAppGlobalOwn?.OwnerName + '"'; }
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_AGO(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc)">
                                                            <i class="fas fa-edit"></i> <span>Modify</span>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>

                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 2)
                                        {
                                            <!-- CL 2  ... TO DO List -->
                                            <div id="section-cl" class="card">
                                                <h6 class="card-header card-title bg-gray-light ">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed2" aria-expanded="true" aria-controls="collapse-collapsed2" id="heading-collapsed">
                                                        <i class="fas fa-object-group pr-2"></i>
                                                        <i class="fa fa-chevron-down pull-right"></i>
                                                        Church Levels
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed2" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        @{ await Html.RenderPartialAsync("_vwParamCL", Model.lsChurchLevelModels); }
                                                    </div>
                                                    <!-- ONLY HQ level access -->
                                                    @*<div class="card-footer clearfix">
                                                            @{ var strDesc2 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                                            <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_AGO(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc2)">
                                                                <i class="fas fa-edit"></i> <span>Modify</span>
                                                            </button>
                                                        </div>*@
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 4)
                                        {
                                            <!-- CBA 4  ... TO DO List -->
                                            <div id="section-cba" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed4" aria-expanded="true" aria-controls="collapse-collapsed4" id="heading-collapsed">
                                                        <i class="fas fa-layer-group pr-2"></i>
                                                        <i class="fa fa-chevron-down pull-right"></i>
                                                        Top-level (Oversight) Units
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed4" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CBA" class="overlay-wrapper">
                                                            @{ await Html.RenderPartialAsync("_vwParamCBA", Model.oChurchBodyAdhocModel); }
                                                        </div>
                                                    </div>

                                                    <!-- ONLY show CBs equal and below in level access -->
                                                    @*<div class="card-footer clearfix">
                                                            <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CB(0, @Model.oChurchBodyAdhocModel.oAppGloOwnId_Logged, @Model.oChurchBodyAdhocModel.oChurchBodyId_Logged, '[New] Church Body', 4)">
                                                                <i class="fas fa-edit mr-1"></i> <span> Add New </span>
                                                            </button>
                                                        </div>*@
                                                </div>
                                            </div>

                                        }


                                        @* if (Model.setIndex == 0 || Model.setIndex == 5)
                                            {
                                                <!-- CSTR 5  ... TO DO List -->
                                                <div id="section-chstruct" class="card">
                                                    <h6 class="card-header card-title bg-gray-light ">
                                                        <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed5" aria-expanded="true" aria-controls="collapse-collapsed5" id="heading-collapsed">
                                                            <i class="fas fa-object-group pr-2"></i>
                                                            <i class="fa fa-chevron-down pull-right"></i>
                                                            Church Structure (Organisation)
                                                        </a>
                                                    </h6>
                                                    <div id="collapse-collapsed5" class="collapse" aria-labelledby="heading-collapsed">
                                                        <div class="card-body card-fuchsia card-outline">
                                                            @{ await Html.RenderPartialAsync("_vwParamCL", Model.lsChurchLevelModels); }
                                                        </div>
                                                        <!-- ONLY show CBs equal and below in level access -->
                                                        <div class="card-footer clearfix">
                                                            @{ var strDesc5 = '"' + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + '"'; }
                                                            <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_AGO(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc5)">
                                                                <i class="fas fa-edit"></i> <span>Modify</span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            }*@



                                        if (Model.setIndex == 0 || Model.setIndex == 14)
                                        {
                                            <!-- CU 14 ... TO DO List -->
                                            <div id="section-cu" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed14" aria-expanded="true" aria-controls="collapse-collapsed14" id="heading-collapsed">
                                                        <i class="fas fa-layer-group pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Church Units (Groupings &amp; Organisation)
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed14" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CU" class="overlay-wrapper mb-1">
                                                            @{ await Html.RenderPartialAsync("_vwParamCU", Model.oChurchUnitModel); }
                                                        </div>
                                                    </div>
                                                    <!-- ONLY HQ level access -->
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CU(0, null, @Model.oChurchUnitModel.oAppGloOwnId_Logged, @Model.oChurchUnitModel.oChurchBodyId_Logged, '[New] Church Unit', 14)">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_CU(14, 1)">
                                                            <i class="fa fa-refresh fa-secondary"></i>@*<span class="text-sm ml-1"> Reload </span>*@
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }


                                        if (Model.setIndex == 0 || Model.setIndex == 16)
                                        {
                                            <!-- CRL 16 ... TO DO List -->
                                            <div id="section-crl" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed16" aria-expanded="true" aria-controls="collapse-collapsed16" id="heading-collapsed">
                                                        <i class="fas fa-user-tie pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Church Positions (Roles)
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed16" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CRL" class="overlay-wrapper mb-1">
                                                            @{ await Html.RenderPartialAsync("_vwParamCRL", Model.oChurchRoleModel); }
                                                        </div>
                                                    </div>

                                                    <!-- ONLY HQ level access -->
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CRL(0, null, @Model.oChurchRoleModel.oAppGloOwnId_Logged, @Model.oChurchRoleModel.oChurchBodyId_Logged, '[New] Church Role (Position)', 16)">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_CRL(16, 1)">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>

                                        }

                                        <br />
                                        @*<hr />
                                            <br />*@

                                        if (Model.setIndex == 0 || Model.setIndex == 6)
                                        {
                                            <!-- NVP 6  ... TO DO List -->
                                            <div id="section-nvp" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed6" aria-expanded="true" aria-controls="collapse-collapsed6" id="heading-collapsed">
                                                        <i class="fas fa-cogs pr-2"></i>
                                                        <i class="fa fa-chevron-down pull-right"></i>
                                                        Parameters Pool
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed6" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body ">
                                                        <div class="card-fuchsia card-outline card-outline-tabs border-0">
                                                            <div class="card-header p-0 border-bottom-0">
                                                                <ul class="nav nav-tabs" id="parampool-tab" role="tablist">
                                                                    <li class="nav-item">
                                                                        <a class="nav-link active" id="parampool-gen-tab" data-toggle="pill" href="#parampool-gen" role="tab"
                                                                           aria-controls="parampool-gen" aria-selected="true"> General Parameters</a>
                                                                    </li>
                                                                    <li class="nav-item">
                                                                        <a class="nav-link" id="parampool-adhoc-tab" data-toggle="pill" href="#parampool-adhoc" role="tab"
                                                                           aria-controls="parampool-adhoc" aria-selected="false"> Adhoc Settings </a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                            <div class="card-body">
                                                                <div class="tab-content" id="parampool-tabContent">
                                                                    <div id="parampool-gen" class="tab-pane fade show active mt-3" role="tabpanel" aria-labelledby="parampool-gen-tab">
                                                                        <div class="col-md mb-3">
                                                                            <small class="font-weight-normal" asp-for="oAppUtilityNVPModel.strCurrNVPCode"> Parameter Type </small>
                                                                            <div class="input-group mb-3">
                                                                                <select id="_currNVPCode" class="form-control" asp-for="oAppUtilityNVPModel.strCurrNVPCode" asp-items="Model.oAppUtilityNVPModel.lkpAppParameterTags" aria-describedby="fd_strCurrNVPCode" required></select>
                                                                                <select id="_numNVP_ParentCategoryId" hidden class="form-control" asp-for="oAppUtilityNVPModel.numNVP_ParentCategoryId" asp-items="Model.oAppUtilityNVPModel.lkpNVP_ParentCategories" aria-describedby="fd_numNVP_ParentCategoryId"></select>
                                                                                <input id="_numNVP_ParentCategoryIdTemp" type="hidden" asp-for="oAppUtilityNVPModel.numNVP_ParentCategoryId" />

                                                                                <button type="button" class="btn btn-light text-secondary border ml-1"
                                                                                        onclick="ReloadCurrPage_NVP(6, 1, '')">
                                                                                    <i class="fa fa-refresh"></i>
                                                                                </button>
                                                                            </div>
                                                                        </div>
                                                                        <div id="divTabData_NVP" class="overlay-wrapper">
                                                                            @{ await Html.RenderPartialAsync("_vwParamNVP", Model.oAppUtilityNVPModel); }
                                                                        </div>
                                                                    </div>

                                                                    <div id="parampool-adhoc" class="tab-pane fade mt-3" role="tabpanel" aria-labelledby="parampool-adhoc-tab">
                                                                        <div id="divTabData_ADHC" class="overlay-wrapper">
                                                                            @{ await Html.RenderPartialAsync("_vwParamADHC", Model.oAdhocParameterModel); }
                                                                        </div>
                                                                        <div class="card-footer clearfix">
                                                                            <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_ADHC(25, 'Adhoc Parameters')">
                                                                                <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Update </span>
                                                                            </button>
                                                                            <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_ADHC(25, 1)">
                                                                                <i class="fa fa-refresh fa-secondary"></i>
                                                                            </button>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 9)
                                        {
                                            <!-- CPR 9  ... TO DO List -->
                                            <div id="section-cpr" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed9" aria-expanded="true" aria-controls="collapse-collapsed9" id="heading-collapsed">
                                                        <i class="fas fa-calendar-day pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Church Periods
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed9" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CPR" class="overlay-wrapper mb-1">
                                                            @{ await Html.RenderPartialAsync("_vwParamCPR", Model.oChurchPeriodModel); }
                                                        </div>
                                                    </div>
                                                    <!-- ONLY HQ level access -->
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CPR(0, '[New] Church Period')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_CPR(9, 1)">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }


                                        if (Model.setIndex == 0 || Model.setIndex == 15)
                                        {
                                            <!-- CR 15 ... TO DO List -->
                                            <div id="section-cr" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed15" aria-expanded="true" aria-controls="collapse-collapsed15" id="heading-collapsed">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                        <i class="fas fa-ellipsis-v pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Church Ranks
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed15" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CR" class="overlay-wrapper">
                                                            @{
                                                                var oCRModel = Model.oAppUtilityNVPModel;
                                                                if (Model.setIndex == 0)
                                                                {
                                                                    oCRModel.lsAppUtilityNVPModels = oCRModel.lsAppUtilityNVPModels_All.Where(c => c.oAppUtilityNVP.NVPCode == "CR").ToList();
                                                                }

                                                                await Html.RenderPartialAsync("_vwParamCR", oCRModel);
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] App Parameter (Church Rank)', 'CR')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_NVP(15, 1, 'CR')">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 19)
                                        {
                                            <!-- CMT 19 ... TO DO List -->
                                            <div id="section-cmt" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed19" aria-expanded="true" aria-controls="collapse-collapsed19" id="heading-collapsed">
                                                        <i class="fas fa-user-alt-slash pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Church Member Types
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed19" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CMT" class="overlay-wrapper">
                                                            @{
                                                                var oCMTModel = Model.oAppUtilityNVPModel;
                                                                if (Model.setIndex == 0)
                                                                {
                                                                    oCMTModel.lsAppUtilityNVPModels = oCMTModel.lsAppUtilityNVPModels_All.Where(c => c.oAppUtilityNVP.NVPCode == "CMT").ToList();
                                                                }

                                                                await Html.RenderPartialAsync("_vwParamCMT", oCMTModel);
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] App Parameter (Church Member Type)', 'CMT')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_NVP(19, 1, 'CMT')">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 20)
                                        {
                                            <!-- CMS 20 ... TO DO List -->
                                            <div id="section-cms" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed20" aria-expanded="true" aria-controls="collapse-collapsed20" id="heading-collapsed">
                                                        <i class="fas fa-traffic-light pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Church Member Statuses
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed20" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CMS" class="overlay-wrapper">
                                                            @{
                                                                var oCMSModel = Model.oAppUtilityNVPModel;
                                                                if (Model.setIndex == 0)
                                                                {
                                                                    oCMSModel.lsAppUtilityNVPModels = oCMSModel.lsAppUtilityNVPModels_All.Where(c => c.oAppUtilityNVP.NVPCode == "CMS").ToList();
                                                                }

                                                                await Html.RenderPartialAsync("_vwParamCMS", oCMSModel);
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] App Parameter (National Id Type)', 'CMS')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_NVP(20, 1, 'CMS')">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        <br />


                                        if (Model.setIndex == 0 || Model.setIndex == 7)
                                        {
                                            <!-- CRC 7  ... TO DO List -->
                                            <div id="section-crc" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed7" aria-expanded="true" aria-controls="collapse-collapsed7" id="heading-collapsed">
                                                        <i class="fas fa-flag pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Countries, Regions &amp; Currencies
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed7" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div class="card-primary card-outline card-outline-tabs border-0">
                                                            <div class="card-header p-0 border-bottom-0">
                                                                <ul class="nav nav-tabs" id="custom-tabs-four-tab" role="tablist">
                                                                    <li class="nav-item">
                                                                        <a class="nav-link active" id="custom-tabs-four-country-tab" data-toggle="pill" href="#custom-tabs-four-country" role="tab" aria-controls="custom-tabs-four-country" aria-selected="true"> Countries </a>
                                                                    </li>
                                                                    <li class="nav-item">
                                                                        <a class="nav-link" id="custom-tabs-four-region-tab" data-toggle="pill" href="#custom-tabs-four-region" role="tab" aria-controls="custom-tabs-four-region" aria-selected="false"> Regions </a>
                                                                    </li>
                                                                    <li class="nav-item">
                                                                        <a class="nav-link" id="custom-tabs-four-currency-tab" data-toggle="pill" href="#custom-tabs-four-currency" role="tab" aria-controls="custom-tabs-four-currency" aria-selected="false"> Currencies </a>
                                                                    </li>
                                                                </ul>
                                                            </div>
                                                            <div class="card-body">
                                                                <div class="tab-content" id="custom-tabs-four-tabContent">
                                                                    <div id="custom-tabs-four-country" class="tab-pane fade show active mt-3" role="tabpanel" aria-labelledby="custom-tabs-four-country-tab">
                                                                        <div id="divTabData_CTRY" class="overlay-wrapper mb-1">
                                                                            @{ await Html.RenderPartialAsync("_vwParamCTRY", Model.oCountryModel); }
                                                                        </div>
                                                                    </div>

                                                                    <div id="custom-tabs-four-region" class="tab-pane fade mt-3" role="tabpanel" aria-labelledby="custom-tabs-four-region-tab">
                                                                        <div class="input-group mb-3">
                                                                            <select id="_currCountryCode" class="form-control" asp-for="oCountryRegionModel.currCountryCode" asp-items="Model.oCountryRegionModel.lkpCountries" aria-describedby="fd_currCountryCode" required>
                                                                                <option selected value="">Select country</option>
                                                                            </select>
                                                                            <button type="button" class="btn btn-light text-secondary border ml-1" onclick="ReloadCurrPage_CTRY_RGN(7, 2, '')"> <i class="fa fa-refresh"></i></button>
                                                                            <button type="button" class="btn btn-info border ml-1" onclick="AddEditCurrData_CTRY_RGN(0, '[New] Country Region')"><i class="fas fa-plus"></i><span class="text-sm"> Add New </span></button>
                                                                        </div>

                                                                        <div id="divTabData_CTRY_RGN" class="overlay-wrapper mb-1">
                                                                            @{ await Html.RenderPartialAsync("_vwParamCTRY_RGN", Model.oCountryRegionModel); }
                                                                        </div>
                                                                    </div>

                                                                    <div id="custom-tabs-four-currency" class="tab-pane fade mt-3" role="tabpanel" aria-labelledby="custom-tabs-four-currency-tab">
                                                                        <div id="divTabData_CURR" class="overlay-wrapper mb-1">
                                                                            @{ await Html.RenderPartialAsync("_vwParamCURR", Model.oCurrencyCustomModel); }
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 8)
                                        {
                                            <!-- LSPK 8  ... TO DO List -->
                                            <div id="section-lspk" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed8" aria-expanded="true" aria-controls="collapse-collapsed8" id="heading-collapsed">
                                                        <i class="fas fa-microphone pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Languages Spoken
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed8" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_LSPK" class="overlay-wrapper">
                                                            @{
                                                                var oLSPKModel = Model.oAppUtilityNVPModel;
                                                                if (Model.setIndex == 0)
                                                                {
                                                                    oLSPKModel.lsAppUtilityNVPModels = oLSPKModel.lsAppUtilityNVPModels_All.Where(c => c.oAppUtilityNVP.NVPCode == "LSPK").ToList();
                                                                }

                                                                await Html.RenderPartialAsync("_vwParamLSPK", oLSPKModel);
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] App Parameter', 'LSPK')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_NVP(8, 1, 'LSPK')">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }


                                        if (Model.setIndex == 0 || Model.setIndex == 10)
                                        {
                                            <!-- NIDT 10 ... TO DO List -->
                                            <div id="section-nidt" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed10" aria-expanded="true" aria-controls="collapse-collapsed10" id="heading-collapsed">
                                                        <i class="fas fa-fingerprint pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        National ID Types
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed10" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_NIDT" class="overlay-wrapper">
                                                            @{
                                                                var oNIDTModel = Model.oAppUtilityNVPModel;
                                                                if (Model.setIndex == 0)
                                                                {
                                                                    oNIDTModel.lsAppUtilityNVPModels = oNIDTModel.lsAppUtilityNVPModels_All.Where(c => c.oAppUtilityNVP.NVPCode == "NIDT").ToList();
                                                                }

                                                                await Html.RenderPartialAsync("_vwParamNIDT", oNIDTModel);
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] App Parameter (National Id Type)', 'NIDT')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_NVP(10, 1, 'NIDT')">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 11)
                                        {
                                            <!-- INST 11 ... TO DO List -->
                                            <div id="section-inst" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed11" aria-expanded="true" aria-controls="collapse-collapsed11" id="heading-collapsed">
                                                        <i class="fas fa-graduation-cap pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Institution Types
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed11" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_INST" class="overlay-wrapper">
                                                            @{
                                                                var oINSTModel = Model.oAppUtilityNVPModel;
                                                                if (Model.setIndex == 0)
                                                                {
                                                                    oINSTModel.lsAppUtilityNVPModels = oINSTModel.lsAppUtilityNVPModels_All.Where(c => c.oAppUtilityNVP.NVPCode == "INST").ToList();
                                                                }

                                                                await Html.RenderPartialAsync("_vwParamINST", oINSTModel);
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] App Parameter (Institution Type)', 'INST')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_NVP(11, 1, 'INST')">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 12)
                                        {
                                            <!-- CTT 12 ... TO DO List -->
                                            <div id="section-ctt" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed12" aria-expanded="true" aria-controls="collapse-collapsed12" id="heading-collapsed">
                                                        <i class="fas fa-user-graduate pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Certificate Types
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed12" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_CTT" class="overlay-wrapper">
                                                            @{
                                                                var oCTTModel = Model.oAppUtilityNVPModel;
                                                                if (Model.setIndex == 0)
                                                                {
                                                                    oCTTModel.lsAppUtilityNVPModels = oCTTModel.lsAppUtilityNVPModels_All.Where(c => c.oAppUtilityNVP.NVPCode == "CTT").ToList();
                                                                }

                                                                await Html.RenderPartialAsync("_vwParamCTT", oCTTModel);
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] App Parameter (Certificate Type)', 'CTT')">
                                                            <i class="fas fa-edit mr-1"></i> <span class="text-sm"> Add New </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_NVP(12, 1, 'CTT')">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>

                                        }

                                        if (Model.setIndex == 0 || Model.setIndex == 13)
                                        {
                                            <!-- RLT 13 ... TO DO List -->
                                            <div id="section-rlt" class="card">
                                                <h6 class="card-header card-title bg-gray-light">
                                                    <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed13" aria-expanded="true" aria-controls="collapse-collapsed13" id="heading-collapsed">
                                                        <i class="fas fa-handshake pr-2"></i>
                                                        <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                        Relationship Types
                                                    </a>
                                                </h6>
                                                <div id="collapse-collapsed13" class="collapse" aria-labelledby="heading-collapsed">
                                                    <div class="card-body card-fuchsia card-outline">
                                                        <div id="divTabData_RLT" class="overlay-wrapper mb-1">
                                                            @{ await Html.RenderPartialAsync("_vwParamRLT", Model.oRelationshipTypeModel); }
                                                        </div>
                                                    </div>

                                                    <!-- ONLY HQ level access -->
                                                    <div class="card-footer clearfix">
                                                        <button type="button" class="btn btn-info float-right" onclick="SaveCurr_RLT(@Model.oChurchRoleModel.oAppGloOwnId_Logged, @Model.oChurchRoleModel.oChurchBodyId_Logged, 13)">
                                                            <i class="fas fa-download mr-1"></i> <span class="text-sm"> Reset to Defaults </span>
                                                        </button>
                                                        <button type="button" class="btn btn-default border mr-1 float-right" onclick="ReloadCurrPage_RLT(13, 1)">
                                                            <i class="fa fa-refresh fa-secondary"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                            </div>
                                        }




                                        @*if (Model.setIndex == 0 || Model.setIndex == 17)
                                            {
                                                 CLA 17 ... TO DO List
                                                <div id="section-cla" class="card">
                                                    <h6 class="card-header card-title bg-gray-light">
                                                        <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed17" aria-expanded="true" aria-controls="collapse-collapsed17" id="heading-collapsed">
                                                            <i class="fas fa-place-of-worship pr-2"></i>
                                                            <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                            Churchlife Activities
                                                        </a>
                                                    </h6>
                                                    <div id="collapse-collapsed17" class="collapse" aria-labelledby="heading-collapsed">
                                                        <div class="card-body card-fuchsia card-outline">
                                                            @{ await Html.RenderPartialAsync("_vwParamCLA", Model.oChurchlifeActivityModel); }
                                                        </div>
                                                         ONLY HQ level access
                                                        <div class="card-footer clearfix">
                                                            @{ var strDesc17 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                                            <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CLA(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc17)">
                                                                <i class="fas fa-edit"></i> <span>Modify</span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>

                                            }
                                            if (Model.setIndex == 0 || Model.setIndex == 18)
                                            {
                                                 CLARD 18 ... TO DO List
                                                <div id="section-clard" class="card">
                                                    <h6 class="card-header card-title bg-gray-light">
                                                        <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed18" aria-expanded="true" aria-controls="collapse-collapsed18" id="heading-collapsed">
                                                            <i class="fas fa-place-of-worship pr-2"></i>
                                                            <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                            Churchlife Activity Steps
                                                        </a>
                                                    </h6>
                                                    <div id="collapse-collapsed18" class="collapse" aria-labelledby="heading-collapsed">
                                                        <div class="card-body">
                                                            @{ await Html.RenderPartialAsync("_vwParamCLARD", Model.oChurchlifeActivityReqDefModel); }
                                                        </div>
                                                         ONLY HQ level access
                                                        <div class="card-footer clearfix">
                                                            @{ var strDesc18 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                                            <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CLARD(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc18)">
                                                                <i class="fas fa-edit"></i> <span>Modify</span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>

                                            }*@



                                        @*if (Model.setIndex == 0 || Model.setIndex == 1021)
                                            {
                                                 CTS 21 ... TO DO List
                                                <div id="section-ct" class="card">
                                                    <h6 class="card-header card-title bg-gray-light">
                                                        <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed21" aria-expanded="true" aria-controls="collapse-collapsed21" id="heading-collapsed">
                                                            <i class="fas fa-user-cog pr-2"></i>
                                                            <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                            Church Transfer Settings
                                                        </a>
                                                    </h6>
                                                    <div id="collapse-collapsed21" class="collapse" aria-labelledby="heading-collapsed">
                                                        <div class="card-body card-fuchsia card-outline">
                                                            @{ await Html.RenderPartialAsync("_vwParamCTS", Model.oAppGlobalOwnModel); }
                                                        </div>
                                                         ONLY HQ level access
                                                        <div class="card-footer clearfix">
                                                            @{ var strDesc21 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                                            <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CTS(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc21)">
                                                                <i class="fas fa-edit"></i> <span>Modify</span>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>
                                            }

                                            if (Model.setIndex == 100 || Model.setIndex == 1022)
                                            {
                                                 CMS 22 ... TO DO List
                                                <div id="section-mccf" class="card">
                                                    <h6 class="card-header card-title bg-gray-light">
                                                        <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed22" aria-expanded="true" aria-controls="collapse-collapsed22" id="heading-collapsed">
                                                            <i class="fas fa-user-cog pr-2"></i>
                                                            <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                                            Church Member Code Format
                                                        </a>
                                                    </h6>
                                                    <div id="collapse-collapsed22" class="collapse" aria-labelledby="heading-collapsed">
                                                        <div id="divTabData_MCCF" class="card-body card-fuchsia card-outline">
                                                            @{ await Html.RenderPartialAsync("_AddOrEdit_MCCF", Model.oMemberCustomCodeFormatModel); }
                                                        </div>
                                                        <div class="card-footer clearfix">
                                                            @{ var strDesc22 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }

                                                            <button type="button" class="btn btn-info float-right ml-1" onclick="SaveCurr_MCCF()">
                                                                <i class="fas fa-sav fa-sm"></i> <span> Save changes </span>
                                                            </button>
                                                            <button type="button" class="btn btn-light text-secondary float-right border-secondary" onclick="ReloadCurrPage_MCCF(22, 1, 'MCCF')">
                                                                <i class="fas fa-refresh"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                </div>

                                            }*@

                                    }

                                </section>
                            </div>
                        </div>

                    </div>
                </div>
            </section>
        </div>

        @*<div class="row">
                <a class="menu-icon" href="#"><i class="fa fa-bars"></i></a>
                <div class="menu-wrapper">
                    <ul class="side-menu">
                        <h2 class="title">Menu</h2>
                        <li class="row">
                            <ul>
                                <li class="metro red half"><a href="#"><i class="fa fa-google"></i></a></li>
                                <li class="metro light-blue"><a href="#"><i class="fa fa-twitter"></i></a></li>
                            </ul>
                        </li>
                        <li class="row">
                            <ul>
                                <li class="metro blue half"><a href="#"><i class="fa fa-facebook"></i></a></li>
                                <li class="metro green half"><a href="#"><i class="fa fa-android"></i></a></li>
                            </ul>
                        </li>
                        <li class="row">
                            <ul>
                                <li class="metro pink half"><a href="#"><i class="fa fa-dribbble"></i></a></li>
                                <li class="metro orange half"><a href="#"><i class="fa fa-github"></i></a></li>
                            </ul>
                        </li>
                        <li class="row">
                            <ul>
                                <li class="metro light-blue full"><a href="#"><i class="fa fa-skype"></i></a></li>
                            </ul>
                        </li>
                    </ul>
                </div>

                <div class="main">
                    <h2>Auto Sidebar</h2>
                    <p>This sidebar is as tall as its content (the links), and is always shown.</p>
                    <p>Scroll down the page to see the result.</p>
                    <p>Some text to enable scrolling.. Lorem ipsum dolor sit amet, illum definitiones no quo, maluisset concludaturque et eum, altera fabulas ut quo. Atqui causae gloriatur ius te, id agam omnis evertitur eum. Affert laboramus repudiandae nec et. Inciderint efficiantur his ad. Eum no molestiae voluptatibus.</p>
                    <p>Some text to enable scrolling.. Lorem ipsum dolor sit amet, illum definitiones no quo, maluisset concludaturque et eum, altera fabulas ut quo. Atqui causae gloriatur ius te, id agam omnis evertitur eum. Affert laboramus repudiandae nec et. Inciderint efficiantur his ad. Eum no molestiae voluptatibus.</p>
                    <p>Some text to enable scrolling.. Lorem ipsum dolor sit amet, illum definitiones no quo, maluisset concludaturque et eum, altera fabulas ut quo. Atqui causae gloriatur ius te, id agam omnis evertitur eum. Affert laboramus repudiandae nec et. Inciderint efficiantur his ad. Eum no molestiae voluptatibus.</p>
                    <p>Some text to enable scrolling.. Lorem ipsum dolor sit amet, illum definitiones no quo, maluisset concludaturque et eum, altera fabulas ut quo. Atqui causae gloriatur ius te, id agam omnis evertitur eum. Affert laboramus repudiandae nec et. Inciderint efficiantur his ad. Eum no molestiae voluptatibus.</p>
                </div>

            </div>*@

        <div class="modal fade" id="divPopModal_AddEdit" tabindex="-1" role="dialog" aria-labelledby="_modalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable" role="document">
                <div class="modal-content">
                    <div class="modal-header bg-secondary text-light">
                        <h5 class="modal-title"> Editing: </h5> @*@Model.strCurrTask*@
                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div id="divModalBody_AddEdit_lg" class="modal-body bg-light" style="font-family:Verdana, Geneva, Tahoma, sans-serif; font-size: 10pt">
                    </div>
                    <div class="modal-footer " style="background-color: lightgrey; left:auto; right: auto">
                        <a role="button" class="btn btn-outline-light " data-dismiss="modal"> Cancel </a>
                        @*<button id="btnSaveChanges" type="submit" class="btn btn-primary save-data font-weight-bold"><i class="fa fa-database fa-sm"></i> Save changes </button>*@

                        <button id="btnSaveChanges" type="submit" class="btn btn-info float-right">
                            <i class="fas fa-database fa-sm"></i> Save changes
                        </button>
                    </div>

                </div>
            </div>
        </div>

        @*<div class="modal fade" id="divPopModal_AddEdit_lg" tabindex="-1" role="dialog" aria-labelledby="_modalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable" role="document">
                    <div class="modal-content">
                        <div class="modal-header bg-teal text-light">
                            <h5 class="modal-title"> Editing: </h5> @Model.strCurrTask
                            <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">×</span>
                            </button>
                        </div>
                        <div id="divModalBody_AddEdit_lg" class="modal-body bg-light" style="font-family:Verdana, Geneva, Tahoma, sans-serif; font-size: 10pt">
                        </div>
                        <div class="modal-footer " style="background-color: lightgrey; left:auto; right: auto">
                            <a href="#" class="btn btn-outline-light " data-dismiss="modal"> Cancel </a>
                            <button id="btnSaveChanges" type="submit" class="btn btn-light  save-data font-weight-bold"><i class="fa fa-database fa-sm"></i> Save changes </button>

                            <button id="btnSaveChanges" class="btn btn-primary" type="submit" >Submit form</button>
                        </div>
                    </div>
                </div>
            </div>*@

        @*Success Modal
            <div class="modal fade" id="divPopModal_Success" tabindex="-1" role="dialog" aria-hidden="true" style="background-color:transparent; min-width:75px">
                <div class="modal-dialog modal-sm bg-info" role="document">
                    <div class="modal-content">
                        <div class="modal-header bg-success">
                            <h5 style="color: white; font-weight:bold"> Done! </h5>
                        </div>
                        <div class="modal-body bg-white" style="align-items:center">
                            <label id="lblUserMessage" class="text-sm font-weight-normal text-center"></label>
                        </div>

                        <div class="modal-footer bg-white">
                            <a href="#" id="_btnSuccessOK" class="btn btn-success shadow shadow-sm" data-dismiss="modal">Ok</a>
                        </div>
                    </div>
                </div>
            </div>*@

    </body>

}




@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script>
        (function ($) {
            $(function () {

                var menu_head = $('ul.side-menu h2.title').height();
                var item_height = $('ul.side-menu li a').height();
                // Untoggle menu on click outside of it
                $(document).mouseup(function (e) {
                    var container = $('ul.side-menu');
                    if ((!container.is(e.target) && container.has(e.target).length === 0) &&
                        (!($('a.menu-icon').is(e.target)) && $('a.menu-icon').has(e.target).length === 0)) {
                        container.removeClass("in");
                        $('body, ul.side-menu').removeClass("open");
                        $('ul.side-menu li').css("top", "100%");
                        $('ul.side-menu h2').css("top", "-60px");
                    }
                });

                $("a.menu-icon").click(function (e) {
                    e.preventDefault();
                    if ($('ul.side-menu, body').hasClass('open')) {
                        $('ul.side-menu').removeClass('open');
                        $('body').removeClass('open');

                        // Reset menu on close
                        $('ul.side-menu li').css("top", "100%");
                        $('ul.side-menu h2').css("top", "-60px");
                    }
                    else {
                        $('ul.side-menu').addClass('open');


                        $('ul.side-menu h2').css("top", 0);
                        $('ul.side-menu li').each(function () {
                            // Traditional Effect
                            if ($(this).hasClass('link')) {
                                var i = ($(this).index() - 1)
                                var fromTop = menu_head + (i * item_height);
                                var delayTime = 100 * i;
                                $(this).delay(delayTime).queue(function () {
                                    $(this).css("top", fromTop);
                                    $(this).dequeue();
                                });
                            }
                            // Metro Effect
                            else if ($(this).hasClass('metro')) {
                                var row_i = ($(this).parent().parent().index() - 1); // Vertical Index
                                var col_i = $(this).index(); // Horizontal Index
                                var fromTop = menu_head + (row_i * 125);
                                var fromLeft = col_i * 125;
                                var delayTime = (row_i * 200) + Math.floor((Math.random() * 200) + 1);
                                console.log(delayTime);
                                $(this).css("left", fromLeft);
                                $(this).delay(delayTime).queue(function () {
                                    $(this).css("top", fromTop);
                                    $(this).dequeue();
                                });
                            }
                        });
                    }

                })

            }); // end of document ready
        })(jQuery); // end of jQuery name space
    </script>


    <script>

    $(document).ready(function () {

        let anchorlinks = document.querySelectorAll('a[href^="#section"]')

        for (let item of anchorlinks) { // relitere
            item.addEventListener('click', (e) => {
                let hashval = item.getAttribute('href')
                let target = document.querySelector(hashval)
                target.scrollIntoView({
                    behavior: 'smooth',
                    block: 'start'
                })
                history.pushState(null, null, hashval)
                e.preventDefault()
            })
        }

    });

    $(document).ready(function () {

        $('#smartwizard').smartWizard({
            selected: 0,
            theme: 'dots',
            autoAdjustHeight: true,
            transitionEffect: 'fade',
            showStepURLhash: false,

        });
    });

    var DisplaySuccessInfo = function (msg, reload = false) {

        $.alert({
            title: 'Done!',
            type: 'green',
            typeAnimated: true,
            content: msg,
            closeIcon: true,
            closeIconClass: 'fa fa-close'
        });

    };

    var DisplayErrorInfo = function (msg, reload = false) {

        $.alert({
            title: 'Oops!',
            type: 'red',
            typeAnimated: true,
            content: msg,
            closeIcon: true,
            closeIconClass: 'fa fa-close'
        });

    };

    $(document).on('click', '#btnSaveChanges', function (e) {
        e.preventDefault();
      //  alert('save...')

        var _setIndex = $("#_setIndex").val();
        var _subSetIndex = $("#_subSetIndex").val();

      //  alert('_setIndex: ' + _setIndex);
       // alert('_subSetIndex: ' + _subSetIndex);

        //alert('_subSetIndex: ' + $("#_subSetIndex").val());
        //alert('_setIndex_Test: ' + $("#_setIndex_Test").val());

        //alert('_OrgType: ' + $("#_OrgType").val());
        //alert('_ChurchLevelId: ' + $("#_ChurchLevelId").val());

        //alert('_OrgType: ' + $("#_OrgType_Test").val());
        //alert('_ChurchLevelId: ' + $("#_ChurchLevelId_Test").val());

        switch (parseInt(_setIndex)) {
            case 1: SaveCurr_AGO(); break;
            case 2: SaveCurr_CL(); break;
            case 3:
            case 4: SaveCurr_CB(_setIndex); break;
            ///... general use one channel... one table
            case 6: case 8: case 10: case 11: case 12: case 15: case 17: case 18: case 19:
            case 20: SaveCurr_NVP(); break;
            ///
            case 7: //SaveCurr_CTRY_RGN();
                if (parseInt(_subSetIndex) == 2) { SaveCurr_CTRY_RGN(); }
                break;

            case 9: SaveCurr_CPR(); break;
            case 14: SaveCurr_CU(); break;
            case 16: SaveCurr_CRL(); break;

            case 21: case 22: case 23:
            case 25: SaveCurr_ADHC(_setIndex); break;
        }
    })


    var ReloadSetupParameters = function (currSetIndex = 0, currSubSetIndex = 0, loadSecOnly = false) {
               // alert('reload all...')

                // var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&numCodeCriteria_1=' + numNVP_ParentCategoryId + '&strCodeCriteria_2=' + strNVPCode;
                //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

        var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + loadSecOnly;

                $('#divSetupMain').load(url, function (e) {

                    });
            }


    </script>



    <!-- AGO 1 no ADD, no DEL, only EDIT -->
    <script>
        var AddEditCurrData_AGO = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
              //  alert('addORedit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               //  public IActionResult AddOrEdit_AGO(int id = 0, int? oAGOId_Logged = null, int? oCBId_Logged = null, int? oUserId_Logged = null)

                var url = "@Url.Action("AddOrEdit_AGO", "ClientSetupParameters")?id=" + currId +
                                            "&oAGOId_Logged=" + currAGOId_Logged + "&oCBId_Logged=" + currCBId_Logged + "&oUserId_Logged=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_AGO').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });


                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                            $("#divPopModal_AddEdit").modal('show');
                        });

        };

        var ReloadCurrPage_AGO = function (currSetIndex, currSubSetIndex) {
                // public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0)
                window.location.href = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex; // + '&oChuCategId=' + chuCategId + '&oShowAllCong=' + showAllCong;
        }

        //$(document).on('click', '#btnSaveChanges_AGO_AGO', function (e) {
        //    e.preventDefault();

        //   // alert('click..');
        //    const form = document.getElementById("currForm_AGO");
        //    //alert('val 4 .. ' + form.checkValidity())

        //    if (form.checkValidity() === true) {

        //        SaveCurr_AGO(); //currSetIndex, currSubSetIndex);
        //    }
        //    else {
        //       // alert('val 5')
        //        event.preventDefault();
        //        event.stopPropagation();

        //        form.classList.add('was-validated');
        //    }


        //   // }, false);
        //})

        var SaveCurr_AGO = function () { // (currSetIndex, currSubSetIndex) {
            // alert('save... ');

            const form = document.getElementById("currForm_AGO");
            //alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {

                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
                var currFormData = new FormData($("#currForm_AGO").get(0));
                // var currFormData = $("#currForm_AGO").serialize();
              //  alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_AGO", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_AGO",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                          //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_AGO").val();
                         //   alert(res.userMess)
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);

                            // document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update';  // $('#btnSaveChanges_AGO').html('Update'); //var AddEditCurrData_AGO = function (currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

                            var _desc = "'[New] Denomination (Church)'";
                            if (res.resetNew == true) {
                                AddEditCurrData_AGO(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            }
                            else {
                                //$("#btnSaveChanges_AGO").prop();
                               // alert('closing...')
                                $("#divPopModal_AddEdit .close").click();
                            }

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });

                           // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                            // $("#lblUserMessage").text(msg);
                        }
                    }
                })
            }
        }

    </script>


    <!-- CL 2 no ADD, no DEL, only EDIT -->
    <!-- CB 3 no ADD, no DEL, only EDIT -->
    <script>
       var AddEditCurrData_CB = function (currId, currDenomId, currChurchBodyId, _strItemName, setIndex = 3) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

           //   alert('addORedit...');
            //alert('addORedit.. ' + currId + ' ..currDenomId: ' + currDenomId + ' .._pageIndex: ' + _pageIndex + ' .._strItemName: ' + _strItemName);

            //alert('currDenomId... ' + currDenomId)
            //alert('currChurchBodyId... ' + currChurchBodyId)

           // var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
           // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            var currUserId_Logged = $("#_oUserId_Logged").data("value");

           // var currParBodyId = null;
            if (currDenomId == null) currDenomId = $("#_oAppGloOwnId_Logged").data("value");
            if (currChurchBodyId == null) currChurchBodyId = $("#_oChurchBodyId_Logged").data("value");

            //alert('currDenomId: ' + currDenomId)
            //alert('currChurchBodyId: ' + currChurchBodyId)
            //alert('currUserId_Logged: ' + currUserId_Logged)

            if (currId < 0) currId = null;
            if (currDenomId < 0) currDenomId = null;
            if (currChurchBodyId < 0) currChurchBodyId = null;

            //if (currChuBodyId < 0) currChuBodyId = null;
            // if (currSetIndex < 0) currSetIndex = null;
            //if (currSubSetIndex < 0) currSubSetIndex = null;


            // public IActionResult AddOrEdit_CB(int id = 0, int? oAppGloOwnId = null, int? oAGOId_Logged = null, int? oCBId_Logged = null, int? oUserId_Logged = null)
            @*var url = "@Url.Action("AddOrEdit_CB", "ClientSetupParameters")?id=" + currId + "&oAppGloOwnId=" + currDenomId + //"&pageIndex=" + _pageIndex +
                                            "&oAGOId_Logged=" + currAGOId_Logged + "&oCBId_Logged=" + currCBId_Logged + "&oUserId_Logged=" + currUserId_Logged;*@

            // public IActionResult AddOrEdit_CB(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null, int? setIndex = 0)
            var url = "@Url.Action("AddOrEdit_CB", "ClientSetupParameters")?id=" + currId +
                "&oAppGloOwnId=" + currDenomId + "&oChurchBodyId=" + currChurchBodyId + "&oUserId=" + currUserId_Logged + "&setIndex=" + setIndex;


                     //   alert(url)

                       // if (currId > 0) { document.querySelector('#btnSaveChanges').innerHTML = 'Update'; }
            if (currId > 0) { $('#btnSaveChanges').html('Update'); }

                      //  alert(url)

            $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        //$("#_setIndex").val(setIndex);
                        //$('#divModalBody_AddEdit').load(url, function () {

           $('#divPopModal_AddEdit .modal-body').load(url, function () {
               $('#divPopModal_AddEdit .modal-title').html(_strItemName);

               // alert('load level..')
              // triggerChurchLevel();  // $('#_ChurchLevelId').change();

               triggerParentChurchLevel();

               if (!$("#chk_IsFullAutonomy1").is(":checked")) {
                   triggerIsFullAutonomy();
               }

               if (!$("#chk_IsSupervisedByParentBody_sup").is(":checked")) {
                    triggerIsSupervisedByParentBody();
               }


              // triggerChurchLevel_sup();

               //
               $('#_CountryId').change();

              // $('#_chk_IsFullAutonomy').change();
             //  $('#_chk_IsSupervisedByParentBody').change();
             //  $('#_numSupervisedByBodyCLId_sup').change();

               $("#divPopModal_AddEdit").modal('show');

               //alert(' ORG :- ' + $('_OrgType').val())
               //$('#_OrgType').prop('disabled', ($('_OrgType').val() == 'CH' || $('_OrgType').val() == 'CN'));
               //$('#_ChurchLevelId').prop('disabled', ($('_OrgType').val() == 'CH' || $('_OrgType').val() == 'CN'));
           });

        };

       var ReloadCurrPage_CB = function (currSetIndex = 7, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
            // alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CB').load(url, function () {

                //$("#tabData_CBA").DataTable({
                //    "responsive": true,
                //    "autoWidth": false,
                //    //"paging": true,
                //    //"lengthChange": false,
                //    //"searching": false,
                //    //  "orderable": true,
                //    //"info": true,
                //    "columnDefs": [{
                //        "targets": [0, 5],
                //        "orderable": false,
                //    }]
                //});

            });
        }

        @*var ReloadCurrPage_CB = function (currSetIndex, currSubSetIndex) {
                // public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0)
                window.location.href = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex; // + '&oChuCategId=' + chuCategId + '&oShowAllCong=' + showAllCong;
        }*@

        //$(document).on('click', '#btnSaveChanges', function (e) {
        //    e.preventDefault();

        //    alert('click..');

        //    const form = document.getElementById("currForm_CB");

        //    if (form.checkValidity() === true) {

        //        SaveCurr_CB(); //currSetIndex, currSubSetIndex);
        //    }
        //    else {
        //       // alert('val 5')+*

        //        event.preventDefault();
        //        event.stopPropagation();

        //        form.classList.add('was-validated');
        //    }


        //   // }, false);
        //})

        var SaveCurr_CB = function (_setIndex) { // (currSetIndex, currSubSetIndex) {
           // alert('saving CB/A... ');

            var f_name = 'currForm_CBA';
            if (_setIndex == 3) f_name = 'currForm_CB';
            var currFormData = new FormData($('#' + f_name).get(0));

            // var currFormData = $("#currForm_CB").serialize();

           // alert('save... submitting...');

            $.ajax({
                type: 'POST',
                // data: formdata,
                // processData: false,

                url: '@Url.Action("AddOrEdit_CB", "ClientSetupParameters")',

               // url: "/ClientSetupParameters/AddOrEdit_CB",
                data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                contentType: false,
                processData: false,
                success: function (res) {

                    if (res.taskSuccess == true) {
                        //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_AGO").val();
                        //   alert(res.userMess)
                        DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);

                        // document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update';  // $('#btnSaveChanges_AGO').html('Update'); //var AddEditCurrData_AGO = function (currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

                        if (res.resetNew == true) {
                            var _desc = "'[New] Church Body'";
                            var _denomId = $("#_hdnAppGloOwnId").val();

                            var currSetIndex = $("#_setIndex").val();
                         //   alert('currSetIndex: ' + currSetIndex)

                            var _churchBodyId = null; // $("#_oChurchBodyId_Logged").data("value");  // $("#_oChurchBodyId_Logged").val();
                            if (parseInt(currSetIndex) == 3)
                                _churchBodyId = $("#_hdnCurrId_CB").val();
                            else if (parseInt(currSetIndex) == 4)
                                _churchBodyId = $("#_hdnCurrId_CBA").val();

                            AddEditCurrData_CB(0, _denomId, _churchBodyId, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                        }
                        else {
                            //$("#btnSaveChanges_AGO").prop();
                            // alert('closing...')
                            $("#divPopModal_AddEdit .close").click();
                        }

                        //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                    }

                    else //if (res.taskSuccess == false)
                    {
                        $.alert({
                            title: 'Oops!',
                            content: res.userMess,
                            type: 'red',
                            typeAnimated: true,
                        });

                        // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                        // $("#lblUserMessage").text(msg);
                    }

                }
            })
        }


        var SynchChurchParameters_CB = function () {
           // alert('saving CB/A... ');

            var f_name = 'currForm_vwCB';
            //if (_setIndex == 3) f_name = 'currForm_CB';
            var currFormData = new FormData($('#' + f_name).get(0));

            // var currFormData = $("#currForm_CB").serialize();

           // alert('save... submitting...');

            $.ajax({
                type: 'POST',
                // data: formdata,
                // processData: false,

                url: '@Url.Action("UpdateChurchNetworkParameters_CB", "ClientSetupParameters")',

               // url: "/ClientSetupParameters/AddOrEdit_CB",
                data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                contentType: false,
                processData: false,
                success: function (res) {

                    if (res.taskSuccess == true) {

                        DisplaySuccessInfo(res.userMess);
                    }

                    else
                    {
                        $.alert({
                            title: 'Oops!',
                            content: res.userMess,
                            type: 'red',
                            typeAnimated: true,
                        });
                    }

                }
            })
        }

        var ResetChurchNetwork_CB = function () {
           // alert('saving CB/A... ');

            var f_name = 'currForm_vwCB';
            //if (_setIndex == 3) f_name = 'currForm_CB';
            var currFormData = new FormData($('#' + f_name).get(0));

            // var currFormData = $("#currForm_CB").serialize();

         //  alert('save... submitting...');

            $.ajax({
                type: 'POST',
                // data: formdata,
                // processData: false,

                url: '@Url.Action("ResetToDefaultsOrgStruct_CB", "ClientSetupParameters")',

               // url: "/ClientSetupParameters/AddOrEdit_CB",
                data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                contentType: false,
                processData: false,
                success: function (res) {

                    if (res.taskSuccess == true) {

                        DisplaySuccessInfo(res.userMess);
                    }

                    else
                    {
                        $.alert({
                            title: 'Oops!',
                            content: res.userMess,
                            type: 'red',
                            typeAnimated: true,
                        });
                    }

                }
            })
        }

    </script>

    <script>

        $(document).on('change', '#_CountryId', function (e) {
            e.preventDefault();

         var _ctryId = $("#_CountryId").val();

            var hdn_CountryRegionId = $('#hdn_CountryRegionId').val();

         //  alert('ctryId: ' + _ctryId);

            var url = '@Url.Action("GetCountryRegionsByCountry", "ClientSetupParameters")'; // '@Url.Content("~/")' + 'ClientSetupParameters/GetCountryRegionsByCountry';
            $('#_CountryRegionId').empty();
            //GetCountryRegionsByCountry( int? ctryId, bool addEmpty = false)
            $.getJSON(url, { ctryId: _ctryId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, ctryReg) {
                        items += "<option value='" + ctryReg.value + "'>" + ctryReg.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                 //   alert(items)
                    $('#_CountryRegionId').html(items);

                    $('#_CountryRegionId').val(hdn_CountryRegionId);
                }
            });
        })

        $(document).on('change', '#chk_IsFullAutonomy1', function (e) {
           // e.preventDefault();
          //  alert('sup Full Auto CHK ...')
            triggerIsFullAutonomy();
        });

        $(document).on('change', '#chk_IsSupervisedByParentBody_sup', function (e) {
           // e.preventDefault();
           // alert('sup Par CB CHK...' + $("#chk_IsSupervisedByParentBody_sup").is(":checked"))

            triggerIsSupervisedByParentBody();
        });


        var triggerIsFullAutonomy = function () {
          //  alert('sup Full Auto ...')

            var isFullChk = $("#chk_IsFullAutonomy1").is(":checked");
           // alert('isFullChk: ' + isFullChk)


            //if (!valType) {
            //    $('#chk_IsSupervisedByParentBody').prop('checked', !valType);
            //}
            var isParChk = $("#chk_IsSupervisedByParentBody_sup").is(":checked");
          //  alert('isParChk: ' + isParChk)
            var isHideSup = true;
            if (!isFullChk) {
                if (!isParChk){
                    isHideSup = false;
                }
            }
          //  alert('isHideSup: ' + isHideSup)
            $('#_divSupervisedByBody_sup').prop('hidden', isHideSup);
            $('#_divIsSupervisedByParentBody').prop('hidden', isFullChk);
        }

        var triggerIsSupervisedByParentBody = function () {
          //  alert('sup CB ...')

            var isHideSup = $("#chk_IsSupervisedByParentBody_sup").is(":checked");
            //alert('sup Par CB isHideSup ... ' + isHideSup)
            $('#_divSupervisedByBody_sup').prop('hidden', isHideSup);
           // alert('sup isHideSup ... ' + isHideSup)
            if (!isHideSup) {
                $('#_numSupervisedByBodyCLId_sup').change();
            }
        }

        $(document).on('change', '#_ChurchBodyId_4', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex').val();
           // alert('con numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 4) {  // Congregation
                var str1 = "Choose Church Body";
                if ($('#_ChurchBodyId_4').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_4").options[document.getElementById('_ChurchBodyId_4').selectedIndex].text;
                }
               // alert('str CON: ' + str1)
                document.getElementById('_strParentChurchBody').innerHTML = str1;
                $('#_numParentChurchBodyId').val($('#_ChurchBodyId_4').val());
                return false;
            }

           //  alert('_ChurchBodyId_4: ' + $("#_ChurchBodyId_4").val())

             var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_4").val();
             var hdn_ChurchBodyId_5 = $('#hdn_ChurchBodyId_5').val();
           //  alert('4. parentCBId: ' + parentCBId);

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_5').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_5').html(items);
                    $('#_ChurchBodyId_5').val(hdn_ChurchBodyId_5);


                    ////if ($("#_div_ChurchBodyId_6").is(":hidden") == false) {
                    //var numCHLevelIndex = $('#_numCLIndex').val();
                    //if (numCHLevelIndex > 5) {
                    //    $('#_ChurchBodyId_5').change();
                    //}
                    //else {
                    //    var str1 = "Choose Church Body";
                    //    if ($('#_ChurchBodyId_5').val() != '') {
                    //        str1 = document.getElementById("_ChurchBodyId_5").options[document.getElementById('_ChurchBodyId_5').selectedIndex].text;
                    //    }
                    //    // alert('str CON: ' + str1)
                    //    document.getElementById('_strParentChurchBody').innerHTML = str1;
                    //    $('#_numParentChurchBodyId').val($('#_ChurchBodyId_5').val());
                    //}

                }
            });
        })

        $(document).on('change', '#_ChurchBodyId_3', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex').val();
           // alert('dis numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 3) {  // district
                var str1 = "Choose Church Body";
                if ($('#_ChurchBodyId_3').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_3").options[document.getElementById('_ChurchBodyId_3').selectedIndex].text;
                }
               // alert('str DIS: ' + str1)
                document.getElementById('_strParentChurchBody').innerHTML = str1;
                $('#_numParentChurchBodyId').val($('#_ChurchBodyId_3').val());
                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_3").val();
             var hdn_ChurchBodyId_4 = $('#hdn_ChurchBodyId_4').val();
           //  alert('_ChurchBodyId_3: ' + $("#_ChurchBodyId_3").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_4').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_4').html(items);

                    $('#_ChurchBodyId_4').val(hdn_ChurchBodyId_4);

                 //   if ($("#_div_ChurchBodyId_5").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex').val();
                    if (numCHLevelIndex > 4) {
                        $('#_ChurchBodyId_4').change();
                    }
                    else {
                        var str1 = "Choose Church Body";
                        if ($('#_ChurchBodyId_4').val() != '') {
                            str1 = document.getElementById("_ChurchBodyId_4").options[document.getElementById('_ChurchBodyId_4').selectedIndex].text;
                        }
                        // alert('str CON: ' + str1)
                        document.getElementById('_strParentChurchBody').innerHTML = str1;
                        $('#_numParentChurchBodyId').val($('#_ChurchBodyId_4').val());
                    }
                }
            });
         })

        $(document).on('change', '#_ChurchBodyId_2', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex').val();
          //  alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 2) {  // presbytery
                var str1 = "Choose Church Body";
                if ($('#_ChurchBodyId_2').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_2").options[document.getElementById('_ChurchBodyId_2').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strParentChurchBody').innerHTML = str1;
                $('#_numParentChurchBodyId').val($('#_ChurchBodyId_2').val());
                return false;
            }


            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
             var parentCBId = $("#_ChurchBodyId_2").val();

             var hdn_ChurchBodyId_3 = $('#hdn_ChurchBodyId_3').val();
          //   alert('_ChurchBodyId_2: ' + $("#_ChurchBodyId_2").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_3').empty();

            //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_3').html(items);
                    $('#_ChurchBodyId_3').val(hdn_ChurchBodyId_3);

                    //if ($("#_div_ChurchBodyId_4").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex').val();
                    if (numCHLevelIndex > 3) {
                        $('#_ChurchBodyId_3').change();
                    }
                    else {
                        var str1 = "Choose Church Body";
                        if ($('#_ChurchBodyId_3').val() != '') {
                            str1 = document.getElementById("_ChurchBodyId_3").options[document.getElementById('_ChurchBodyId_3').selectedIndex].text;
                        }
                        // alert('str DIS: ' + str1)
                        document.getElementById('_strParentChurchBody').innerHTML = str1;
                        $('#_numParentChurchBodyId').val($('#_ChurchBodyId_3').val());
                    }
                }
            });
        })

        $(document).on('change', '#_ChurchLevelId', function (e) {
            e.preventDefault();

            triggerChurchLevel();
        })

        var triggerChurchLevel = function () {

           // alert('CL triggered')
            //var numCBId = $('#_numParentUnitCBId').val();
            //var strCBName = $('#_strParentUnitCB').val();
            //$('#_numParentUnitCBId').val(numCBId);
            //$('#_strParentUnitCB').val(strCBName);

            var str1 = document.getElementById("_ChurchLevelId").options[document.getElementById('_ChurchLevelId').selectedIndex].text;
            document.getElementById('_lblParentChurchBody').innerHTML = "Parent Church Body (" + str1 + ")";

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var churchLevelId = $("#_ChurchLevelId").val();

          // alert('_numParentUnitCLId: ' + churchLevelId);
          // alert('currDenomId: ' + currDenomId);

            //  public JsonResult GetChurchLevelIndexByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false)
            var url = '@Url.Action("GetChurchLevelIndexByChurchLevel", "ClientSetupParameters")';

             //   $('#_ChurchBodyId_2').empty();

             //document.getElementById('_CountryId').value = '';
            $.getJSON(url, { oChurchLevelId: churchLevelId, oAppGloOwnId: currDenomId }, function (res) {
                if (res != null) {  // alert(res.taskSuccess);  alert(res.strResId); alert(res.strRes);
                    // document.getElementById('_CountryId').value = res.strResId;    // return Json(new { taskSuccess = res, numResLev = _numResLev, strRes = _strRes });

                    var CHLevelIndex = 0;
                     if (res.numResLev != null) {
                         CHLevelIndex = res.numResLev; // - 1;
                       //  $('#_numCLIndex').val(res.numResLev);
                       //  $('#_oCBLevelCount').val(CHLevelIndex);
                    }


                    //  alert('CHLevelIndex: ' + CHLevelIndex);
                    //
                    $('#_div_ChurchBodyId_1').prop('hidden', !(CHLevelIndex >= 1));
                    $('#_div_ChurchBodyId_2').prop('hidden', !(CHLevelIndex >= 2));
                    $('#_div_ChurchBodyId_3').prop('hidden', !(CHLevelIndex >= 3));
                    $('#_div_ChurchBodyId_4').prop('hidden', !(CHLevelIndex >= 4));
                    $('#_div_ChurchBodyId_5').prop('hidden', !(CHLevelIndex >= 5));
                    ///
                    //if ($("#_div_ChurchBodyId_2").is(":hidden") == false) {
                    //    alert('visible... trigger')

                    initChurchBodyListLookUp();

                    //  $('#_CountryId').change();

                    // $('#_CountryId').trigger('change');
                    //}
                }
                else {

                   // alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);
                    var str1 = "None. [choose church body]";
                    //if ($('#_ChurchBodyId_1').val() != '') {
                    //    str1 = document.getElementById("_ChurchBodyId_1").options[document.getElementById('_ChurchBodyId_1').selectedIndex].text;
                    //}
                   // alert('str1: ' + str1)

                    document.getElementById('_strParentChurchBody').innerHTML = str1;
                    $('#_numParentChurchBodyId').val(null);
                }
            });
        }

        var initChurchBodyListLookUp = function () {

            var numCHLevelIndex = $('#_numCLIndex').val();
          //  alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 1) {  // HQ

                var str1 = "Choose Church Body";
                if ($('#_strChurchBody_1').val() != '') {
                    str1 = $('#_strChurchBody_1').val();
                }
                // alert('str1 HQ: ' + str1)
                document.getElementById('_strParentChurchBody').innerHTML = str1;
                $('#_numParentChurchBodyId').val($('#_ChurchBodyId_1').val());
                return false;
            }

            var url = '@Url.Action("GetInitChurchBodyListByAppGloOwn", "ClientSetupParameters")';

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
           // var churchLevelId = $("#_numParentUnitCLId").val();

           // var tempChurchId_2 = $('#_ChurchBodyId_2').val();

           var hdn_ChurchBodyId_2 = $('#hdn_ChurchBodyId_2').val();

          //  alert('bf: ' + tempChurchId_2)
          //  alert('bf: ' + tempChurchId_2 + ' ...  bf hdn: ' + hdn_ChurchBodyId_2)

            $('#_ChurchBodyId_2').empty();
            //   public JsonResult GetInitChurchBodyListByAppGloOwn(int? oAppGloOwnId, bool addEmpty = false)
            $.getJSON(url, { oAppGloOwnId: currDenomId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_2').html(items);

                  //  alert('af: ' + tempChurchId_2)
                  //  alert('af: ' + tempChurchId_2 + ' ... af hdn: ' + hdn_ChurchBodyId_2)

                   // alert('hdn2: ' + $('#hdn_ChurchBodyId_2').val())

                    $('#_ChurchBodyId_2').val(hdn_ChurchBodyId_2);

                   // if ($("#_div_ChurchBodyId_3").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex').val();
                    if (numCHLevelIndex > 2) {
                        // alert('trig 2...')
                        $('#_ChurchBodyId_2').change();
                    }
                    else {
                        var str1 = "Choose Church Body";
                        if ($('#_ChurchBodyId_2').val() != '') {
                            str1 = document.getElementById("_ChurchBodyId_2").options[document.getElementById('_ChurchBodyId_2').selectedIndex].text;
                        }
                        //  alert('str PRB: ' + str1)
                        document.getElementById('_strParentChurchBody').innerHTML = str1;
                        $('#_numParentChurchBodyId').val($('#_ChurchBodyId_2').val());
                    }
                }
            });
        }

        var returnChurchBodyRootCode = function (numCBId) {

            if (numCBId == null || numCBId == '') {

                var currDenomId = $("#_oAppGloOwnId_Logged").data("value");

                     //  public JsonResult GetChurchBodyRootCodeByCBId_json(int? oChurchBodyId, int? oAGOId)
                     var url = '@Url.Action("GetChurchBodyRootCodeByCBId_json", "ClientSetupParameters")';
                     $.getJSON(url, { oChurchBodyId: numCBId, oAGOId: currDenomId }, function (res) {
                         if (res != null) {
                             return res.strRoot;
                         }
                     });
            }

            return "";
        }


        /// parent....par CB    /////////
        var triggerParentChurchLevel = function () {

           //  alert('CL par triggered')
            //var numCBId = $('#_numParentUnitCBId').val();
            //var strCBName = $('#_strParentUnitCB').val();
            //$('#_numParentUnitCBId').val(numCBId);
            //$('#_strParentUnitCB').val(strCBName);

          //  var str1 = document.getElementById("_numParentBodyCLId_par").options[document.getElementById('_numParentBodyCLId_par').selectedIndex].text;
          //  alert('str1: ' + str1)

          //  document.getElementById('_lblParentChurchBody').innerHTML = "Parent Church Body (" + str1 + ")";

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var churchLevelId = $("#_numParentBodyCLId_par").val();

          //  alert('_numParentBodyCLId_par: ' + churchLevelId);
          // alert('currDenomId: ' + currDenomId);

            //  public JsonResult GetChurchLevelIndexByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false)
            var url = '@Url.Action("GetChurchLevelIndexByChurchLevel", "ClientSetupParameters")';

          //  $('#_ChurchBodyId_2').empty();

             //document.getElementById('_CountryId').value = '';
            $.getJSON(url, { oChurchLevelId: churchLevelId, oAppGloOwnId: currDenomId }, function (res) {
                if (res != null) {  // alert(res.taskSuccess);  alert(res.strResId); alert(res.strRes);
                    // document.getElementById('_CountryId').value = res.strResId;    // return Json(new { taskSuccess = res, numResLev = _numResLev, strRes = _strRes });

                    var CHLevelIndex = 0;
                     if (res.numResLev != null) {
                         CHLevelIndex = res.numResLev; // - 1;
                        // $('#_numCLIndex').val(res.numResLev);
                       //  $('#_oCBLevelCount').val(CHLevelIndex);
                    }


                   //   alert('CHLevelIndex: ' + CHLevelIndex);
                    //
                    $('#_div_ChurchBodyId_1_par').prop('hidden', !(CHLevelIndex >= 1));
                    $('#_div_ChurchBodyId_2_par').prop('hidden', !(CHLevelIndex >= 2));
                    $('#_div_ChurchBodyId_3_par').prop('hidden', !(CHLevelIndex >= 3));
                    $('#_div_ChurchBodyId_4_par').prop('hidden', !(CHLevelIndex >= 4));
                    $('#_div_ChurchBodyId_5_par').prop('hidden', !(CHLevelIndex >= 5));
                    ///
                    //if ($("#_div_ChurchBodyId_2").is(":hidden") == false) {
                    //    alert('visible... trigger')

                   // initChurchBodyListLookUp_par();

                    //  $('#_CountryId').change();

                    // $('#_CountryId').trigger('change');
                    //}
                }
                else {

                  //  alert('HQ. numCHLevelIndex: err');
                    var str1 = "None."; // [Choose Church Body]";
                    //if ($('#_ChurchBodyId_1').val() != '') {
                    //    str1 = document.getElementById("_ChurchBodyId_1").options[document.getElementById('_ChurchBodyId_1').selectedIndex].text;
                    //}
                   // alert('str1: ' + str1)
                    document.getElementById('_strParentChurchBody_par').innerHTML = str1;
                    $('#_numParentChurchBodyId_par').val(null);
                }
            });
        }


        /// supervise....CB /////////

        $(document).on('change', '#_ChurchBodyId_4_sup', function (e) {
            e.preventDefault();

           //  alert('_ChurchBodyId_4_sup: ' + $("#_ChurchBodyId_4_sup").val())

            var numCHLevelIndex = $('#_numCLIndex').val();
           // alert('CN. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 4) {  // cong
                var str1 = "Choose Church Body";
                if ($('#_ChurchBodyId_4_sup').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_4_sup").options[document.getElementById('_ChurchBodyId_4_sup').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_4_sup').val());
                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_4_sup").val();
            var hdn_ChurchBodyId_5_sup = $('#hdn_ChurchBodyId_5_sup').val();


            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_5_sup').empty();

              //public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_5_sup').html(items);
                    $('#_ChurchBodyId_5_sup').val(hdn_ChurchBodyId_5_sup);

                  //  alert('5. numCHLevelIndex: ' + numCHLevelIndex)
                    ////if ($("#_div_ChurchBodyId_6").is(":hidden") == false) {
                    //var numCHLevelIndex = $('#_numCLIndex').val();
                    //if (numCHLevelIndex > 5) {
                    //    $('#_ChurchBodyId_5_sup').change();
                    //}
                    //else {
                    //    var str1 = "Choose Church Body";
                    //    if ($('#_ChurchBodyId_5').val() != '') {
                    //        str1 = document.getElementById("_ChurchBodyId_5").options[document.getElementById('_ChurchBodyId_5').selectedIndex].text;
                    //    }
                    //    // alert('str CON: ' + str1)
                    //    document.getElementById('_strParentChurchBody').innerHTML = str1;
                    //    $('#_numParentChurchBodyId').val($('#_ChurchBodyId_5').val());
                    //}
                }
            });
        })

        $(document).on('change', '#_ChurchBodyId_3_sup', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex').val();
          //  alert('DS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 3) {  // presbytery
                var str1 = "Choose Church Body";
                if ($('#_ChurchBodyId_3_sup').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_3_sup").options[document.getElementById('_ChurchBodyId_3_sup').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_3_sup').val());
                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_3_sup").val();
            var hdn_ChurchBodyId_4_sup = $('#hdn_ChurchBodyId_4_sup').val();

           // alert('_ChurchBodyId_4_sup: ' + hdn_ChurchBodyId_4_sup)

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_4_sup').empty();

               //public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_4_sup').html(items);

                  //  alert('hdn_4_sup:- ' + hdn_ChurchBodyId_4_sup)
                    $('#_ChurchBodyId_4_sup').val(hdn_ChurchBodyId_4_sup);

                  //  alert('4. numCHLevelIndex: ' + numCHLevelIndex)
                  //  if ($("#_div_ChurchBodyId_5_sup").is(":hidden") == false) {
                  //  var numCHLevelIndex = $('#_numCLIndex').val();
                    if (numCHLevelIndex > 4) {
                        $('#_ChurchBodyId_4_sup').change();
                    }
                    else {
                        var str1 = "Choose Church Body";
                        if ($('#_ChurchBodyId_4_sup').val() != '') {
                            str1 = document.getElementById("_ChurchBodyId_4_sup").options[document.getElementById('_ChurchBodyId_4_sup').selectedIndex].text;
                        }
                        //  alert('str PRB: ' + str1)
                        document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                        $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_4_sup').val());
                    }
                }
            });
         })

        $(document).on('change', '#_ChurchBodyId_2_sup', function (e) {
            e.preventDefault();
          // alert(' triggered CB2...')

            var numCHLevelIndex = $('#_numCLIndex').val();
           // alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 2) {  // presbytery
                var str1 = "Choose Church Body";
                if ($('#_ChurchBodyId_2_sup').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_2_sup").options[document.getElementById('_ChurchBodyId_2_sup').selectedIndex].text;
                }
             //   alert('str PRB: ' + str1)
                document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_2_sup').val());
                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
             var parentCBId = $("#_ChurchBodyId_2_sup").val();
            //alert('parentCBId :' + parentCBId)
            var hdn_ChurchBodyId_3_sup = $('#hdn_ChurchBodyId_3_sup').val();

           // alert('_ChurchBodyId_3_sup: ' + hdn_ChurchBodyId_3_sup)

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_3_sup').empty();
            //public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_3_sup').html(items);

                  //  alert('hdn_3_sup:- ' + hdn_ChurchBodyId_3_sup)
                    $('#_ChurchBodyId_3_sup').val(hdn_ChurchBodyId_3_sup);

                   // alert('3. numCHLevelIndex: ' + numCHLevelIndex)
                    //if ($("#_div_ChurchBodyId_4_sup").is(":hidden") == false) {
                   // var numCHLevelIndex = $('#_numCLIndex').val();
                    if (numCHLevelIndex > 3) {
                        $('#_ChurchBodyId_3_sup').change();
                    }
                    else {
                        var str1 = "Choose Church Body";
                        if ($('#_ChurchBodyId_3_sup').val() != '') {
                            str1 = document.getElementById("_ChurchBodyId_3_sup").options[document.getElementById('_ChurchBodyId_3_sup').selectedIndex].text;
                        }
                        //  alert('str PRB: ' + str1)
                        document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                        $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_3_sup').val());
                    }
                }
            });
        })

        $(document).on('change', '#_numSupervisedByBodyCLId_sup', function (e) {
            e.preventDefault();

            triggerChurchLevel_sup();
        })

        var triggerChurchLevel_sup = function () {

          // alert('CL sup triggered')

            //var numCBId = $('#_numSupervisedByUnitCBId').val();
            //var strCBName = $('#_strSupervisedByUnitCB').val();
            //$('#_numSupervisedByUnitCBId').val(numCBId);
            //$('#_strSupervisedByUnitCB').val(strCBName);

           var churchLevelId = $("#_numSupervisedByBodyCLId_sup").val();
           // alert('_numSupervisedByBodyCLId: ' + churchLevelId);

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
          //  alert('currDenomId: ' + currDenomId);

            var str1 = document.getElementById("_numSupervisedByBodyCLId_sup").options[document.getElementById('_numSupervisedByBodyCLId_sup').selectedIndex].text;
           // alert('str1 - ' + str1 )

            document.getElementById('_lblSupervisedByChurchBody').innerHTML = "Supervising Body (" + str1 + ")";
          //  alert('str1 - ' + $('#_lblSupervisedByChurchBody').val())


            //  public JsonResult GetChurchLevelIndexByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false)
            var url = '@Url.Action("GetChurchLevelIndexByChurchLevel", "ClientSetupParameters")';

               // $('#_ChurchBodyId_2_sup').empty();

             //document.getElementById('_CountryId').value = '';
            $.getJSON(url, { oChurchLevelId: churchLevelId, oAppGloOwnId: currDenomId }, function (res) {
                if (res != null) {  // alert(res.taskSuccess);  alert(res.strResId); alert(res.strRes);
                    // document.getElementById('_CountryId').value = res.strResId;    // return Json(new { taskSuccess = res, numResLev = _numResLev, strRes = _strRes });

                    var CHLevelIndex = res.numResLev; //- 1;  target up to ..congregation
                    $('#_numCLIndex').val(res.numResLev);
                    $('#_oCBLevelCount_sup').val(CHLevelIndex); // jux to know which CB is being picked... and the level

                    // alert('CHLevelIndex: ' + CHLevelIndex);
                    //
                    $('#_div_ChurchBodyId_1_sup').prop('hidden', !(CHLevelIndex >= 1));  // HQ
                    ///
                    $('#_div_ChurchBodyId_2_sup').prop('hidden', !(CHLevelIndex >= 2));  // P
                    $('#_div_ChurchBodyId_3_sup').prop('hidden', !(CHLevelIndex >= 3));
                    $('#_div_ChurchBodyId_4_sup').prop('hidden', !(CHLevelIndex >= 4));
                    $('#_div_ChurchBodyId_5_sup').prop('hidden', !(CHLevelIndex >= 5));
                    ///
                    //if ($("#_div_ChurchBodyId_2_sup").is(":hidden") == false) {

                  //  alert('visible... trigger')

                    initChurchBodyListLookUp_sup();

                    //  $('#_CountryId').change();

                    // $('#_CountryId').trigger('change');
                    //}
                }
                else {
                    //var numCHLevelIndex = $('#_numCLIndex').val();
                    //  alert('HQ...CL numCHLevelIndex: ' + numCHLevelIndex);
                    var str1 = "Choose Supervising Body";

                    //if ($('#_ChurchBodyId_1_sup').val() != '') {
                    //    str1 = document.getElementById("_ChurchBodyId_1_sup").options[document.getElementById('_ChurchBodyId_1_sup').selectedIndex].text;
                    //}
                    // alert('str1: ' + str1)
                    document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                    $('#_numSupervisedByChurchBodyId_sup').val(null);
                }
            });
        }

        var initChurchBodyListLookUp_sup = function () {

            var numCHLevelIndex = $('#_numCLIndex').val();
         //   alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 1) {  // HQ
                var str1 = "Choose Church Body";
                if ($('#_strChurchBody_1_sup').val() != '') {
                    str1 = $('#_strChurchBody_1_sup').val();
                }
               // alert('str1 HQ: ' + str1)
                document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_1_sup').val());
               // $('#_strChurchBody_1_sup').val($('#hdn_ChurchBodyId_1_sup').val());
                return false;
            }

            var url = '@Url.Action("GetInitChurchBodyListByAppGloOwn", "ClientSetupParameters")';

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
           // var churchLevelId = $("#_numSupervisedByBodyCLId").val();

           // var tempChurchId_2 = $('#_ChurchBodyId_2_sup').val();
            var hdn_ChurchBodyId_2_sup = $('#hdn_ChurchBodyId_2_sup').val();

          //  alert('_ChurchBodyId_2_sup: ' + hdn_ChurchBodyId_2_sup)

          //  alert('bf: ' + tempChurchId_2)
          //  alert('bf: ' + tempChurchId_2 + ' ...  bf hdn: ' + hdn_ChurchBodyId_2_sup)

            $('#_ChurchBodyId_2_sup').empty();
            //   public JsonResult GetInitChurchBodyListByAppGloOwn(int? oAppGloOwnId, bool addEmpty = false)
            $.getJSON(url, { oAppGloOwnId: currDenomId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_2_sup').html(items);

                  //  alert('af: ' + tempChurchId_2)
                  //  alert('af: ' + tempChurchId_2 + ' ... af hdn: ' + hdn_ChurchBodyId_2_sup)

                   // alert('hdn_2_sup:- ' + hdn_ChurchBodyId_2_sup)

                    $('#_ChurchBodyId_2_sup').val(hdn_ChurchBodyId_2_sup);

                  //  alert('numCHLevelIndex: ' + numCHLevelIndex)
                   // var numCHLevelIndex = $('#_numCLIndex').val();
                    if (numCHLevelIndex > 2) {
                        $('#_ChurchBodyId_2_sup').change();
                    }
                    else {
                        var str1 = "Choose Church Body";
                        if ($('#_ChurchBodyId_2_sup').val() != '') {
                            str1 = document.getElementById("_ChurchBodyId_2_sup").options[document.getElementById('_ChurchBodyId_2_sup').selectedIndex].text;
                        }
                        //   alert('str PRB: ' + str1)
                        document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                        $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_2_sup').val());
                    }

                    //if ($("#_div_ChurchBodyId_3_sup").is(":hidden") == false) {
                    //   // alert('trig 2...')
                    //    $('#_ChurchBodyId_2_sup').change();
                    //}
                }
            });
        }

        var triggerSupervisedByUnitCL_sup = function () {

            var numCHLevelIndex = $('#_numCLIndex').val();
           // alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 1) {  // presbytery
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_1_sup').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_1_sup").options[document.getElementById('_ChurchBodyId_1_sup').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strSupervisedByChurchBody').innerHTML = str1;
                $('#_numSupervisedByChurchBodyId_sup').val($('#_ChurchBodyId_1_sup').val());
                return false;
            }

            var numCBId = $('#_numSupervisedByUnitCBId').val();
            var strCBName = $('#_strSupervisedByUnitCB').val();

            if (numCBId == null || numCBId == '' || strCBName == null || strCBName == '') {

                var currRootCode = $("#_strRootChurchBodyCode").val();
                ///
                if (currRootCode != null && currRootCode != '') {
                    var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
                    var churchLevelId = $("#_numSupervisedByBodyCLId").val();

                     //   public JsonResult GetSupervisedByUnitId_NameByRootCode_json(string strRootCode, int? oSupervisedByUnitCLId, int? oAGOId)
                     var url = '@Url.Action("GetSupervisedByUnitId_NameByRootCode_json", "ClientSetupParameters")';
                     $.getJSON(url, { strRootCode: currRootCode, oSupervisedByUnitCLId: churchLevelId, oAGOId: currDenomId }, function (res) {
                         if (res != null) {

                             var _strCBId_Name = res.strIdName;
                             var arr = _strCBId_Name.split('--');

                             //numCBId = null; var strCBName = '';
                             if (arr.length > 0) {
                                 numCBId = parseInt(arr[0]);
                                 if (arr.length > 1) {
                                     strCBName = arr[1];
                                 }
                             }

                         //    alert('SUP>> numCBId: ' + numCBId + ' :: strCBName: ' + strCBName)

                             $('#_numSupervisedByChurchBodyId_sup').val(numCBId);
                             $('#_strSupervisedByChurchBody').val(strCBName);
                             //
                            // loadChurchSupervisedByUnits(numCBId, currOrgType);
                         }
                     });
                }
            }

           // var currOrgType = $("#_strSupervisedByUnitOrgType").val();
           // if (numCBId == '') numCBId = null;

          //  loadChurchSupervisedByUnits(numCBId, currOrgType);
        }


    </script>


    <!-- CBA 4 no ADD, no DEL, only EDIT -->
    <script>
        $(function () {
            $("#tabData_CBA").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
                //  "orderable": true,
                //"info": true,
                "order": [],
                "columnDefs": [{
                    "targets": [0, 6],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CBA = function (currSetIndex = 7, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
           // alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CBA').load(url, function () {

                $("#tabData_CBA").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"paging": true,
                    //"lengthChange": false,
                    //"searching": false,
                    //  "orderable": true,
                    //"info": true,
                    "order": [],
                    "columnDefs": [{
                        "targets": [0, 5],
                        "orderable": false,
                    }]
                });

            });
        }

    </script>


    <!-- NVP 6 no ADD, no DEL, only EDIT -->
    <script>
        $(function () {
            $("#tabData_NVP").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"aaSorting": [],
                //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_NVP = function (currSetIndex = 6, currSubSetIndex = 1, strNVPCode = "", numNVP_ParentCategoryId = null) {
           // alert('reload... ' + currSetIndex)

            if (currSetIndex == 6) {
                if (strNVPCode == null || strNVPCode == "")
                    strNVPCode = $("#_currNVPCode").val();

                else if ((strNVPCode != null && strNVPCode != "") && strNVPCode != $("#_currNVPCode").val()) {
                    $("#_currNVPCode").val(strNVPCode);
                }

                if (strNVPCode == 'CLARD') {
                    if (numNVP_ParentCategoryId != null)
                        $("#_numNVP_ParentCategoryId").val(numNVP_ParentCategoryId);

                    else // if (numNVP_ParentCategoryId == null)
                        numNVP_ParentCategoryId = $("#_numNVP_ParentCategoryId").val();

                    //  alert("new 2: " + numNVP_ParentCategoryId)

                    var isHidden = $("#_numNVP_ParentCategoryId").is(":hidden", true);
                    if (isHidden || $("#_numNVP_ParentCategoryId").val() == null) {
                        $("#_numNVP_ParentCategoryIdTemp").val(numNVP_ParentCategoryId);
                        //
                        $("#_currNVPCode").change(); // trigger to reload list
                    }
                }
            }


            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&numCodeCriteria_1=' + numNVP_ParentCategoryId + '&strCodeCriteria_2=' + strNVPCode;
            var tabTag = '';
            //alert(url)

            switch (parseInt(currSetIndex)) {
                case 8: tabTag = "LSPK"; break;

                ///
                default: tabTag = "NVP"; break;
            }

            // $('#divTabData_NVP')   "#tabData_NVP";
            var divId = '#divTabData_' + tabTag;
            var tabId = "#tabData_" + tabTag;

            $(divId).load(url, function (e) {
                $(tabId).DataTable({  // reconstructing/ redraw the table
                        "responsive": true,
                        "autoWidth": false,
                        //"aaSorting": [],
                        //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                        "columnDefs": [{
                            "targets": [5],
                            "orderable": false,
                        }]
                    });
                });
        }

        var AddEditCurrData_NVP = function (currId, _strNVPTag, currNVPCode = '', numNVP_ParentCategoryId = 0) {   //_strItemName, currNVPTag = ''  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
            // alert("editing... "  + currNVPCode)

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");

            // if (currNVPCode == null || currNVPCode == "") currNVPCode = $("#_NVPCode").val();
            if (currNVPCode == null || currNVPCode == "") currNVPCode = $("#_currNVPCode").val();
            if (currNVPCode == 'CLARD') numNVP_ParentCategoryId = $("#_numNVP_ParentCategoryId").val();

            if (currId == 0) {

                var str1 = _strNVPTag;
                if (str1 == null || str1 == '')
                    document.getElementById("_currNVPCode").options[document.getElementById('_currNVPCode').selectedIndex].text;

                _strNVPTag = "[New] App Parameter :- " + str1; //+ ")";
            }

                if (currId < 0) currId = null;
             //  public IActionResult AddOrEdit_NVP(int id = 0, int ? oAppGloOwnId = null, int ? oChurchBodyId = null, int ? numCodeCriteria_1 = null, string strCodeCriteria_2 = null, int ? oUserId = null)

            var url = "@Url.Action("AddOrEdit_NVP", "ClientSetupParameters")?id=" + currId + "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged +
                        "&numCodeCriteria_1=" + numNVP_ParentCategoryId + "&strCodeCriteria_2=" + currNVPCode + "&oUserId=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_NVP').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_NVP').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $("#_NVPCode").val(currNVPCode);
                            $('#divPopModal_AddEdit .modal-title').html(_strNVPTag);
                            //
                            //var valType = $('#_setIndex').val();
                            //alert('valType: ' + valType)

                           // $('#_NVPCode').prop('disabled', !(valType == 0));
                            ///
                            $("#divPopModal_AddEdit").modal('show');

                        });
        };

        var SaveCurr_NVP = function () {
           // alert('save... ');

            const form = document.getElementById("currForm_NVP");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {
              //  alert('not valid')
                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
               // alert('about to save...');
                var currFormData = new FormData($("#currForm_NVP").get(0));

                // var currFormData = $("#currForm_NVP").serialize();
              // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_NVP", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_NVP",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                           //   alert(res.userMess)
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);

                            var valNVPCode = $("#_currNVPCode").val();
                            var valParamSetIndex = $('#_setIndex').val();
                            var valParamSubSetIndex = $('#_subSetIndex').val();
                            ReloadCurrPage_NVP(valParamSetIndex, valParamSubSetIndex, valNVPCode);   //via AJAX...

                            var _currParam = $("#_NVPCode").val();
                            var _desc = "'[New] App Parameter'";
                            if (res.resetNew == true) {
                                AddEditCurrData_NVP(0, _desc, _currParam); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            }
                            else {
                               // alert('closing...')
                                $("#divPopModal_AddEdit .close").click();
                            }
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });

                        }
                    }
                })
            }
        }

        var DeleteCurrData_NVP = function (currId, forceDeleteConfirm = false, msg = "") {
         // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");


            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified App Parameter' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_NVP", "ClientSetupParameters")',
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ///
                                        var valNVPCode = $("#_currNVPCode").val();
                                        var valParamSetIndex = $('#_setIndex').val();
                                        var valParamSubSetIndex = $('#_subSetIndex').val();
                                        ReloadCurrPage_NVP(valParamSetIndex, valParamSubSetIndex, valNVPCode);   //via AJAX... ReloadCurrPage_NVP(6, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_NVP(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },
                }
            });

        };

    </script>

    <script>

        $(document).on('change', '#_ValueType', function (e) {
            e.preventDefault();

            // alert('chk...')
            var valType = $('#_ValueType').val();
            //  alert('value type: ' + valType)

            $('#_NVPValue').prop('hidden', !(valType == 'T'));
            $('#_NVPNumVal').prop('hidden', !(valType == 'N'));
            $('#_NVPFromDate').prop('hidden', !(valType == 'D'));
            $('#_NVPToDate').prop('hidden', !(valType == 'D'));

        });

        $(document).on('change', '#_currNVPCode', function (e) {
            e.preventDefault();

            // alert('...reloading list')
            var _parId = $("#_currNVPCode").val();
            $('#_numNVP_ParentCategoryId').prop('hidden', !(_parId == 'CLARD'));

            var numNVP_ParentCategoryId = $("#_numNVP_ParentCategoryIdTemp").val();
          //  alert('init: ' + numNVP_ParentCategoryId)
            if (numNVP_ParentCategoryId == null) { numNVP_ParentCategoryId = $("#_numNVP_ParentCategoryId").val(); }
          //  alert('val2: ' + numNVP_ParentCategoryId);

           // alert('_parId: ' + _parId);
            if (_parId == 'CLARD') {
                var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetCLAsByNVPCode';

                var hdn_numNVP_ParentCategoryId = $('#_numNVP_ParentCategoryId').val();
                $('#_numNVP_ParentCategoryId').empty();
                // public JsonResult GetCLAsByNVPCode(string _parId, int? oAGOId = null, int? oCBId = null, bool addEmpty = false)
                var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
                var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
                $.getJSON(url, { parId: _parId, oAGOId: currAGOId_Logged, oCBId: currCBId_Logged, addEmpty: true}, function (data) {
                    if (Object.keys(data).length > 0)
                    {
                        var items = ''; var sel = 0;
                        $.each(data, function (i, oVal) {
                            items += "<option value='" + oVal.value +"'"; //>" + oVal.text; //+ "</option>";   // alert(items);
                            if (oVal.value == numNVP_ParentCategoryId && sel == 0) { items += " selected "; sel++; }
                            items += ">" + oVal.text + "</option>";
                        });

                        $('#_numNVP_ParentCategoryId').html(items);
                        $('#_numNVP_ParentCategoryId').val(hdn_numNVP_ParentCategoryId);

                    }
                });
            }
        });

    </script>


    <!-- CTRY 7.1 no ADD, no DEL, only EDIT -->
    <script>

        $(function () {
            $("#tabData_CTRY").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [3, 4, 5],
                    "orderable": false,
                }]
            });

            $("#tabData_CTRY_BLK").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [10, 11, 12],
                    "orderable": false,
                }]
            });
        });

        //LoadTable_CTRY();

        //var LoadTable_CTRY = function () {
        //    $("#tabData_CTRY").DataTable({
        //        "responsive": true,
        //        "autoWidth": false,
        //        "columnDefs": [{
        //            "targets": [4],
        //            "orderable": false,
        //        }]
        //    });
        //}

        var AddEditCurrData_CTRY = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
              //  alert('addORedit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               //   public IActionResult AddOrEdit_CTRY(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null)

                var url = "@Url.Action("AddOrEdit_CTRY", "ClientSetupParameters")?id=" + currId +
                                            "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged + "&oUserId=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_CTRY').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_CTRY').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                            $("#divPopModal_AddEdit").modal('show');
                        });

        };

        var ReloadCurrPage_CTRY = function (currSetIndex = 7, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
            // alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CTRY').load(url, function () {

                if (currPageIndex == 2) {
                    $("#tabData_CTRY_BLK").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [10, 11, 12],
                            "orderable": false,
                        }]
                    });
                }
                else {
                    $("#tabData_CTRY").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [3, 4, 5],
                            "orderable": false,
                        }]
                    });
                }
            });

            //if (currPageIndex != 1) {
            //    $('#tabSectionMod_CTRY').hide();
            //}
        }

        $(document).on('click', '#btnSaveChanges_CTRY_BLK', function (e) {
            e.preventDefault();

           // alert('click..');
              SaveCurr_CTRY();
        })

        var SaveCurr_CTRY = function () { // (currSetIndex, currSubSetIndex) {

           // alert('save... ');
          //  var currFormData = new FormData($("#currForm_CTRY_BLK").get(0));

            var currFormData = $("#currForm_CTRY_BLK").serializeArray();
            //var parameters = [];
            var tbl = $('#tabData_CTRY_BLK').DataTable();
            var tbl_data = tbl.$('input, select').serializeArray();

            //   alert("tab len: " + tbl_data.length);

            //$.each(tbl_data, function (i, tab_f) {
            //    alert('tab...');
            //    alert(tab_f.name + ' == ' + tab_f.value);
            //});


            //{ title = "_rowdata" }  $('input[name!=security]', this).serialize();

           // var currFormData = $("#currForm_CTRY_BLK").serializeArray();

            // var formdata = $('#currForm_Attendee').find('input[title!=_rowdata]').serializeArray();
            // var formdata = $("#currForm_Attendee :not(.row-hide) > :input").serializeArray();
            //  var formdata = $("#currForm_Attendee :not(.row-hide)").serializeArray();
            //   var formdata = $("#currForm_Attendee").not(".row-hide").serializeArray();

            //   alert("len 1: " + formdata.length);
            //$.each(formdata, function (i, field) {
            //       alert(field.name + ' == ' + field.value);
            //})
            //  $.each(formdata, function (i, field) {
            //   alert(field.name + ' == ' + field.value);


          //  var counter = 0; var counterIn = 0;

            $.each(tbl_data, function (i, tab_f) {
                // alert('tab...');
                // alert(tab_f.name + ' == ' + tab_f.value);

              //  counter++;

                // if (field.name == tab_f.name) {
                // formdata.push({ name: tab_f.name, value: tab_f.value });

                // formdata.append(tab_f.name, tab_f.value);

                var attr_found = false;
                $.each(currFormData, function (i, field) {
                    //
                    if (field.name == tab_f.name) {
                        // alert(field.name + ' == ' + tab_f.name);
                        field.value = tab_f.value;
                        attr_found = true;

                       // counterIn++;
                        return false;
                    }
                });

                // alert('attr_found: ' + attr_found);
                if (attr_found == false) {
                   // alert('adding.. ' + tab_f.name)
                    //  formdata.append(tab_f.name, tab_f.value);

                    currFormData.push({ name: tab_f.name, value: tab_f.value });
                }

                // field.value = tab_f.value;
                // formdata[field.name] = tab_f.value;
                // }
            });

           // var _data = JSON.stringify(parameters);
            alert('finally... serialized... save');
          //  alert('finally... save:- ' + counter + " ... counterIn:- " + counterIn)


            $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,
                    url: '@Url.Action("AddOrEdit_CTRY_BLK", "ClientSetupParameters")',
                   // url: "/ClientSetupParameters/AddOrEdit_CTRY",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                   // contentType: false,
                   // processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_CTRY(7, 1, 2);   //via AJAX...

                            //var _desc = "'[New] Country'";

                            //if (res.resetNew == true) {
                            //    AddEditCurrData_CTRY(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            //}
                            //else {
                            //    $("#divPopModal_AddEdit .close").click();
                            //}

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });
                        }
                    }
            })


        }

        var DeleteCurrData_CTRY = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified country' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CTRY", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_CTRY",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_CTRY(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CTRY(7, 1, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CTRY(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>

    <!-- CTRY_RGN 7.2 no ADD, no DEL, only EDIT -->
    <script>
        //LoadTable_CTRY_RGN();

        $(function () {
            $("#tabData_CTRY_RGN").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
              //  "orderable": true,
                //"info": true,
                "order": [],
                "columnDefs": [{
                    "targets": [0, 1, 2],
                    "orderable": false,
                }]
            });
        });


        var AddEditCurrData_CTRY_RGN = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
           //    alert('add OR edit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
            var currCountryCode = $("#_currCountryCode").val();
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               // public IActionResult AddOrEdit_CTRY_RGN (int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, string strCodeCriteria_2 = null, int? oUserId = null)

                var url = "@Url.Action("AddOrEdit_CTRY_RGN", "ClientSetupParameters")?id=" + currId +
                                            "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged + "&strCodeCriteria_2=" + currCountryCode + "&oUserId=" + currUserId_Logged ;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_CTRY_RGN').innerHTML = 'Update'; }
            if (currId > 0) { $('#btnSaveChanges').html('Update'); }

            $('#divPopModal_AddEdit').modal({
                backdrop: 'static',
                keyboard: false
            });
                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                handle: ".modal-header"
            });

            //alert('loading modal...')
            $('#divPopModal_AddEdit .modal-body').load(url, function () {

                $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                $("#divPopModal_AddEdit").modal('show');
            });

        };

        var ReloadCurrPage_CTRY_RGN = function (currSetIndex = 7, currSubSetIndex = 2, ctryCode = "") {
          // alert('reload.. ' )
          //  alert('reload.. ' + ctryCode)

            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            if (ctryCode == null || ctryCode == "") ctryCode = $("#_currCountryCode").val();
          //  alert('reload in:.. ' + ctryCode)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + ctryCode;

            // tabData_CTRY
            $('#divTabData_CTRY_RGN').load(url, function (e) {
               // e.preventDefault();

                $("#tabData_CTRY_RGN").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"paging": true,
                    //"lengthChange": false,
                    //"searching": false,
                    //"ordering": true,
                    //"info": true,
                    "order": [],
                    "columnDefs": [{
                        "targets": [0, 1, 2],
                        "orderable": false,
                    }]
                });
            });
        }

        var SaveCurr_CTRY_RGN = function () { // (currSetIndex, currSubSetIndex) {
            // alert('save... ');

            const form = document.getElementById("currForm_CTRY_RGN");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {

                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
                var currFormData = new FormData($("#currForm_CTRY_RGN").get(0));
                // var currFormData = $("#currForm_CTRY_RGN").serialize();
               // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_CTRY_RGN", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_CTRY_RGN",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_CTRY_RGN(7, 2);   //via AJAX...
                            var _desc = "'[New] Country Region'";

                            if (res.resetNew == true) {
                                AddEditCurrData_CTRY_RGN(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            }
                            else {
                                $("#divPopModal_AddEdit .close").click();
                            }

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });
                        }
                    }
                })
            }
        }

        var DeleteCurrData_CTRY_RGN = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified country region' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CTRY_RGN", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_CTRY_RGN",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_CTRY_RGN(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CTRY_RGN(7, 2);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CTRY_RGN(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>

    <!-- CURR 7.3 no ADD, no DEL, only EDIT -->
    <script>

          $(function () {
              $("#tabData_CURR").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [4, 5, 6],
                    "orderable": false,
                }]
              });

              $("#tabData_CURR_BLK").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [10, 11, 12],
                    "orderable": false,
                }]
              });
          });


        //LoadTable_CURR();

        //var LoadTable_CURR = function () {
        //    $("#tabData_CURR").DataTable({
        //        "responsive": true,
        //        "autoWidth": false,
        //        "columnDefs": [{
        //            "targets": [4],
        //            "orderable": false,
        //        }]
        //    });
        //}

        var AddEditCurrData_CURR = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
               // alert('addORedit curr...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               //   public IActionResult AddOrEdit_CURR(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null)

                var url = "@Url.Action("AddOrEdit_CURR", "ClientSetupParameters")?id=" + currId +
                                            "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged + "&oUserId=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_CURR').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_CURR').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                            $("#divPopModal_AddEdit").modal('show');
                        });

        };

        var ReloadCurrPage_CURR = function (currSetIndex = 7, currSubSetIndex = 3, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
           // alert('CURR ... currFilterIndex: ' + currFilterIndex)

            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CURR').load(url, function () {
                if (currPageIndex == 2) {
                    $("#tabData_CURR_BLK").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [10, 11, 12],
                            "orderable": false,
                        }]
                    });
                }
                else {
                    $("#tabData_CURR").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [4, 5, 6],
                            "orderable": false,
                        }]
                    });
                }
            });

            //if (currPageIndex != 1) {
            //    $('#tabSectionMod_CURR').hide();
            //}
        }

          $(document).on('click', '#btnSaveChanges_CURR_BLK', function (e) {
            e.preventDefault();

           // alert('click..');
              SaveCurr_CURR();
        })

        var SaveCurr_CURR = function () { // (currSetIndex, currSubSetIndex) {

         //   alert('save... curr');
          //  var currFormData = new FormData($("#currForm_CURR_BLK").get(0));

            var currFormData = $("#currForm_CURR_BLK").serializeArray();

            var tbl = $('#tabData_CURR_BLK').DataTable();
            var tbl_data = tbl.$('input, select').serializeArray();


          //  alert("tab len: " + tbl_data.length);

            //$.each(tbl_data, function (i, tab_f) {
            //    alert('tab...');
            //    alert(tab_f.name + ' == ' + tab_f.value);
            //});


            //{ title = "_rowdata" }  $('input[name!=security]', this).serialize();

           // var currFormData = $("#currForm_CURR_BLK").serializeArray();

            // var formdata = $('#currForm_Attendee').find('input[title!=_rowdata]').serializeArray();
            // var formdata = $("#currForm_Attendee :not(.row-hide) > :input").serializeArray();
            //  var formdata = $("#currForm_Attendee :not(.row-hide)").serializeArray();
            //   var formdata = $("#currForm_Attendee").not(".row-hide").serializeArray();

            //   alert("len 1: " + formdata.length);
            //$.each(formdata, function (i, field) {
            //       alert(field.name + ' == ' + field.value);
            //})
            //  $.each(formdata, function (i, field) {
            //   alert(field.name + ' == ' + field.value);


          //  var counter = 0; var counterIn = 0;

            $.each(tbl_data, function (i, tab_f) {
                // alert('tab...');
                // alert(tab_f.name + ' == ' + tab_f.value);

              //  counter++;

                // if (field.name == tab_f.name) {
                // formdata.push({ name: tab_f.name, value: tab_f.value });

                // formdata.append(tab_f.name, tab_f.value);

                var attr_found = false;
                $.each(currFormData, function (i, field) {
                    //
                    if (field.name == tab_f.name) {
                        // alert(field.name + ' == ' + tab_f.name);
                        field.value = tab_f.value;
                        attr_found = true;

                       // counterIn++;
                        return false;
                    }
                });

                // alert('attr_found: ' + attr_found);
                if (attr_found == false) {
                   // alert('adding.. ' + tab_f.name)
                    //  formdata.append(tab_f.name, tab_f.value);

                    currFormData.push({ name: tab_f.name, value: tab_f.value });
                }


                // field.value = tab_f.value;
                // formdata[field.name] = tab_f.value;
                // }
            });


            alert('finally... save');
           // alert('finally... save:- ' + counter + " ... counterIn:- " + counterIn)

            $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,
                    url: '@Url.Action("AddOrEdit_CURR_BLK", "ClientSetupParameters")',
                   // url: "/ClientSetupParameters/AddOrEdit_CURR",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                   // contentType: false,
                   // processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_CURR(7, 3, 2);   //via AJAX...

                            //var _desc = "'[New] Country'";

                            //if (res.resetNew == true) {
                            //    AddEditCurrData_CURR(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            //}
                            //else {
                            //    $("#divPopModal_AddEdit .close").click();
                            //}

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });
                        }
                    }
                })
        }

        var DeleteCurrData_CURR = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified currency' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CURR", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_CURR",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_CURR(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CURR(7, 3, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CURR(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>


    <!-- CPR 9 no ADD, no DEL, only EDIT -->
    <script>
        //LoadTable_CPR();

        $(function () {
            $("#tabData_CPR").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
              //  "orderable": true,
                //"info": true,
                "order": [],
                "columnDefs": [{
                    "targets": [0, 6],
                    "orderable": false,
                }]
            });
        });


        var AddEditCurrData_CPR = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
           //    alert('add OR edit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currCountryCode = $("#_currCountryCode").val();
           // var currParBodyId = null;

               if (currId < 0) currId = null;
               // public IActionResult AddOrEdit_CPR (int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, string strCodeCriteria_2 = null, int? oUserId = null)

                var url = "@Url.Action("AddOrEdit_CPR", "ClientSetupParameters")?id=" + currId +
                                            "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged + "&strCodeCriteria_2=" + null + "&oUserId=" + currUserId_Logged ;

              //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_CPR').innerHTML = 'Update'; }

           // if (currId > 0) { $('#btnSaveChanges_CPR').html('Update'); }

            $('#divPopModal_AddEdit').modal({
                backdrop: 'static',
                keyboard: false
            });
                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                handle: ".modal-header"
            });

            //alert('loading modal...')
            $('#divPopModal_AddEdit .modal-body').load(url, function () {

                $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                $("#divPopModal_AddEdit").modal('show');
            });

        };

        var ReloadCurrPage_CPR = function (currSetIndex = 9, currSubSetIndex = 0) {
           // alert('reload.. ')

          //  alert('reload.. ' + ctryCode)

            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

          //  if (ctryCode == null || ctryCode == "") ctryCode = $("#_currCountryCode").val();
          //  alert('reload in:.. ' + ctryCode)
           // var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true'; // + '&strCodeCriteria_2=' + ctryCode;

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true';  // + '&numCodeCriteria_1=' + numNVP_ParentCategoryId + '&strCodeCriteria_2=' + strNVPCode;

           // alert(url)
            // tabData_CTRY
            $('#divTabData_CPR').load(url, function (e) {
               // e.preventDefault();

                $("#tabData_CPR").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"paging": true,
                    //"lengthChange": false,
                    //"searching": false,
                    //"ordering": true,
                    //"info": true,
                    "order": [],
                    "columnDefs": [{
                        "targets": [0, 6],
                        "orderable": false,
                    }]
                });
            });
        }

        var SaveCurr_CPR = function () { // (currSetIndex, currSubSetIndex) {
       //    alert('save... ');

            const form = document.getElementById("currForm_CPR");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {

                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
                var currFormData = new FormData($("#currForm_CPR").get(0));
                // var currFormData = $("#currForm_CPR").serialize();
               // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_CPR", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_CPR",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_CPR(9, 1);   //via AJAX...
                            var _desc = "'[New] Church Period'";

                            if (res.resetNew == true) {
                                AddEditCurrData_CPR(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            }
                            else {
                                $("#divPopModal_AddEdit .close").click();
                            }

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });
                        }
                    }
                })
            }
        }

        var DeleteCurrData_CPR = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified church period' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CPR", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_CPR",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_CPR(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CPR(9, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CPR(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>



    <!-- RLT  13 no ADD, no DEL, only EDIT -->
    <script>
        $(function () {
            $("#tabData_RLT").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
                //  "orderable": true,
                //"info": true,
                "order": [],
                "columnDefs": [{
                "targets": [0],
                "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_RLT = function (currSetIndex = 13, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
          //  alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_RLT').load(url, function () {
                $("#tabData_RLT").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        //"paging": true,
                        //"lengthChange": false,
                        //"searching": false,
                        //  "orderable": true,
                        //"info": true,
                        "order": [],
                        "columnDefs": [{
                        "targets": [0],
                        "orderable": false,
                    }]
                });
            });

        }

        var SaveCurr_RLT = function (_setIndex) {
          //  alert('saving RLT... ');

            var res = confirm("Reset relationship types to default. Are you sure?");
            if (res == false) return false;


            var f_name = 'currForm_RLT';
            var currFormData = new FormData($('#' + f_name).get(0));

            // var currFormData = $("#currForm_CRL").serialize();

           // alert('save... submitting...');

            $.ajax({
                type: 'POST',
                // data: formdata,
                // processData: false,

                url: '@Url.Action("AddOrEdit_RLT", "ClientSetupParameters")',

               // url: "/ClientSetupParameters/AddOrEdit_CRL",
                data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                contentType: false,
                processData: false,
                ///
                success: function (res) {

                    if (res.taskSuccess == true) {

                        DisplaySuccessInfo(res.userMess);
                        ReloadCurrPage_RLT(13, 1);   //via AJAX...
                    }

                    else //if (res.taskSuccess == false)
                    {
                        $.alert({
                            title: 'Oops!',
                            content: res.userMess,
                            type: 'red',
                            typeAnimated: true,
                        });
                    }
                }
            })
        }

    </script>


    <!-- CU  14 no ADD, no DEL, only EDIT -->
    <script>
        $(function () {
            $("#tabData_CU").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
                //  "orderable": true,
                //"info": true,
                "order": [],
                "columnDefs": [{
                "targets": [6],
                "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CU = function (currSetIndex = 14, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
          //  alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CU').load(url, function () {
                $("#tabData_CU").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        //"paging": true,
                        //"lengthChange": false,
                        //"searching": false,
                        //  "orderable": true,
                        //"info": true,
                        "order": [],
                        "columnDefs": [{
                        "targets": [6],
                        "orderable": false,
                    }]
                });
            });

        }

        var AddEditCurrData_CU = function (currId, currParCUId, currDenomId, currChurchBodyId, _strItemName, setIndex = 14) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

           //  alert('addORedit...');
           // alert('addORedit.. ' + currId + ' ..currDenomId: ' + currDenomId + ' ..currChurchBodyId: ' + currChurchBodyId + ' .._strItemName: ' + _strItemName);

            //alert('currDenomId... ' + currDenomId)
            //alert('currChurchBodyId... ' + currChurchBodyId)

           // var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
           // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");

           // var currParBodyId = null;
            if (currDenomId == null) currDenomId = $("#_oAppGloOwnId_Logged").data("value");
            if (currChurchBodyId == null) currChurchBodyId = $("#_oChurchBodyId_Logged").data("value");

            //alert('currDenomId: ' + currDenomId)
            //alert('currChurchBodyId: ' + currChurchBodyId)
            //alert('currUserId_Logged: ' + currUserId_Logged)

            if (currId < 0) currId = null;
            if (currParCUId < 0) currParCUId = null;
            if (currDenomId < 0) currDenomId = null;
            if (currChurchBodyId < 0) currChurchBodyId = null;

            //if (currChuBodyId < 0) currChuBodyId = null;
            // if (currSetIndex < 0) currSetIndex = null;
            //if (currSubSetIndex < 0) currSubSetIndex = null;


            // public IActionResult AddOrEdit_CU(int id = 0, int? oAppGloOwnId = null, int? oAGOId_Logged = null, int? oCBId_Logged = null, int? oUserId_Logged = null)
            @*var url = "@Url.Action("AddOrEdit_CU", "ClientSetupParameters")?id=" + currId + "&oAppGloOwnId=" + currDenomId + //"&pageIndex=" + _pageIndex +
                                            "&oAGOId_Logged=" + currAGOId_Logged + "&oCBId_Logged=" + currCBId_Logged + "&oUserId_Logged=" + currUserId_Logged;*@

            // public IActionResult AddOrEdit_CU(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null, int? setIndex = 0)
            // public IActionResult AddOrEdit_CU(int id = 0, int? oChurchUnitId = null, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null, int setIndex = 14)

           // alert('setIndex: ' + setIndex)
            var url = "@Url.Action("AddOrEdit_CU", "ClientSetupParameters")?id=" + currId + "&oChurchUnitId=" + currParCUId +
                "&oAppGloOwnId=" + currDenomId + "&oChurchBodyId=" + currChurchBodyId + "&oUserId=" + currUserId_Logged + "&setIndex=" + setIndex;

             //   alert(url)
             // if (currId > 0) { document.querySelector('#btnSaveChanges').innerHTML = 'Update'; }
            if (currId > 0) { $('#btnSaveChanges').html('Update'); }

                      //  alert(url)

            $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        //$("#_setIndex").val(setIndex);
                        //$('#divModalBody_AddEdit').load(url, function () {

           $('#divPopModal_AddEdit .modal-body').load(url, function () {
               $('#divPopModal_AddEdit .modal-title').html(_strItemName);

               // alert('load level..')
               triggerChurchLevel_CU();
               triggerParentUnitCL_CU();
               triggerChurchLevel_sup_CU();
               $('#_OrgType_CU').change();

               $("#divPopModal_AddEdit").modal('show');
           });

        };

        var SaveCurr_CU = function (_setIndex) { // (currSetIndex, currSubSetIndex) {
           // alert('saving CU... ');

            var f_name = 'currForm_CU';
            var currFormData = new FormData($('#' + f_name).get(0));

            // var currFormData = $("#currForm_CU").serialize();

           // alert('save... submitting...');

            $.ajax({
                type: 'POST',
                // data: formdata,
                // processData: false,

                url: '@Url.Action("AddOrEdit_CU", "ClientSetupParameters")',

               // url: "/ClientSetupParameters/AddOrEdit_CU",
                data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                contentType: false,
                processData: false,
                success: function (res) {

                    if (res.taskSuccess == true) {
                        //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_AGO").val();
                        //   alert(res.userMess)
                        //DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);

                        // document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update';  // $('#btnSaveChanges_AGO').html('Update'); //var AddEditCurrData_AGO = function (currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

                        DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                        ReloadCurrPage_CU(14, 1);   //via AJAX...
                        if (res.resetNew == true) {
                            var _desc = "'[New] Church Unit'";
                            var _denomId = $("#_hdnAppGloOwnId_CU").val();
                            var _churchBodyId = $("#_hdnOwnedByChurchBodyId_CU").val();
                            var _currParCUId = $("#_ParentUnitId_CU").val();

                            AddEditCurrData_CU(0, _currParCUId, _denomId, _churchBodyId, _desc);
                        }
                        else {
                                // alert('closing...')
                                $("#divPopModal_AddEdit .close").click();
                       }


                        //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                    }

                    else //if (res.taskSuccess == false)
                    {
                        $.alert({
                            title: 'Oops!',
                            content: res.userMess,
                            type: 'red',
                            typeAnimated: true,
                        });

                        // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                        // $("#lblUserMessage").text(msg);
                    }
                }
            })
        }

        var DeleteCurrData_CU = function (currId, forceDeleteConfirm = false, msg = "") {
          //alert('deleting cu')

            var currUserId_Logged = $("#_oUserId_Logged").data("value");
            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");


            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified church unit' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CU", "ClientSetupParameters")',
                                // public IActionResult Delete_CU(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CU(14, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CU(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },
                }
            });

        };

    </script>

    <script>

        var loadChurchParentUnits = function(numParUnitCBId, strOrgType){

            var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetChurchUnitListByParentCB';
            //var url = '@Url.Action("GetChurchUnitListByParentCB", "ClientSetupParameters")';

                var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
                // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
                // public JsonResult GetChurchUnitListByParentCB(int? oAGOId, int? oParUnitCBId, string strOrgTypeCode, bool addEmpty = false)

            var hdn_ParentUnitId_CU = $('#hdn_ParentUnitId_CU').val();
            $('#_ParentUnitId_CU').empty();
                $.getJSON(url, { oAGOId: currAGOId_Logged, oParUnitCBId: numParUnitCBId, strOrgTypeCode: strOrgType, addEmpty: true}, function (data) {
                    if (Object.keys(data).length > 0)
                    {
                        var items = ''; // var sel = 0;
                        $.each(data, function (i, oVal) {
                            items += "<option value='" + oVal.value + "'>" + oVal.text + "</option>";   // alert(items);
                            //if (oVal.value == numNVP_ParentCategoryId && sel == 0) { items += " selected "; sel++; }
                            //items += ">" + oVal.text + "</option>";
                        });

                        $('#_ParentUnitId_CU').html(items);
                        $('#_ParentUnitId_CU').val(hdn_ParentUnitId_CU);

                    }
                });
            }

        $(document).on('change', '#_OrgType_CU', function (e) {
            e.preventDefault();

            var valType = $('#_OrgType_CU').val();
            $('#_divGenderStatus1').prop('hidden', !(valType == 'CG'));
            $('#_divGenderStatus2').prop('hidden', !(valType == 'CG')); // || $("#chk_IsUnitGen_CU").is(":checked")));

            var str1 = document.getElementById("_OrgType_CU").options[document.getElementById('_OrgType_CU').selectedIndex].text;
            document.getElementById('_lblName_CU').innerHTML = 'Name of ' + str1;
        });

        $(document).on('change', '#_ParentUnitId_CU', function (e) {
            e.preventDefault();

            var str1 = "Choose Parent Unit";
            if ($('#_ParentUnitId_CU').val() != '') {
                str1 = document.getElementById("_ParentUnitId_CU").options[document.getElementById('_ParentUnitId_CU').selectedIndex].text;
            }
            // alert('str CON: ' + str1)
            document.getElementById('_strParentChurchUnit').innerHTML = str1;
            $('#_numParentUnitId_CU').val($('#_ChurchBodyId_4_CU').val());
            //$('#_numParentUnitCBId_CU').val($('#_ChurchBodyId_4_CU').val());
        });

        $(document).on('change', '#chk_IsUnitGen_CU', function (e) {
            e.preventDefault();

            var valType = $("#chk_IsUnitGen_CU").is(":checked");
            $('#_divGenderStatus2').prop('hidden', !valType);
        });

        $(document).on('change', '#_numParentUnitCLId_CU', function (e) {
             e.preventDefault();

             triggerParentUnitCL_CU();
         });

        $(document).on('change', '#_strParentUnitOrgType_CU', function (e) {
             e.preventDefault();

             triggerParentUnitCL_CU();
         });

        $(document).on('change', '#chk_IsFullAutonomy_CU', function (e) {
            e.preventDefault();

            var valType = $("#chk_IsFullAutonomy_CU").is(":checked");
            $('#_divIsSupervisedByParentUnit_CU').prop('hidden', valType);
            $('#chk_IsSupervisedByParentUnit_CU').prop('hidden', valType);
            $('#_divSupervisedBy_CU').prop('hidden', valType);
        });

        $(document).on('change', '#chk_IsSupervisedByParentUnit_CU', function (e) {
            e.preventDefault();

            var valType = $("#chk_IsSupervisedByParentUnit_CU").is(":checked");
            $('#_divSupervisedBy_CU').prop('hidden', valType);
        });

        $(document).on('change', '#_numSupervisedByUnitCLId_CU', function (e) {
            e.preventDefault();

            triggerSupervisedByUnitCL_sup_CU();
        });

        $(document).on('change', '#_strSupervisedByUnitOrgType_CU', function (e) {
            e.preventDefault();

            triggerSupervisedByUnitCL_sup_CU();
        });

    </script>

    <script>

        var loadChurchSupervisedByUnits = function(numParUnitCBId, strOrgType){

            var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetChurchUnitListByParentCB';
            //var url = '@Url.Action("GetChurchUnitListByParentCB", "ClientSetupParameters")';

                var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
                // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
                // public JsonResult GetChurchUnitListByParentCB(int? oAGOId, int? oParUnitCBId, string strOrgTypeCode, bool addEmpty = false)
            var hdn_SupervisedByUnitId_CU = $('#hdn_SupervisedByUnitId_CU').val();
            $('#_SupervisedByUnitId_CU').empty();
                $.getJSON(url, { oAGOId: currAGOId_Logged, oParUnitCBId: numParUnitCBId, strOrgTypeCode: strOrgType, addEmpty: true}, function (data) {
                    if (Object.keys(data).length > 0)
                    {
                        var items = ''; // var sel = 0;
                        $.each(data, function (i, oVal) {
                            items += "<option value='" + oVal.value + "'>" + oVal.text + "</option>";   // alert(items);
                            //if (oVal.value == numNVP_ParentCategoryId && sel == 0) { items += " selected "; sel++; }
                            //items += ">" + oVal.text + "</option>";
                        });

                        $('#_SupervisedByUnitId_CU').html(items);
                        $('#_SupervisedByUnitId_CU').val(hdn_SupervisedByUnitId_CU);

                    }
                });
            }

        $(document).on('change', '#_ChurchBodyId_4_CU', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
           // alert('con numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 4) {  // Congregation
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_4_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_4_CU").options[document.getElementById('_ChurchBodyId_4_CU').selectedIndex].text;
                }
               // alert('str CON: ' + str1)
                document.getElementById('_strChurchBody_CU').innerHTML = str1;
                $('#_hdnChurchBodyId_CU').val($('#_ChurchBodyId_4_CU').val());
                return false;  // _hdnChurchBodyId_CU
            }

           //  alert('_ChurchBodyId_4_CU: ' + $("#_ChurchBodyId_4_CU").val())

             var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_4_CU").val();
             var hdn_ChurchBodyId_5_CU = $('#hdn_ChurchBodyId_5_CU').val();
           //  alert('4. parentCBId: ' + parentCBId);

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_5_CU').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_5_CU').html(items);

                    $('#_ChurchBodyId_5_CU').val(hdn_ChurchBodyId_5_CU);


                    ////if ($("#_div_ChurchBodyId_6").is(":hidden") == false) {
                    //var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    //if (numCHLevelIndex > 5) {
                    //    $('#_ChurchBodyId_5_CU').change();
                    //}
                }
            });
        })

        $(document).on('change', '#_ChurchBodyId_3_CU', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
           // alert('dis numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 3) {  // district
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_3_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_3_CU").options[document.getElementById('_ChurchBodyId_3_CU').selectedIndex].text;
                }
               // alert('str DIS: ' + str1)
                document.getElementById('_strChurchBody_CU').innerHTML = str1;
                $('#_hdnChurchBodyId_CU').val($('#_ChurchBodyId_3_CU').val());
                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_3_CU").val();
             var hdn_ChurchBodyId_4_CU = $('#hdn_ChurchBodyId_4_CU').val();
           //  alert('_ChurchBodyId_3_CU: ' + $("#_ChurchBodyId_3_CU").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_4_CU').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_4_CU').html(items);

                    $('#_ChurchBodyId_4_CU').val(hdn_ChurchBodyId_4_CU);

                 //   if ($("#_div_ChurchBodyId_5_CU").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    if (numCHLevelIndex > 4) {
                        $('#_ChurchBodyId_4_CU').change();
                    }
                }
            });
         })

        $(document).on('change', '#_ChurchBodyId_2_CU', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
          //  alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 2) {  // presbytery
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_2_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_2_CU").options[document.getElementById('_ChurchBodyId_2_CU').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strChurchBody_CU').innerHTML = str1;
                $('#_hdnChurchBodyId_CU').val($('#_ChurchBodyId_2_CU').val());
                return false;
            }


            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
             var parentCBId = $("#_ChurchBodyId_2_CU").val();

             var hdn_ChurchBodyId_3_CU = $('#hdn_ChurchBodyId_3_CU').val();
          //   alert('_ChurchBodyId_2_CU: ' + $("#_ChurchBodyId_2_CU").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_3_CU').empty();

            //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_3_CU').html(items);

                    $('#_ChurchBodyId_3_CU').val(hdn_ChurchBodyId_3_CU);

                    //if ($("#_div_ChurchBodyId_4_CU").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    if (numCHLevelIndex > 3) {
                        $('#_ChurchBodyId_3_CU').change();
                    }
                }
            });
        })

        $(document).on('change', '#_ChurchLevelId_CU', function (e) {
            e.preventDefault();
          //  alert('CL ...')
            var str1 = document.getElementById("_ChurchLevelId_CU").options[document.getElementById('_ChurchLevelId_CU').selectedIndex].text;
            document.getElementById('_lblChurchBodyId_CU').innerHTML = "Church Body (" + str1 + ")";

            triggerChurchLevel_CU();
        })

        var triggerChurchLevel_CU = function () {

           //  alert('CL triggered')
            //var numCBId = $('#_numParentUnitCBId_CU').val();
            //var strCBName = $('#_strParentUnitCB').val();
            //$('#_numParentUnitCBId_CU').val(numCBId);
            //$('#_strParentUnitCB').val(strCBName);

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var churchLevelId = $("#_ChurchLevelId_CU").val();

          // alert('_numParentUnitCLId_CU: ' + churchLevelId);
          // alert('currDenomId: ' + currDenomId);

            //  public JsonResult GetChurchLevelIndexByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false)
            var url = '@Url.Action("GetChurchLevelIndexByChurchLevel", "ClientSetupParameters")';

                $('#_ChurchBodyId_2_CU').empty();

             //document.getElementById('_CountryId').value = '';
            $.getJSON(url, { oChurchLevelId: churchLevelId, oAppGloOwnId: currDenomId }, function (res) {
                if (res != null) {  // alert(res.taskSuccess);  alert(res.strResId); alert(res.strRes);
                    // document.getElementById('_CountryId').value = res.strResId;    // return Json(new { taskSuccess = res, numResLev = _numResLev, strRes = _strRes });

                    var CHLevelIndex = 0;
                     if (res.numResLev != null) {
                         CHLevelIndex = res.numResLev; // - 1;
                         $('#_numCLIndex_CU').val(res.numResLev);
                         $('#_oCBLevelCount_CU').val(CHLevelIndex);
                    }


                    //  alert('CHLevelIndex: ' + CHLevelIndex);
                    //
                    $('#_div_ChurchBodyId_1_CU').prop('hidden', !(CHLevelIndex > 0));
                    $('#_div_ChurchBodyId_2_CU').prop('hidden', !(CHLevelIndex > 1));
                    $('#_div_ChurchBodyId_3_CU').prop('hidden', !(CHLevelIndex > 2));
                    $('#_div_ChurchBodyId_4_CU').prop('hidden', !(CHLevelIndex > 3));
                    $('#_div_ChurchBodyId_5_CU').prop('hidden', !(CHLevelIndex > 4));
                    ///
                    //if ($("#_div_ChurchBodyId_2_CU").is(":hidden") == false) {
                    //    alert('visible... trigger')

                    initChurchBodyListLookUp_CU();

                    //  $('#_CountryId').change();

                    // $('#_CountryId').trigger('change');
                    //}
                }
                else {

                   // alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);
                    var str1 = "Choose Unit's Congregation";
                    if ($('#_ChurchBodyId_1_CU').val() != '') {
                        str1 = document.getElementById("_ChurchBodyId_1_CU").options[document.getElementById('_ChurchBodyId_1_CU').selectedIndex].text;
                    }
                   // alert('str1: ' + str1)
                    document.getElementById('_strChurchBody_CU').innerHTML = str1;
                    $('#_hdnChurchBodyId_CU').val($('#_ChurchBodyId_1_CU').val());

                }
            });
        }

        var initChurchBodyListLookUp_CU = function () {

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
          //  alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 1) {  // HQ
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_1_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_1_CU").options[document.getElementById('_ChurchBodyId_1_CU').selectedIndex].text;
                }
            //    alert('str1 HQ: ' + str1)
                document.getElementById('_strChurchBody_CU').innerHTML = str1;
                $('#_hdnChurchBodyId_CU').val($('#_ChurchBodyId_1_CU').val());
                return false;
            }

            var url = '@Url.Action("GetInitChurchBodyListByAppGloOwn", "ClientSetupParameters")';

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
           // var churchLevelId = $("#_numParentUnitCLId_CU").val();

           // var tempChurchId_2 = $('#_ChurchBodyId_2_CU').val();

           var hdn_ChurchBodyId_2_CU = $('#hdn_ChurchBodyId_2_CU').val();

          //  alert('bf: ' + tempChurchId_2)
          //  alert('bf: ' + tempChurchId_2 + ' ...  bf hdn: ' + hdn_ChurchBodyId_2_CU)

            $('#_ChurchBodyId_2_CU').empty();
            //   public JsonResult GetInitChurchBodyListByAppGloOwn(int? oAppGloOwnId, bool addEmpty = false)
            $.getJSON(url, { oAppGloOwnId: currDenomId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_2_CU').html(items);

                  //  alert('af: ' + tempChurchId_2)
                  //  alert('af: ' + tempChurchId_2 + ' ... af hdn: ' + hdn_ChurchBodyId_2_CU)

                   // alert('hdn2: ' + $('#hdn_ChurchBodyId_2_CU').val())

                    $('#_ChurchBodyId_2_CU').val(hdn_ChurchBodyId_2_CU);

                   // if ($("#_div_ChurchBodyId_3_CU").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    if (numCHLevelIndex > 2) {
                       // alert('trig 2...')
                        $('#_ChurchBodyId_2_CU').change();
                    }
                }
            });
        }

        var triggerParentUnitCL_CU = function () {

            var numCBId = $('#_numParentUnitCBId_CU').val();
            var strCBName = $('#_strParentUnitCB').val();

            if (numCBId == null || numCBId == '' || strCBName == null || strCBName == '') {

                var currRootCode = $("#_strRootChurchBodyCode_CU").val();
                ///
                if (currRootCode != null && currRootCode != '') {
                    var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
                    var churchLevelId = $("#_numParentUnitCLId_CU").val();

                     //   public JsonResult GetParentUnitId_NameByRootCode_json(string strRootCode, int? oParentUnitCLId, int? oAGOId)
                     var url = '@Url.Action("GetParentUnitId_NameByRootCode_json", "ClientSetupParameters")';
                     $.getJSON(url, { strRootCode: currRootCode, oParentUnitCLId: churchLevelId, oAGOId: currDenomId }, function (res) {
                         if (res != null) {

                             var _strCBId_Name = res.strIdName;
                             var arr = _strCBId_Name.split('--');

                             //numCBId = null; var strCBName = '';
                             if (arr.length > 0) {
                                 numCBId = parseInt(arr[0]);
                                 if (arr.length > 1) {
                                     strCBName = arr[1];
                                 }
                             }

                          //   alert('numCBId: ' + numCBId + ' :: strCBName: ' + strCBName)
                            // alert('strCBName: ' + strCBName)

                             $('#_numParentUnitCBId_CU').val(numCBId);
                             $('#_strParentUnitCB').val(strCBName);
                             //
                            // loadChurchParentUnits(numCBId, currOrgType);
                         }
                     });
                }
            }

            var currOrgType = $("#_strParentUnitOrgType_CU").val();
            if (numCBId == '') numCBId = null;

            loadChurchParentUnits(numCBId, currOrgType);
        }

        /////////
        /////////
        /////////

        $(document).on('change', '#_ChurchBodyId_4_sup_CU', function (e) {
            e.preventDefault();

           //  alert('_ChurchBodyId_4_sup_CU: ' + $("#_ChurchBodyId_4_sup_CU").val())

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
          //  alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 4) {  // presbytery
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_4_sup_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_4_sup_CU").options[document.getElementById('_ChurchBodyId_4_sup_CU').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strChurchBody_CU').innerHTML = str1;
                $('#_numSupervisedByUnitCBId_sup_CU').val($('#_ChurchBodyId_4_sup_CU').val());
                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_4_sup_CU").val();
            var hdn_ChurchBodyId_5_sup_CU = $('#hdn_ChurchBodyId_5_sup_CU').val();
           //  alert('4. parentCBId: ' + parentCBId);

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_5_sup_CU').empty();

            //public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_5_sup_CU').html(items);

                    $('#_ChurchBodyId_5_sup_CU').val(hdn_ChurchBodyId_5_sup_CU);


                    ////if ($("#_div_ChurchBodyId_6").is(":hidden") == false) {
                    //var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    //if (numCHLevelIndex > 5) {
                    //    $('#_ChurchBodyId_5_sup_CU').change();
                    //}
                }
            });
        })

        $(document).on('change', '#_ChurchBodyId_3_sup_CU', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
          //  alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 3) {  // presbytery
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_3_sup_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_3_sup_CU").options[document.getElementById('_ChurchBodyId_3_sup_CU').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strChurchBody').innerHTML = str1;
                $('#_numSupervisedByUnitCBId_sup_CU').val($('#_ChurchBodyId_3_sup_CU').val());
                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_3_sup_CU").val();
             var hdn_ChurchBodyId_4_sup_CU = $('#hdn_ChurchBodyId_4_sup_CU').val();
           //  alert('_ChurchBodyId_3_sup_CU: ' + $("#_ChurchBodyId_3_sup_CU").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_4_sup_CU').empty();

             //public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_4_sup_CU').html(items);

                    $('#_ChurchBodyId_4_sup_CU').val(hdn_ChurchBodyId_4_sup_CU);

                  //  if ($("#_div_ChurchBodyId_5_sup_CU").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    if (numCHLevelIndex > 4) {
                        $('#_ChurchBodyId_4_sup_CU').change();
                    }
                }
            });
         })

        $(document).on('change', '#_ChurchBodyId_2_sup_CU', function (e) {
            e.preventDefault();
          //  alert(' triggered...')

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
          //  alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 2) {  // presbytery
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_2_sup_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_2_sup_CU").options[document.getElementById('_ChurchBodyId_2_sup_CU').selectedIndex].text;
                }
             //   alert('str PRB: ' + str1)
                document.getElementById('_strChurchBody').innerHTML = str1;
                $('#_numSupervisedByUnitCBId_sup_CU').val($('#_ChurchBodyId_2_sup_CU').val());
                return false;
            }


            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
             var parentCBId = $("#_ChurchBodyId_2_sup_CU").val();

             var hdn_ChurchBodyId_3_sup_CU = $('#hdn_ChurchBodyId_3_sup_CU').val();
          //   alert('_ChurchBodyId_2_sup_CU: ' + $("#_ChurchBodyId_2_sup_CU").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_3_sup_CU').empty();

            //   //public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_3_sup_CU').html(items);

                    $('#_ChurchBodyId_3_sup_CU').val(hdn_ChurchBodyId_3_sup_CU);

                    //if ($("#_div_ChurchBodyId_4_sup_CU").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    if (numCHLevelIndex > 3) {
                        $('#_ChurchBodyId_3_sup_CU').change();
                    }
                }
            });
        })

        $(document).on('change', '#_numSupervisedByUnitCLId_CU', function (e) {
            e.preventDefault();
          //  alert('CL ...')

            triggerChurchLevel_sup_CU();
        })

        var triggerChurchLevel_sup_CU = function () {

           //  alert('CL triggered')

            //var numCBId = $('#_numSupervisedByUnitCBId_CU').val();
            //var strCBName = $('#_strSupervisedByUnitCB').val();
            //$('#_numSupervisedByUnitCBId_CU').val(numCBId);
            //$('#_strSupervisedByUnitCB').val(strCBName);

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var churchLevelId = $("#_numSupervisedByUnitCLId_CU").val();

          // alert('_numSupervisedByUnitCLId_CU: ' + churchLevelId);
          // alert('currDenomId: ' + currDenomId);

            //  public JsonResult GetChurchLevelIndexByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false)
            var url = '@Url.Action("GetChurchLevelIndexByChurchLevel", "ClientSetupParameters")';

                $('#_ChurchBodyId_2_sup_CU').empty();

             //document.getElementById('_CountryId').value = '';
            $.getJSON(url, { oChurchLevelId: churchLevelId, oAppGloOwnId: currDenomId }, function (res) {
                if (res != null) {  // alert(res.taskSuccess);  alert(res.strResId); alert(res.strRes);
                    // document.getElementById('_CountryId').value = res.strResId;    // return Json(new { taskSuccess = res, numResLev = _numResLev, strRes = _strRes });

                    var CHLevelIndex = res.numResLev - 1;
                    $('#_numCLIndex_CU').val(res.numResLev);
                    $('#_oCBLevelCount_CU').val(CHLevelIndex);

                    // alert('CHLevelIndex: ' + CHLevelIndex);
                    //
                    $('#_div_ChurchBodyId_1_sup_CU').prop('hidden', !(CHLevelIndex >= 0));
                    ///
                    $('#_div_ChurchBodyId_2_sup_CU').prop('hidden', !(CHLevelIndex >= 1));
                    $('#_div_ChurchBodyId_3_sup_CU').prop('hidden', !(CHLevelIndex >= 2));
                    $('#_div_ChurchBodyId_4_sup_CU').prop('hidden', !(CHLevelIndex >= 3));
                    $('#_div_ChurchBodyId_5_sup_CU').prop('hidden', !(CHLevelIndex >= 4));
                    ///
                    //if ($("#_div_ChurchBodyId_2_sup_CU").is(":hidden") == false) {
                    //    alert('visible... trigger')

                    initChurchBodyListLookUp_sup_CU();

                    //  $('#_CountryId').change();

                    // $('#_CountryId').trigger('change');
                    //}
                }
                else {
                    var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    //  alert('HQ...CL numCHLevelIndex: ' + numCHLevelIndex);
                    var str1 = "Choose Congregation";
                    if ($('#_ChurchBodyId_1_CU').val() != '') {
                        str1 = document.getElementById("_ChurchBodyId_1_CU").options[document.getElementById('_ChurchBodyId_1_CU').selectedIndex].text;
                    }
                    // alert('str1: ' + str1)
                    document.getElementById('_strChurchBody_CU').innerHTML = str1;
                    $('#_hdnChurchBodyId_CU').val($('#_ChurchBodyId_1_CU').val());
                }
            });
        }

        var initChurchBodyListLookUp_sup_CU = function () {

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
            //  alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);

            if (numCHLevelIndex == 1) {  // HQ
                var str1 = "Choose Congregation";
                if ($('#_ChurchBodyId_1_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_1_CU").options[document.getElementById('_ChurchBodyId_1_CU').selectedIndex].text;
                }
                //    alert('str1 HQ: ' + str1)
                document.getElementById('_strChurchBody_CU').innerHTML = str1;
                $('#_hdnChurchBodyId_CU').val($('#_ChurchBodyId_1_CU').val());
                return false;
            }

            var url = '@Url.Action("GetInitChurchBodyListByAppGloOwn", "ClientSetupParameters")';

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
           // var churchLevelId = $("#_numSupervisedByUnitCLId_CU").val();

           // var tempChurchId_2 = $('#_ChurchBodyId_2_sup_CU').val();

           var hdn_ChurchBodyId_2_sup_CU = $('#hdn_ChurchBodyId_2_sup_CU').val();


          //  alert('bf: ' + tempChurchId_2)
          //  alert('bf: ' + tempChurchId_2 + ' ...  bf hdn: ' + hdn_ChurchBodyId_2_sup_CU)

            $('#_ChurchBodyId_2_sup_CU').empty();
            //   public JsonResult GetInitChurchBodyListByAppGloOwn(int? oAppGloOwnId, bool addEmpty = false)
            $.getJSON(url, { oAppGloOwnId: currDenomId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_2_sup_CU').html(items);

                  //  alert('af: ' + tempChurchId_2)
                  //  alert('af: ' + tempChurchId_2 + ' ... af hdn: ' + hdn_ChurchBodyId_2_sup_CU)

                   // alert('hdn2: ' + $('#hdn_ChurchBodyId_2_sup_CU').val())

                    $('#_ChurchBodyId_2_sup_CU').val(hdn_ChurchBodyId_2_sup_CU);

                    var numCHLevelIndex = $('#_numCLIndex_CU').val();
                    if (numCHLevelIndex > 2) {
                        $('#_ChurchBodyId_2_sup_CU').change();
                    }

                    //if ($("#_div_ChurchBodyId_3_sup_CU").is(":hidden") == false) {
                    //   // alert('trig 2...')
                    //    $('#_ChurchBodyId_2_sup_CU').change();
                    //}
                }
            });
        }

        var triggerSupervisedByUnitCL_sup_CU = function () {

            var numCHLevelIndex = $('#_numCLIndex_CU').val();
           // alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 1) {  // presbytery
                var str1 = "Choose Unit's Congregation";
                if ($('#_ChurchBodyId_1_sup_CU').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_1_sup_CU").options[document.getElementById('_ChurchBodyId_1_sup_CU').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strChurchBody').innerHTML = str1;
                $('#_numSupervisedByUnitCBId_sup_CU').val($('#_ChurchBodyId_1_sup_CU').val());
                return false;
            }


            var numCBId = $('#_numSupervisedByUnitCBId_CU').val();
            var strCBName = $('#_strSupervisedByUnitCB').val();

            if (numCBId == null || numCBId == '' || strCBName == null || strCBName == '') {

                var currRootCode = $("#_strRootChurchBodyCode_CU").val();
                ///
                if (currRootCode != null && currRootCode != '') {
                    var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
                    var churchLevelId = $("#_numSupervisedByUnitCLId_CU").val();

                     //   public JsonResult GetSupervisedByUnitId_NameByRootCode_json(string strRootCode, int? oSupervisedByUnitCLId, int? oAGOId)
                     var url = '@Url.Action("GetSupervisedByUnitId_NameByRootCode_json", "ClientSetupParameters")';
                     $.getJSON(url, { strRootCode: currRootCode, oSupervisedByUnitCLId: churchLevelId, oAGOId: currDenomId }, function (res) {
                         if (res != null) {

                             var _strCBId_Name = res.strIdName;
                             var arr = _strCBId_Name.split('--');

                             //numCBId = null; var strCBName = '';
                             if (arr.length > 0) {
                                 numCBId = parseInt(arr[0]);
                                 if (arr.length > 1) {
                                     strCBName = arr[1];
                                 }
                             }

                         //    alert('SUP>> numCBId: ' + numCBId + ' :: strCBName: ' + strCBName)

                             $('#_numSupervisedByUnitCBId_CU').val(numCBId);
                             $('#_strSupervisedByUnitCB').val(strCBName);
                             //
                            // loadChurchSupervisedByUnits(numCBId, currOrgType);
                         }
                     });
                }
            }

            var currOrgType = $("#_strSupervisedByUnitOrgType_CU").val();
            if (numCBId == '') numCBId = null;

            loadChurchSupervisedByUnits(numCBId, currOrgType);
        }

    </script>


    <!-- CR 15 no ADD, no DEL, only EDIT -->
    <script>
        $(function () {
            $("#tabData_CR").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CR = function (currSetIndex = 15, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_CR').load(url, function (e) {

                $("#tabData_CR").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


    <!-- CRL  16 no ADD, no DEL, only EDIT -->
    <script>
        $(function () {
            $("#tabData_CRL").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
                //  "orderable": true,
                //"info": true,
                "order": [],
                "columnDefs": [{
                "targets": [6],
                "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CRL = function (currSetIndex = 16, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
          //  alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CRL').load(url, function () {
                $("#tabData_CRL").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        //"paging": true,
                        //"lengthChange": false,
                        //"searching": false,
                        //  "orderable": true,
                        //"info": true,
                        "order": [],
                        "columnDefs": [{
                        "targets": [6],
                        "orderable": false,
                    }]
                });
            });

        }

        var AddEditCurrData_CRL = function (currId, currParCUId, currDenomId, currChurchBodyId, _strItemName, setIndex = 16) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

            //alert('addORedit...');
            //alert('addORedit.. ' + currId + ' ..currDenomId: ' + currDenomId + ' ..currChurchBodyId: ' + currChurchBodyId + ' .._strItemName: ' + _strItemName);

            //alert('currDenomId... ' + currDenomId)
            //alert('currChurchBodyId... ' + currChurchBodyId)

           // var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
           // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");

           // var currParBodyId = null;
            if (currDenomId == null) currDenomId = $("#_oAppGloOwnId_Logged").data("value");
            if (currChurchBodyId == null) currChurchBodyId = $("#_oChurchBodyId_Logged").data("value");

            //alert('currDenomId: ' + currDenomId)
            //alert('currChurchBodyId: ' + currChurchBodyId)
            //alert('currUserId_Logged: ' + currUserId_Logged)

            if (currId < 0) currId = null;
            if (currParCUId < 0) currParCUId = null;
            if (currDenomId < 0) currDenomId = null;
            if (currChurchBodyId < 0) currChurchBodyId = null;

            //if (currChuBodyId < 0) currChuBodyId = null;
            // if (currSetIndex < 0) currSetIndex = null;
            //if (currSubSetIndex < 0) currSubSetIndex = null;


            // public IActionResult AddOrEdit_CRL(int id = 0, int? oAppGloOwnId = null, int? oAGOId_Logged = null, int? oCBId_Logged = null, int? oUserId_Logged = null)
            @*var url = "@Url.Action("AddOrEdit_CRL", "ClientSetupParameters")?id=" + currId + "&oAppGloOwnId=" + currDenomId + //"&pageIndex=" + _pageIndex +
                                            "&oAGOId_Logged=" + currAGOId_Logged + "&oCBId_Logged=" + currCBId_Logged + "&oUserId_Logged=" + currUserId_Logged;*@

            // public IActionResult AddOrEdit_CRL(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null, int? setIndex = 0)
            // public IActionResult AddOrEdit_CRL(int id = 0, int? oChurchRoleId = null, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null, int setIndex = 14)

           // alert('setIndex: ' + setIndex)
            var url = "@Url.Action("AddOrEdit_CRL", "ClientSetupParameters")?id=" + currId + "&oChurchRoleId=" + currParCUId +
                "&oAppGloOwnId=" + currDenomId + "&oChurchBodyId=" + currChurchBodyId + "&oUserId=" + currUserId_Logged + "&setIndex=" + setIndex;

             //   alert(url)
             // if (currId > 0) { document.querySelector('#btnSaveChanges').innerHTML = 'Update'; }
            if (currId > 0) { $('#btnSaveChanges').html('Update'); }

                      //  alert(url)

            $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        //$("#_setIndex").val(setIndex);
                        //$('#divModalBody_AddEdit').load(url, function () {

           $('#divPopModal_AddEdit .modal-body').load(url, function () {
               $('#divPopModal_AddEdit .modal-title').html(_strItemName);

               // alert('load level..')

               $('#_ChurchLevelId_CRL').change();
               $('#_OrgType_CRL').change();
               $('#chk_IsChurchMainstream_CRL').change();
               triggerChurchLevel_CRL();
               triggerParentRoleCL_CRL();
               /// triggerChurchLevel_sup_CRL();

               //var valType = $("#chk_IsChurchMainstream_CRL").is(":checked");
               //$('#_divApplyToChurchUnit_CRL').prop('hidden', valType);

               $("#divPopModal_AddEdit").modal('show');
           });

        };

        var SaveCurr_CRL = function (_setIndex) { // (currSetIndex, currSubSetIndex) {
           // alert('saving CU... ');

            var f_name = 'currForm_CRL';
            var currFormData = new FormData($('#' + f_name).get(0));

            // var currFormData = $("#currForm_CRL").serialize();

           // alert('save... submitting...');

            $.ajax({
                type: 'POST',
                // data: formdata,
                // processData: false,

                url: '@Url.Action("AddOrEdit_CRL", "ClientSetupParameters")',

               // url: "/ClientSetupParameters/AddOrEdit_CRL",
                data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                contentType: false,
                processData: false,
                success: function (res) {

                    if (res.taskSuccess == true) {
                        //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_AGO").val();
                        //   alert(res.userMess)
                        //DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);

                        // document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update';  // $('#btnSaveChanges_AGO').html('Update'); //var AddEditCurrData_AGO = function (currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

                        DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                        ReloadCurrPage_CRL(16, 1);   //via AJAX...
                        if (res.resetNew == true) {
                            var _desc = "'[New] Church Role'";
                            var _denomId = $("#_hdnAppGloOwnId_CRL").val();
                            var _churchBodyId = $("#_hdnChurchBodyId_CRL").val();
                            var _currParCUId = $("#_ParentRoleId_CRL").val();

                            AddEditCurrData_CRL(0, _currParCUId, _denomId, _churchBodyId, _desc);
                        }
                        else {
                                // alert('closing...')
                                $("#divPopModal_AddEdit .close").click();
                       }

                        //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                    }

                    else //if (res.taskSuccess == false)
                    {
                        $.alert({
                            title: 'Oops!',
                            content: res.userMess,
                            type: 'red',
                            typeAnimated: true,
                        });

                        // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                        // $("#lblUserMessage").text(msg);
                    }
                }
            })
        }

        var DeleteCurrData_CRL = function (currId, forceDeleteConfirm = false, msg = "") {
          //alert('deleting cu')

            var currUserId_Logged = $("#_oUserId_Logged").data("value");
            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");


            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified church unit' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CRL", "ClientSetupParameters")',
                                // public IActionResult Delete_CRL(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CRL(16, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CRL(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },
                }
            });

        };

    </script>

    <script>

        var loadChurchParentRoles = function(numParRoleCBId, strOrgType){

            //var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetChurchRoleListByParentCB';
            var url = '@Url.Action("GetChurchRoleListByParentCB", "ClientSetupParameters")';

                var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
                // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
                //  public JsonResult GetChurchRoleListByParentCB(int? oAGOId, int? oParRoleCBId, string strOrgTypeCode, bool addEmpty = false)
            var hdn_ParentRoleId_CRL = $('#hdn_ParentRoleId_CRL').val();

            $('#_ParentRoleId_CRL').empty();
                $.getJSON(url, { oAGOId: currAGOId_Logged, oParRoleCBId: numParRoleCBId, strOrgTypeCode: strOrgType, addEmpty: true}, function (data) {
                    if (Object.keys(data).length > 0)
                    {
                        var items = ''; // var sel = 0;
                        $.each(data, function (i, oVal) {
                            items += "<option value='" + oVal.value + "'>" + oVal.text + "</option>";   // alert(items);
                            //if (oVal.value == numNVP_ParentCategoryId && sel == 0) { items += " selected "; sel++; }
                            //items += ">" + oVal.text + "</option>";
                        });

                       // alert(items)
                        $('#_ParentRoleId_CRL').html(items);
                        $('#_ParentRoleId_CRL').val(hdn_ParentRoleId_CRL);
                    }
                });
            }

        var loadParentRoleChurchLevels_CRL = function (numChurchLevelId, _isLowerLevel, _isInclusive){

            //var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetChurchRoleListByParentCB';
            var url = '@Url.Action("GetChurchLevel_ListByChurchLevel", "ClientSetupParameters")';

                var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
                // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
                //  public JsonResult GetChurchLevel_ListByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false, bool isLowerLevel = true, bool isInclusive = true)
            var hdn_numParentRoleCLId_CRL = $('#hdn_numParentRoleCLId_CRL').val();
            $('#_numParentRoleCLId_CRL').empty();
            $.getJSON(url, { oAppGloOwnId: currAGOId_Logged, oChurchLevelId: numChurchLevelId, isLowerLevel: _isLowerLevel, isInclusive: _isInclusive, addEmpty: true}, function (data) {
                    if (Object.keys(data).length > 0)
                    {
                        var items = ''; // var sel = 0;
                        $.each(data, function (i, oVal) {
                            items += "<option value='" + oVal.value + "'>" + oVal.text + "</option>";   // alert(items);
                            //if (oVal.value == numNVP_ParentCategoryId && sel == 0) { items += " selected "; sel++; }
                            //items += ">" + oVal.text + "</option>";
                        });

                        $('#_numParentRoleCLId_CRL').html(items);
                        $('#_numParentRoleCLId_CRL').val(hdn_numParentRoleCLId_CRL);

                    }
                });
            }


        $(document).on('change', '#_OrgType_CRL', function (e) {
            e.preventDefault();

            //var valType = $('#_OrgType_CRL').val();
            //$('#_divGenderStatus1').prop('hidden', !(valType == 'CG'));
            //$('#_divGenderStatus2').prop('hidden', !(valType == 'CG')); // || $("#chk_IsRoleGen_CRL").is(":checked")));

            var str1 = document.getElementById("_OrgType_CRL").options[document.getElementById('_OrgType_CRL').selectedIndex].text;
            document.getElementById('_lblName_CRL').innerHTML = 'Name of ' + str1;
        });

        $(document).on('change', '#_numParentRoleCLId_CRL', function (e) {
             e.preventDefault();

             triggerParentRoleCL_CRL();
         });

        $(document).on('change', '#_strParentRoleOrgType_CRL', function (e) {
             e.preventDefault();

             triggerParentRoleCL_CRL();
        });

        $(document).on('change', '#_strApplyToChurchUnitOrgType_CRL', function (e) {
            e.preventDefault();

            var numCBId = $('#_hdnChurchBodyId_CRL').val();
            var currOrgType = $("#_strApplyToChurchUnitOrgType_CRL").val();

            loadApplyToChurchUnits_CRL(numCBId, currOrgType);
        });

        $(document).on('click', '#_btnRefreshApplyToList', function (e) {
            e.preventDefault();

            var numCBId = $('#_hdnChurchBodyId_CRL').val();
            var currOrgType = $("#_strApplyToChurchUnitOrgType_CRL").val();

            loadApplyToChurchUnits_CRL(numCBId, currOrgType);
        });

        $(document).on('change', '#_ChurchLevelId_CRL', function (e) {
            e.preventDefault();

            var currChurchLevelId = $("#_ChurchLevelId_CRL").val();
            loadParentRoleChurchLevels_CRL(currChurchLevelId, false, true);

            var str1 = document.getElementById("_ChurchLevelId_CRL").options[document.getElementById('_ChurchLevelId_CRL').selectedIndex].text;
            document.getElementById('_lblOwnedByChurchBodyId_CRL').innerHTML = "Church Body (" + str1 + ")";

            triggerChurchLevel_CRL();
        });

        $(document).on('click', '#_btnRefreshChurchLevelIdList_CRL', function (e) {
            e.preventDefault();

            var currChurchLevelId = $("#_ChurchLevelId_CRL").val();
            loadParentRoleChurchLevels_CRL(currChurchLevelId, false, true);

            var str1 = document.getElementById("_ChurchLevelId_CRL").options[document.getElementById('_ChurchLevelId_CRL').selectedIndex].text;
            document.getElementById('_lblOwnedByChurchBodyId_CRL').innerHTML = "Church Body (" + str1 + ")";

            triggerChurchLevel_CRL();
        });



        $(document).on('change', '#_ParentRoleId_CRL', function (e) {
            e.preventDefault();

            var str1 = "None. [choose parent role]";
            if ($('#_ParentRoleId_CRL').val() != '') {
                 str1 = document.getElementById("_ParentRoleId_CRL").options[document.getElementById('_ParentRoleId_CRL').selectedIndex].text;
             }
          //   alert('str parent ROL: ' + str1)
            document.getElementById('_strParentChurchRole').innerHTML = str1;
            $('#_numParentRoleId_CRL').val($('#_ParentRoleId_CRL').val());
        });

        $(document).on('change', '#chk_IsChurchMainstream_CRL', function (e) {
            e.preventDefault();

            var valType = $("#chk_IsChurchMainstream_CRL").is(":checked");
            $('#_divApplyToChurchUnit_CRL').prop('hidden', valType);
        });

    </script>

    <script>

        var loadApplyToChurchUnits_CRL = function(numParUnitCBId, strOrgType){

            // var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetChurchUnitListByParentCB';
            var url = '@Url.Action("GetChurchUnitListByParentCB", "ClientSetupParameters")';

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            //  public JsonResult GetChurchUnitListByParentCB(int? oAGOId, int? oParUnitCBId, string strOrgTypeCode, bool addEmpty = false)
            var hdn_ApplyToChurchUnitId_CRL = $('#hdn_ApplyToChurchUnitId_CRL').val();
            $('#_ApplyToChurchUnitId_CRL').empty();
                $.getJSON(url, { oAGOId: currAGOId_Logged, oParUnitCBId: numParUnitCBId, strOrgTypeCode: strOrgType, addEmpty: false}, function (data) {
                    if (Object.keys(data).length > 0)
                    {
                        var items = ''; // var sel = 0;
                        $.each(data, function (i, oVal) {
                            items += "<option value='" + oVal.value + "'>" + oVal.text + "</option>";   // alert(items);
                            //if (oVal.value == numNVP_ParentCategoryId && sel == 0) { items += " selected "; sel++; }
                            //items += ">" + oVal.text + "</option>";
                        });

                        $('#_ApplyToChurchUnitId_CRL').html(items);
                        $('#_ApplyToChurchUnitId_CRL').val(hdn_ApplyToChurchUnitId_CRL);

                    }
                });
            }

        $(document).on('change', '#_ChurchBodyId_4_CRL', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex_CRL').val();
           // alert('con numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 4) {  // Congregation
                var str1 = "Choose Role's Congregation";
                if ($('#_ChurchBodyId_4_CRL').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_4_CRL").options[document.getElementById('_ChurchBodyId_4_CRL').selectedIndex].text;
                }
               // alert('str CON: ' + str1)
                document.getElementById('_strChurchBody_CRL').innerHTML = str1;
                $('#_hdnChurchBodyId_CRL').val($('#_ChurchBodyId_4_CRL').val());
                $('#_strRootChurchBodyCode_CRL').val(returnChurchBodyRootCode($('#_hdnChurchBodyId_CRL').val()));

                return false;
            }

           //  alert('_ChurchBodyId_4_CRL: ' + $("#_ChurchBodyId_4_CRL").val())

             var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_4_CRL").val();
             var hdn_ChurchBodyId_5_CRL = $('#hdn_ChurchBodyId_5_CRL').val();
           //  alert('4. parentCBId: ' + parentCBId);

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_5_CRL').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_5_CRL').html(items);

                    $('#_ChurchBodyId_5_CRL').val(hdn_ChurchBodyId_5_CRL);


                    ////if ($("#_div_ChurchBodyId_6").is(":hidden") == false) {
                    //var numCHLevelIndex = $('#_numCLIndex_CRL').val();
                    //if (numCHLevelIndex > 5) {
                    //    $('#_ChurchBodyId_5_CRL').change();
                    //}
                }
            });
        })

        $(document).on('change', '#_ChurchBodyId_3_CRL', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex_CRL').val();
         //   alert('dis numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 3) {  // district
                var str1 = "Choose Role's Congregation";
                if ($('#_ChurchBodyId_3_CRL').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_3_CRL").options[document.getElementById('_ChurchBodyId_3_CRL').selectedIndex].text;
                }
            //    alert('str DIS: ' + str1)
                document.getElementById('_strChurchBody_CRL').innerHTML = str1;
                $('#_hdnChurchBodyId_CRL').val($('#_ChurchBodyId_3_CRL').val());
                $('#_strRootChurchBodyCode_CRL').val(returnChurchBodyRootCode($('#_hdnChurchBodyId_CRL').val()));

                return false;
            }

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_3_CRL").val();
             var hdn_ChurchBodyId_4_CRL = $('#hdn_ChurchBodyId_4_CRL').val();
           //  alert('_ChurchBodyId_3_CRL: ' + $("#_ChurchBodyId_3_CRL").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_4_CRL').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_4_CRL').html(items);

                    $('#_ChurchBodyId_4_CRL').val(hdn_ChurchBodyId_4_CRL);

                   // if ($("#_div_ChurchBodyId_5_CRL").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CRL').val();
                    if (numCHLevelIndex > 4) {
                        $('#_ChurchBodyId_4_CRL').change();
                    }
                }
            });
         })

        $(document).on('change', '#_ChurchBodyId_2_CRL', function (e) {
            e.preventDefault();

            var numCHLevelIndex = $('#_numCLIndex_CRL').val();
          //  alert('PRS. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 2) {  // presbytery
                var str1 = "Choose Role's Congregation";
                if ($('#_ChurchBodyId_2_CRL').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_2_CRL").options[document.getElementById('_ChurchBodyId_2_CRL').selectedIndex].text;
                }
              //  alert('str PRB: ' + str1)
                document.getElementById('_strChurchBody_CRL').innerHTML = str1;
                $('#_hdnChurchBodyId_CRL').val($('#_ChurchBodyId_2_CRL').val());
                $('#_strRootChurchBodyCode_CRL').val(returnChurchBodyRootCode($('#_hdnChurchBodyId_CRL').val()));

                return false;
            }


            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
             var parentCBId = $("#_ChurchBodyId_2_CRL").val();

             var hdn_ChurchBodyId_3_CRL = $('#hdn_ChurchBodyId_3_CRL').val();
          //   alert('_ChurchBodyId_2_CRL: ' + $("#_ChurchBodyId_2_CRL").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_3_CRL').empty();

            //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_3_CRL').html(items);

                    $('#_ChurchBodyId_3_CRL').val(hdn_ChurchBodyId_3_CRL);

                  //  if ($("#_div_ChurchBodyId_4_CRL").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CRL').val();
                    if (numCHLevelIndex > 3) {
                        $('#_ChurchBodyId_3_CRL').change();
                    }
                }
            });
        })

        $(document).on('change', '#_ChurchLevelId_CRL', function (e) {
            e.preventDefault();
          //  alert('CL ...')
            var str1 = document.getElementById("_ChurchLevelId_CRL").options[document.getElementById('_ChurchLevelId_CRL').selectedIndex].text;
            document.getElementById('_lblOwnedByChurchBodyId_CRL').innerHTML = "Church Body (" + str1 + ")";

            triggerChurchLevel_CRL();
        })

        var triggerChurchLevel_CRL = function () {

           //  alert('CRL triggered')
            //var numCBId = $('#_numParentRoleCBId_CRL').val();
            //var strCBName = $('#_strParentRoleCB').val();
            //$('#_numParentRoleCBId_CRL').val(numCBId);
            //$('#_strParentRoleCB').val(strCBName);

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var churchLevelId = $("#_ChurchLevelId_CRL").val();

          // alert('_numParentRoleCLId_CRL: ' + churchLevelId);
          // alert('currDenomId: ' + currDenomId);

            //  public JsonResult GetChurchLevelIndexByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false)
            var url = '@Url.Action("GetChurchLevelIndexByChurchLevel", "ClientSetupParameters")';

                $('#_ChurchBodyId_2_CRL').empty();

             //document.getElementById('_CountryId').value = '';
            $.getJSON(url, { oChurchLevelId: churchLevelId, oAppGloOwnId: currDenomId }, function (res) {
                if (res != null) {  // alert(res.taskSuccess);  alert(res.strResId); alert(res.strRes);
                    // document.getElementById('_CountryId').value = res.strResId;    // return Json(new { taskSuccess = res, numResLev = _numResLev, strRes = _strRes });

                    var CHLevelIndex = 0;
                     if (res.numResLev != null) {
                         CHLevelIndex = res.numResLev; // - 1;
                         $('#_numCLIndex_CRL').val(res.numResLev);
                         $('#_oCBLevelCount_CRL').val(CHLevelIndex);
                    }

                    //  alert('CHLevelIndex: ' + CHLevelIndex);
                    //
                    $('#_div_ChurchBodyId_1_CRL').prop('hidden', !(CHLevelIndex > 0));
                    $('#_div_ChurchBodyId_2_CRL').prop('hidden', !(CHLevelIndex > 1));
                    $('#_div_ChurchBodyId_3_CRL').prop('hidden', !(CHLevelIndex > 2));
                    $('#_div_ChurchBodyId_4_CRL').prop('hidden', !(CHLevelIndex > 3));
                    $('#_div_ChurchBodyId_5_CRL').prop('hidden', !(CHLevelIndex > 4));
                    ///
                    //if ($("#_div_ChurchBodyId_2_CRL").is(":hidden") == false) {
                    //    alert('visible... trigger')

                    initChurchBodyListLookUp_CRL();

                    //  $('#_CountryId').change();

                    // $('#_CountryId').trigger('change');
                    //}
                }
                else {

                 //   alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);
                    var str1 = "Choose Role's Congregation";
                    if ($('#_ChurchBodyId_1_CRL').val() != '') {
                        str1 = document.getElementById("_ChurchBodyId_1_CRL").options[document.getElementById('_ChurchBodyId_1_CRL').selectedIndex].text;
                    }
                  //  alert('str1: ' + str1)
                    document.getElementById('_strChurchBody_CRL').innerHTML = str1;
                    $('#_hdnChurchBodyId_CRL').val($('#_ChurchBodyId_1_CRL').val());
                    $('#_strRootChurchBodyCode_CRL').val(returnChurchBodyRootCode($('#_hdnChurchBodyId_CRL').val()));
                }
            });
        }

        var initChurchBodyListLookUp_CRL = function () {

            var numCHLevelIndex = $('#_numCLIndex_CRL').val();
           // alert('HQ. numCHLevelIndex: ' + numCHLevelIndex);
            if (numCHLevelIndex == 1) {  // HQ
                var str1 = "Choose Role's Congregation";
                if ($('#_ChurchBodyId_1_CRL').val() != '') {
                    str1 = document.getElementById("_ChurchBodyId_1_CRL").options[document.getElementById('_ChurchBodyId_1_CRL').selectedIndex].text;
                }
              //  alert('str1 HQ: ' + str1)
                document.getElementById('_strChurchBody_CRL').innerHTML = str1;
                $('#_hdnChurchBodyId_CRL').val($('#_ChurchBodyId_1_CRL').val());
                $('#_strRootChurchBodyCode_CRL').val(returnChurchBodyRootCode($('#_hdnChurchBodyId_CRL').val()));

                return false;
            }

            var url = '@Url.Action("GetInitChurchBodyListByAppGloOwn", "ClientSetupParameters")';

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
           // var churchLevelId = $("#_numParentRoleCLId_CRL").val();

           // var tempChurchId_2 = $('#_ChurchBodyId_2_CRL').val();

           var hdn_ChurchBodyId_2_CRL = $('#hdn_ChurchBodyId_2_CRL').val();

          //  alert('bf: ' + tempChurchId_2)
          //  alert('bf: ' + tempChurchId_2 + ' ...  bf hdn: ' + hdn_ChurchBodyId_2_CRL)

            $('#_ChurchBodyId_2_CRL').empty();
            //   public JsonResult GetInitChurchBodyListByAppGloOwn(int? oAppGloOwnId, bool addEmpty = false)
            $.getJSON(url, { oAppGloOwnId: currDenomId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_2_CRL').html(items);

                  //  alert('af: ' + tempChurchId_2)
                  //  alert('af: ' + tempChurchId_2 + ' ... af hdn: ' + hdn_ChurchBodyId_2_CRL)

                   // alert('hdn2: ' + $('#hdn_ChurchBodyId_2_CRL').val())

                    $('#_ChurchBodyId_2_CRL').val(hdn_ChurchBodyId_2_CRL);

                   // if ($("#_div_ChurchBodyId_3_CRL").is(":hidden") == false) {
                    var numCHLevelIndex = $('#_numCLIndex_CRL').val();
                    if (numCHLevelIndex > 2) {
                       // alert('trig 2...')
                        $('#_ChurchBodyId_2_CRL').change();
                    }
                }
            });
        }

        var triggerParentRoleCL_CRL = function () {
             //_strParentRoleOrgType_CRL', _numParentRoleCLId_CRL

            var numCBId = $('#_numParentRoleCBId_CRL').val();
            var strCBName = $('#_strParentRoleCB').val();
           // alert('1. numCB: ' + numCBId)

           // if (numCBId == null || numCBId == '' || strCBName == null || strCBName == '') {
                var currRootCode = $("#_strRootChurchBodyCode_CRL").val();
               // alert('currRootCode: ' + currRootCode)

            if (currRootCode != null && currRootCode != '') {
                var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
                var churchLevelId = $("#_numParentRoleCLId_CRL").val();

                //   public JsonResult GetParentUnitId_NameByRootCode_json(string strRootCode, int? oParentUnitCLId, int? oAGOId)  GetChurchBodyRootCodeByCBId_json
                var url = '@Url.Action("GetParentUnitId_NameByRootCode_json", "ClientSetupParameters")';
                $.getJSON(url, { strRootCode: currRootCode, oParentUnitCLId: churchLevelId, oAGOId: currDenomId }, function (res) {
                    if (res != null) {

                        var _strCBId_Name = res.strIdName;
                        var arr = _strCBId_Name.split('--');

                        //numCBId = null; var strCBName = '';
                        if (arr.length > 0) {
                            numCBId = parseInt(arr[0]);
                            if (arr.length > 1) {
                                strCBName = arr[1];
                            }
                        }

                      //  alert('2. numCBId: ' + numCBId + ' :: strCBName: ' + strCBName)
                        // alert('strCBName: ' + strCBName)

                        $('#_numParentRoleCBId_CRL').val(numCBId);
                        $('#_strParentRoleCB_CRL').val(strCBName);
                        //
                        // loadChurchParentRoles(numCBId, currOrgType);

                        var currOrgType = $("#_strParentRoleOrgType_CRL").val();
                       // if (numCBId == '') numCBId = null;

                        //alert('currOrgType: ' + currOrgType)
                        //alert('3a. numCBId: ' + numCBId + ' == ' + $('#_numParentRoleCBId_CRL').val())

                        loadChurchParentRoles(numCBId, currOrgType);
                        return false;
                    }
                });
            }
            else {
                var currOrgType = $("#_strParentRoleOrgType_CRL").val();
               // if (numCBId == '') numCBId = null;

                //alert('currOrgType: '+ currOrgType)
                //alert('3b. numCBId: ' + numCBId + ' == ' + $('#_numParentRoleCBId_CRL').val())

                loadChurchParentRoles(numCBId, currOrgType);
            }

           // }
        }

    </script>


    <!-- CPRD 21, MCCF 22 CT 23 no ADD, no DEL, only EDIT -->
    <script>

        var ReloadCurrPage_MCCF = function (currSetIndex = 22, currSubSetIndex = 1, strNVPCode = 'MCCF') {
          //  alert('reload..')

           // alert('1st:.. ' + strNVPCode)
           // if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
           //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

          //  alert(url)

            $('#divTabData_MCCF').load(url, function (e) {

                //$("#tabData_CMS").DataTable({
                //    "responsive": true,
                //    "autoWidth": false,
                //    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                //    "columnDefs": [{
                //        "targets": [5],
                //        "orderable": false,
                //    }]
                //});
            });
        }

        var SaveCurr_MCCF = function () {
            // (currSetIndex, currSubSetIndex) {
           // alert('save... ');

            const form = document.getElementById("currForm_MCCF");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {
              //  alert('not valid')
                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
               // alert('about to save...');
                var currFormData = new FormData($("#currForm_MCCF").get(0));

                // var currFormData = $("#currForm_MCCF").serialize();
              // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_MCCF", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_MCCF",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                          //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_MCCF").val();
                         //   alert(res.userMess)
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_MCCF(22, 1, 'MCCF');   //via AJAX...

                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });

                           // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                            // $("#lblUserMessage").text(msg);
                        }
                    }
                })
            }
        }


    </script>

    <script>
        //LoadTable_ADHC();

        $(function () {
            $("#tabData_ADHC").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
              //  "orderable": true,
                //"info": true,
                "order": [],
                "columnDefs": [{
                    "targets": [3],
                    "orderable": false,
                }]
            });
        });


        var AddEditCurrData_ADHC = function (_setIndex = 25, _strItemName ) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
          //    alert('add OR edit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currCountryCode = $("#_currCountryCode").val();
           // var currParBodyId = null;

                //if (currId < 0) currId = null;
               // public IActionResult AddOrEdit_ADHC(int setIndex = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null)

            var url = '@Url.Action("AddOrEdit_ADHC", "ClientSetupParameters")?setIndex=' + _setIndex +
                                            '&oAppGloOwnId=' + currAGOId_Logged + '&oChurchBodyId=' + currCBId_Logged + '&oUserId=' + currUserId_Logged ;

            //alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_ADHC').innerHTML = 'Update'; }
            //if (currId > 0) { $('#btnSaveChanges_ADHC').html('Update'); }

            $('#divPopModal_AddEdit').modal({
                backdrop: 'static',
                keyboard: false
            });
                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                handle: ".modal-header"
            });

            //alert('loading modal...')
            $('#divPopModal_AddEdit .modal-body').load(url, function () {

                $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                $("#divPopModal_AddEdit").modal('show');
            });

        };

        var ReloadCurrPage_ADHC = function (currSetIndex = 25, currSubSetIndex = 1, strNVPCode = "", numNVP_ParentCategoryId = null) {
         // alert('reload.. ' )

          //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)
          var url = "@Url.Action("Index", "ClientSetupParameters")?setIndex=" + currSetIndex + "&subSetIndex=" + currSubSetIndex + "&loadSectionOnly=true" +
                        "&numCodeCriteria_1=" + numNVP_ParentCategoryId + "&strCodeCriteria_2=" + strNVPCode;
            // tabData_CTRY

          // alert(url)

            $('#divTabData_ADHC').load(url, function (e) {
               // e.preventDefault();

                $("#tabData_ADHC").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"paging": true,
                    //"lengthChange": false,
                    //"searching": false,
                    //"ordering": true,
                    //"info": true,
                    "order": [],
                    "columnDefs": [{
                        "targets": [3],
                        "orderable": false,
                    }]
                });

            });
        }

        var SaveCurr_ADHC = function (setIndex = 25) { // (currSetIndex, currSubSetIndex) {
            // alert('save... ');

            const form = document.getElementById("currForm_ADHC");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {

                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
                var currFormData = new FormData($("#currForm_ADHC").get(0));
                // var currFormData = $("#currForm_ADHC").serialize();
               // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_ADHC", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_ADHC",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);


                            ReloadCurrPage_ADHC(setIndex, 1);   //via AJAX...

                            $("#divPopModal_AddEdit .close").click();
                        }

                        else //if (res.taskSuccess == false)
                        {
                            DisplayErrorInfo(res.userMess);

                            //$.alert({
                            //    title: 'Oops!',
                            //    content: res.userMess,
                            //    type: 'red',
                            //    typeAnimated: true,
                            //});
                        }
                    }
                })
            }
        }

        var DeleteCurrData_ADHC = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified church period' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_ADHC", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_ADHC",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_ADHC(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_ADHC(25, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_ADHC(currId, true, res.userMess);
                                        }

                                        else {
                                            DisplayErrorInfo(res.userMess);

                                            //$.alert({
                                            //    title: 'Oops! Delete failed.',
                                            //    content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                            //    type: 'red',
                                            //});
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>


    <script>
        $(document).on('change', '#chk_IsChuPeriodSameAsAccPeriod', function (e) {
            e.preventDefault();

            var valType = $("#chk_IsChuPeriodSameAsAccPeriod").is(":checked");
            $('#_divCPRD_AP').prop('hidden', valType);
        });


        $(document).on('change', '#chk_IsAutogenMCCFCode', function (e) {
            e.preventDefault();

            //  $('#_divMCCFDetails').prop('enabled', ($("#chk_IsAutogenMCCFCode").is(":checked")));
            // $("#dcacl").attr('disabled','disabled');

            $("#_divMCCFDetails").children().attr("disabled", !($("#chk_IsAutogenMCCFCode").is(":checked")));

            //$('#_divMCCFDetails').fadeTo('slow', .6);
            //$('#_divMCCFDetails').append('<div style="position: absolute;top:0;left:0;width: 100%;height:100%;z-index:2;opacity:0.4;filter: alpha(opacity = 50)"></div>');

        });

        var showMCCFSample = function () {
            var strVar = '1';
            if ($("#chk_IsLeadingZeros").is(":checked")) {
                strVar = '0001';
            }

            var strSamp = $("#_strPrefix").val() + strVar + $("#_strSuffix").val();
            document.getElementById('_sampleLDZR').value = strSamp;
        }

        $(document).on('change', '#chk_IsLeadingZeros', function (e) {
            e.preventDefault();

            showMCCFSample();
        });
        $(document).on('change', '#_strPrefix', function (e) {
            e.preventDefault();

            showMCCFSample();
        });
        $(document).on('change', '#_strSuffix', function (e) {
            e.preventDefault();

            showMCCFSample();
        });



    </script>




}
