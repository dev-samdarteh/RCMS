
@*@model RhemaCMS.Models.ViewModels.vm_cl.ClientSetupParametersModel
<pages maintainScrollPositionOnPostBack="true" />

@{
    ViewData["Title"] = (!string.IsNullOrEmpty(ViewBag.AppName) ? ViewBag.AppName : "") + " - Dashboard";
}

<body id="page-top" class="w-100">
    <input type="hidden" id="_oSetIndex" data-value="@Model.setIndex" />
    <input type="hidden" id="_oSubSetIndex" data-value="@Model.subSetIndex" />

    <input type="hidden" id="_oChurchBody_Logged" data-value="@Model.oChurchBody_Logged" />
    <input type="hidden" id="_pageIndex" data-value="@Model.pageIndex" />

    <input type="hidden" id="_oChurchBodyId_Logged" data-value="@Model.oChurchBodyId_Logged" />
    <input type="hidden" id="_oAppGloOwnId_Logged" data-value="@Model.oAppGloOwnId_Logged" />
    <input type="hidden" id="_oUserId_Logged" data-value="@Model.oUserId_Logged" />


     Content Wrapper. Contains page content 
    <div class="content-wrapper m-0 p-0">
         Content Header (Page header) 
        <div class="content-header clearfix">
            <div class="container-fluid">
                <div class="row mb-4">
                    <div class="col-sm-6">
                        <h4 class="m-0 text-dark"> <i class="fas fa-cog fa-sm fa-secondary"></i> Church Setup Parameters </h4>
                    </div> /.col 
                    <div class="col-sm-6">
                        <ol class="breadcrumb float-sm-right">
                            <li class="breadcrumb-item"><a href="#">Home</a></li>
                            <li class="breadcrumb-item active"> Dashboard v1 </li>
                        </ol>
                    </div> /.col 
                </div> /.row 
            </div> /.container-fluid 
        </div>
         /.content-header 
         Main content 
        <section class="content">
            <div class="container-fluid ">
                 Main row 
                <div class="row justify-content-center" style=" margin: 0 auto 0 auto ; padding:0;">
                     Left col 
                    <section class="col-lg-7 connectedSortable pl-1 pr-1 ">
                         AGO 1  ... 
                        <div class="card">
                            <h6 class="card-header card-title ">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed1" aria-expanded="true" aria-controls="collapse-collapsed1" id="heading-collapsed">
                                    <i class="fas fa-church pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down pull-right"></i>
                                    Denomination (Church) Preview
                                </a>
                            </h6>
                            <div id="collapse-collapsed1" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamAGO", Model.oAppGlobalOwnModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_AGO(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CL 2  ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title ">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed2" aria-expanded="true" aria-controls="collapse-collapsed2" id="heading-collapsed">
                                    <i class="fas fa-object-group pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down pull-right"></i>
                                    Church Levels
                                </a>
                            </h6>
                            <div id="collapse-collapsed2" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCL", Model.lsChurchLevelModels); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc2 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_AGO(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc2)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CB 3  
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed3" aria-expanded="true" aria-controls="collapse-collapsed3" id="heading-collapsed">
                                    <i class="fas fa-check-double pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down pull-right"></i>
                                    Working Congregation (Church Unit)
                                </a>
                            </h6>
                            <div id="collapse-collapsed3" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{
                                        if (Model.oChurchBodyModel != null)
                                        {
                                            await Html.RenderPartialAsync("_vwParamCB", Model.oChurchBodyModel);
                                        }
                                    }
                                </div>
                                 ONLY CB subscriber access 
                                <div class="card-footer clearfix">
                                    @{ if (Model.oChurchBodyModel != null)
                                        {
                                            if (Model.oChurchBodyModel.oChurchBody != null)
                                            {
                                                var strDesc_CB = "'" + Model.oChurchBodyModel.oChurchBody.Name + "'";
                                                if (Model.oChurchBodyModel.oChurchBody.Id == Model.oChurchBodyId_Logged)
                                                {
                                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CB(@Model.oChurchBodyModel.oChurchBody.Id, @Model.oChurchBodyModel.oAppGloOwnId_Logged, @Model.oChurchBodyModel.oChurchBodyId_Logged, @strDesc_CB, 3)">
                                                        <i class="fas fa-edit"></i> <span>Modify</span>
                                                    </button>
                                                }
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                         CBA 4  ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed4" aria-expanded="true" aria-controls="collapse-collapsed4" id="heading-collapsed">
                                    <i class="fas fa-layer-group pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down pull-right"></i>
                                    Church Body (Oversight Units)
                                </a>
                            </h6>
                            <div id="collapse-collapsed4" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    <div id="divTabData_CBA" class="overlay-wrapper">
                                        @{ await Html.RenderPartialAsync("_vwParamCBA", Model.oChurchBodyAdhocModel); }
                                    </div>
                                </div>

                                 ONLY show CBs equal and below in level access 
                                <div class="card-footer clearfix">
                                    @{ //var strDesc4 = "'" + Model.oChurchBodyModel.strChurchBody + "'";
                                            var strCB_Par = !string.IsNullOrEmpty(Model.oChurchBodyModel?.strParentChurchBody) ? Model.oChurchBodyModel?.strParentChurchBody + "/" : Model.oChurchBodyModel?.strParentChurchBody;
                                            var strDesc4 = "'" + strCB_Par + Model.oChurchBodyModel?.strChurchBody + "'";
                                        }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CB(0, @Model.oChurchBodyAdhocModel.oAppGloOwnId_Logged, @Model.oChurchBodyAdhocModel.oChurchBodyId_Logged, '[New] Church Body', 4)">
                                        <i class="fas fa-edit mr-1"></i> <span> Add New </span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CSTR 5  ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title ">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed5" aria-expanded="true" aria-controls="collapse-collapsed5" id="heading-collapsed">
                                    <i class="fas fa-object-group pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down pull-right"></i>
                                    Church Structure (Organisation)
                                </a>
                            </h6>
                            <div id="collapse-collapsed5" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCL", Model.lsChurchLevelModels); }
                                </div>
                                 ONLY show CBs equal and below in level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc5 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_AGO(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc5)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         NVP 6  ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title ">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed6" aria-expanded="true" aria-controls="collapse-collapsed6" id="heading-collapsed">
                                    <i class="fas fa-cogs pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down pull-right"></i>
                                    General App Settings
                                </a>
                            </h6>
                            <div id="collapse-collapsed6" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline ">

                                    <div class="col-md mb-3">
                                        <small class="font-weight-normal" asp-for="oAppUtilityNVPModel.strCurrNVPCode"> Parameter Type </small>
                                        <div class="input-group mb-3">
                                            <select id="_currNVPCode" class="form-control" asp-for="oAppUtilityNVPModel.strCurrNVPCode" asp-items="Model.oAppUtilityNVPModel.lkpAppParameterTags" aria-describedby="fd_strCurrNVPCode" required></select>
                                            <select id="_currNVPCategoryId" hidden class="form-control" asp-for="oAppUtilityNVPModel.parent" asp-items="Model.oAppUtilityNVPModel.lkpNVP_ParentCategories" aria-describedby="fd_numCurrNVP_ParentParamId"></select>
                                            <input id="_currNVPCategoryIdTemp" type="hidden" asp-for="oAppUtilityNVPModel.numCurrNVP_ParentParamId" />

                                            <button type="button" class="btn btn-light text-secondary border ml-1" onclick="ReloadCurrPage_NVP(6, 1, '')"> <i class="fa fa-refresh"></i>  </button>
                                            <button type="button" class="btn btn-info border ml-1" onclick="AddEditCurrData_NVP(0, '[New] Lookup Parameter')"><i class="fas fa-plus"></i><span class="text-sm"> Add </span></button>
                                        </div>
                                    </div>
                                    <input id="_currTempSetIndex" type="hidden" asp-for="oAppUtilityNVPModel.tempSetIndex" />

                                    <div id="divTabData_NVP" class="overlay-wrapper">
                                        <div id="spinner_NVP" class="overlay dark" style="display: none"><i class="fas fa-3x fa-sync-alt fa-sm fa-spin"></i><div class="text-bold pt-2">Loading...</div></div>

                                        @{ await Html.RenderPartialAsync("_vwParamNVP", Model.oAppUtilityNVPModel); }
                                    </div>
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                        @{ var strDesc6 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                        <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NVP(0, '[New] Lookup Parameter')">
                                            <i class="fas fa-plus fa-sm"></i> <span> Add New </span>
                                        </button>
                                    </div>
                            </div>
                        </div>

                         CRC 7  ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed7" aria-expanded="true" aria-controls="collapse-collapsed7" id="heading-collapsed">
                                    <i class="fas fa-flag pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Countries, Regions &amp; Currencies
                                </a>
                            </h6>
                            <div id="collapse-collapsed7" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    <div class="card-primary card-outline card-outline-tabs border-0">
                                        <div class="card-header p-0 border-bottom-0">
                                            <ul class="nav nav-tabs" id="custom-tabs-four-tab" role="tablist">
                                                <li class="nav-item">
                                                    <a class="nav-link active" id="custom-tabs-four-country-tab" data-toggle="pill" href="#custom-tabs-four-country" role="tab" aria-controls="custom-tabs-four-country" aria-selected="true"> Countries </a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link" id="custom-tabs-four-region-tab" data-toggle="pill" href="#custom-tabs-four-region" role="tab" aria-controls="custom-tabs-four-region" aria-selected="false"> Regions </a>
                                                </li>
                                                <li class="nav-item">
                                                    <a class="nav-link" id="custom-tabs-four-currency-tab" data-toggle="pill" href="#custom-tabs-four-currency" role="tab" aria-controls="custom-tabs-four-currency" aria-selected="false"> Currencies </a>
                                                </li>
                                            </ul>
                                        </div>
                                        <div class="card-body">
                                            <div class="tab-content" id="custom-tabs-four-tabContent">
                                                <div id="custom-tabs-four-country" class="tab-pane fade show active mt-3" role="tabpanel" aria-labelledby="custom-tabs-four-country-tab">
                                                    <div id="divTabData_CTRY" class="overlay-wrapper mb-1">
                                                        @{ await Html.RenderPartialAsync("_vwParamCTRY", Model.oCountryModel); }
                                                    </div>
                                                </div>

                                                <div id="custom-tabs-four-region" class="tab-pane fade mt-3" role="tabpanel" aria-labelledby="custom-tabs-four-region-tab">
                                                    <div class="input-group mb-3">
                                                        <select id="_currCountryCode" class="form-control" asp-for="oCountryRegionModel.currCountryCode" asp-items="Model.oCountryRegionModel.lkpCountries" aria-describedby="fd_currCountryCode" required>
                                                            <option selected value="">Select country</option>
                                                        </select>
                                                        <button type="button" class="btn btn-light text-secondary border ml-1" onclick="ReloadCurrPage_CTRY_RGN(7, 2, '')"> <i class="fa fa-refresh"></i></button>
                                                        <button type="button" class="btn btn-info border ml-1" onclick="AddEditCurrData_CTRY_RGN(0, '[New] Country Region')"><i class="fas fa-plus"></i><span class="text-sm"> Add New </span></button>
                                                    </div>

                                                    <div id="divTabData_CTRY_RGN" class="overlay-wrapper mb-1">
                                                        @{ await Html.RenderPartialAsync("_vwParamCTRY_RGN", Model.oCountryRegionModel); }
                                                    </div>
                                                </div>

                                                <div id="custom-tabs-four-currency" class="tab-pane fade mt-3" role="tabpanel" aria-labelledby="custom-tabs-four-currency-tab">
                                                    <div id="divTabData_CURR" class="overlay-wrapper mb-1">
                                                        @{ await Html.RenderPartialAsync("_vwParamCURR", Model.oCurrencyCustomModel); }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                         /.card 
                                    </div>
                                </div>
                            </div>
                        </div>

                         LSPK 8  ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed8" aria-expanded="true" aria-controls="collapse-collapsed8" id="heading-collapsed">
                                    <i class="fas fa-microphone pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Languages Spoken
                                </a>
                            </h6>
                            <div id="collapse-collapsed8" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamLSPK", Model.oLanguageSpokenModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc8 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_LSPK(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc8)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CPR 9  ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed9" aria-expanded="true" aria-controls="collapse-collapsed9" id="heading-collapsed">
                                    <i class="fas fa-calendar-day pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Periods
                                </a>
                            </h6>
                            <div id="collapse-collapsed9" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCPR", Model.oAppGlobalOwnModel); }
                                    <div class="card-tools">
                                        <ul class="nav nav-pills ml-auto">
                                            <li class="nav-item ">
                                                <a class="nav-link active" href="#church-year" data-toggle="tab"> Church Year </a>
                                            </li>
                                            <li class="nav-item">
                                                <a class="nav-link" href="#finance-year" data-toggle="tab"> Financial Year </a>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="tab-content p-0">
                                         Morris chart - Sales 
                                        <div class="chart tab-pane active" id="church-year" style="position: relative; height: 300px;">
                                            <canvas id="church-year-canvas" height="300" style="height: 300px;"></canvas>
                                        </div>
                                        <div class="chart tab-pane bg-teal" id="finance-year" style="position: relative; height: 300px;">
                                            <canvas id="finance-year-canvas" height="300" style="height: 300px;"></canvas>
                                        </div>

                                        @{ await Html.RenderPartialAsync("_vwParamCPR", Model.oChurchPeriodModel); }
                                    </div>
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc9 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CPR(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc9)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         NIDT 10 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed10" aria-expanded="true" aria-controls="collapse-collapsed10" id="heading-collapsed">
                                    <i class="fas fa-fingerprint pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    National ID Types
                                </a>
                            </h6>
                            <div id="collapse-collapsed10" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamNIDT", Model.oNational_IdTypeModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc10 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_NIDT(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc10)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         INST 11 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed11" aria-expanded="true" aria-controls="collapse-collapsed11" id="heading-collapsed">
                                    <i class="fas fa-graduation-cap pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Institution Types
                                </a>
                            </h6>
                            <div id="collapse-collapsed11" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamINST", Model.oInstitutionTypeModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc11 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_INT(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc11)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CTT 12 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed12" aria-expanded="true" aria-controls="collapse-collapsed12" id="heading-collapsed">
                                    <i class="fas fa-user-graduate pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Certificate Types
                                </a>
                            </h6>
                            <div id="collapse-collapsed12" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCTT", Model.oCertificateTypeModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc12 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CTT(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc12)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         RLT 13 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed13" aria-expanded="true" aria-controls="collapse-collapsed13" id="heading-collapsed">
                                    <i class="fas fa-handshake pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Relationship Types
                                </a>
                            </h6>
                            <div id="collapse-collapsed13" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamRLT", Model.oRelationshipTypeModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc13 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_RLT(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc13)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CU 14 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed14" aria-expanded="true" aria-controls="collapse-collapsed14" id="heading-collapsed">
                                    <i class="fas fa-layer-group pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Units
                                </a>
                            </h6>
                            <div id="collapse-collapsed14" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCU", Model.oChurchUnitModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc14 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CSU(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc14)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CR 15 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed15" aria-expanded="true" aria-controls="collapse-collapsed15" id="heading-collapsed">
                                    <i class="fas fa-ellipsis-v"></i>
                                    <i class="fas fa-ellipsis-v pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Ranks
                                </a>
                            </h6>
                            <div id="collapse-collapsed15" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCR", Model.oChurchRankModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc15 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CR(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc15)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CRL 16 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed16" aria-expanded="true" aria-controls="collapse-collapsed16" id="heading-collapsed">
                                    <i class="fas fa-user-tie pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Roles &amp; Positions
                                </a>
                            </h6>
                            <div id="collapse-collapsed16" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCRL", Model.oChurchRoleModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc16 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CRL(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc16)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CLA 17 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed17" aria-expanded="true" aria-controls="collapse-collapsed17" id="heading-collapsed">
                                    <i class="fas fa-place-of-worship pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church-life Activities &amp; Requirements
                                </a>
                            </h6>
                            <div id="collapse-collapsed17" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCLA", Model.oChurchlifeActivityModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc17 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CLA(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc17)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CLARD 18 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed18" aria-expanded="true" aria-controls="collapse-collapsed18" id="heading-collapsed">
                                    <i class="fas fa-place-of-worship pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church-life Activity Requirements
                                </a>
                            </h6>
                            <div id="collapse-collapsed18" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body">
                                    @{ await Html.RenderPartialAsync("_vwParamCLARD", Model.oChurchlifeActivityReqDefModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc18 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CLARD(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc18)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CMT 19 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed19" aria-expanded="true" aria-controls="collapse-collapsed19" id="heading-collapsed">
                                    <i class="fas fa-user-alt-slash pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Member Types
                                </a>
                            </h6>
                            <div id="collapse-collapsed19" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCMT", Model.oChurchMemTypeModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc19 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CMT(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc19)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CMS 20 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed20" aria-expanded="true" aria-controls="collapse-collapsed20" id="heading-collapsed">
                                    <i class="fas fa-traffic-light pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Member Statuses
                                </a>
                            </h6>
                            <div id="collapse-collapsed20" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCMS", Model.oChurchMemStatusModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc20 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CMS(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc20)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CTS 21 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed21" aria-expanded="true" aria-controls="collapse-collapsed21" id="heading-collapsed">
                                    <i class="fas fa-user-cog pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Transfer Settings
                                </a>
                            </h6>
                            <div id="collapse-collapsed21" class="collapse" aria-labelledby="heading-collapsed">
                                <div class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_vwParamCTS", Model.oAppGlobalOwnModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc21 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }
                                    <button type="button" class="btn btn-info float-right" onclick="AddEditCurrData_CTS(@Model.oAppGlobalOwnModel.oAppGlobalOwn.Id, @strDesc21)">
                                        <i class="fas fa-edit fa-sm"></i> <span>Modify</span>
                                    </button>
                                </div>
                            </div>
                        </div>

                         CTS 22 ... TO DO List 
                        <div class="card">
                            <h6 class="card-header card-title">
                                <a class="collapsed d-block" data-toggle="collapse" href="#collapse-collapsed22" aria-expanded="true" aria-controls="collapse-collapsed22" id="heading-collapsed">
                                    <i class="fas fa-user-cog pr-2" style="width:30px"></i>
                                    <i class="fa fa-chevron-down fa-sm pull-right"></i>
                                    Church Member Code Format
                                </a>
                            </h6>
                            <div id="collapse-collapsed22" class="collapse" aria-labelledby="heading-collapsed">
                                <div id="divTabData_MCCF" class="card-body card-fuchsia card-outline">
                                    @{ await Html.RenderPartialAsync("_AddOrEdit_MCCF", Model.oMemberCustomCodeFormatModel); }
                                </div>
                                 ONLY HQ level access 
                                <div class="card-footer clearfix">
                                    @{ var strDesc22 = "'" + Model.oAppGlobalOwnModel.oAppGlobalOwn.OwnerName + "'"; }

                                    <button type="button" class="btn btn-info float-right ml-1" onclick="SaveCurr_MCCF()">
                                        <i class="fas fa-sav fa-sm"></i> <span> Save changes </span>
                                    </button>
                                    <button type="button" class="btn btn-light text-secondary float-right border-secondary" onclick="ReloadCurrPage_MCCF(22, 1, 'MCCF')">
                                        <i class="fas fa-refresh"></i>
                                    </button>
                                </div>
                            </div>
                        </div>

                    </section>
                </div>
                 /.row (main row) 
            </div> /.container-fluid 
        </section>
         /.content 

    </div>
     /.content-wrapper 


    <div class="modal fade" id="divPopModal_AddEdit" tabindex="-1" role="dialog" aria-labelledby="_modalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header bg-teal text-light">
                    <h5 class="modal-title"> Editing: </h5> @Model.strCurrTask
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body bg-light" style="font-family:Verdana, Geneva, Tahoma, sans-serif;
                            font-size: 10pt" id="divModalBody_AddEdit_lg">
                </div>
                <div class="modal-footer " style="background-color: lightgrey; left:auto; right: auto">
                    <a href="#" class="btn btn-outline-light " data-dismiss="modal"> Cancel </a>
                    <button id="btnSaveChanges" type="submit" class="btn btn-primary save-data font-weight-bold"><i class="fa fa-database fa-sm"></i> Save changes </button>

                    <button id="btnSaveChanges" type="submit" class="btn btn-info float-right">
                        <i class="fas fa-database fa-sm"></i> Save changes
                    </button>
                </div>

            </div>
        </div>
    </div>

    <div class="modal fade" id="divPopModal_AddEdit_lg" tabindex="-1" role="dialog" aria-labelledby="_modalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable" role="document">
            <div class="modal-content">
                <div class="modal-header bg-teal text-light">
                    <h5 class="modal-title"> Editing: </h5> @Model.strCurrTask
                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">×</span>
                    </button>
                </div>
                <div class="modal-body bg-light" style="font-family:Verdana, Geneva, Tahoma, sans-serif;
                            font-size: 10pt" id="divModalBody_AddEdit_lg">
                </div>
                <div class="modal-footer " style="background-color: lightgrey; left:auto; right: auto">
                    <a href="#" class="btn btn-outline-light " data-dismiss="modal"> Cancel </a>
                    <button id="btnSaveChanges" type="submit" class="btn btn-light  save-data font-weight-bold"><i class="fa fa-database fa-sm"></i> Save changes </button>

                    <button id="btnSaveChanges" class="btn btn-primary" type="submit" >Submit form</button>
                </div>
            </div>
        </div>
    </div>

     Success Modal
    <div class="modal fade" id="divPopModal_Success" tabindex="-1" role="dialog" aria-hidden="true" style="background-color:transparent; min-width:75px">
        <div class="modal-dialog modal-sm bg-info" role="document">
            <div class="modal-content">
                <div class="modal-header bg-success">
                    <h5 style="color: white; font-weight:bold"> Done! </h5>
                </div>
                <div class="modal-body bg-white" style="align-items:center">
                    <label id="lblUserMessage" class="text-sm font-weight-normal text-center"></label>
                </div>

                <div class="modal-footer bg-white">
                    <a href="#" id="_btnSuccessOK" class="btn btn-success shadow shadow-sm" data-dismiss="modal">Ok</a>
                </div>
            </div>
        </div>
    </div>

</body>








@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}



    
            // sample table
            <script>
            $(function () {
                $("#example1").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                });
                $('#example2').DataTable({
                    "paging": true,
                    "lengthChange": false,
                    "searching": false,
                    "ordering": true,
                    "info": true,
                    "autoWidth": false,
                    "responsive": true,
                });
            });
        </script>


    <script>
        $(document).ready(function () {

            $('#smartwizard').smartWizard({
                selected: 0,
                theme: 'dots',
                autoAdjustHeight: true,
                transitionEffect: 'fade',
                showStepURLhash: false,

            });

        });

        var DisplaySuccessInfo = function (msg, reload = false) {   //currSubSetIndex,  proScope, subScope,

            $.alert({
                title: 'Done!',
                type: 'green',
                typeAnimated: true,
                content: msg,
                closeIcon: true,
                closeIconClass: 'fa fa-close'
            });

            //if (reload) {
            //    ReloadCurrPage_AGO();   //, currSubSetIndex , proScope, subScope
            //}
        };

        var DisplayFailMsg = function (msg, reload = false) {   //currSubSetIndex,  proScope, subScope,

            $.alert({
                title: 'Oops!',
                type: 'red',
                typeAnimated: true,
                content: msg,
                closeIcon: true,
                closeIconClass: 'fa fa-close'
            });

            //if (reload) {
            //    ReloadCurrPage_AGO();   //, currSubSetIndex , proScope, subScope
            //}
        };

        $(document).on('click', '#btnSaveChanges', function (e) {
            e.preventDefault();

            var _oSetIndex = $("#_oSetIndex").data("value");
            var _oSubSetIndex = $("#_oSubSetIndex").data("value");

            //alert('_oSetIndex: ' + _oSetIndex);
            //alert('_oSubSetIndex: ' + _oSubSetIndex);

            var _setIndex = $("#_setIndex").val();
            var _subSetIndex = $("#_subSetIndex").val();
            var _setIndex_Test = $("#_setIndex_Test").val();

            alert('_setIndex: ' + _setIndex);
            alert('_subSetIndex: ' + _subSetIndex);
            alert('_setIndex_Test: ' + _setIndex_Test);

            alert('_OrgType: ' + $("#_OrgType_Test").val());
            alert('_ChurchLevelId: ' + $("#_ChurchLevelId_Test").val());


            //alert('currSubSetIndex: ' + currSubSetIndex);
            //alert('currSubSetIndex: ' + parseInt(currSubSetIndex));

            switch (parseInt(_setIndex_Test)) {
                case 1: SaveCurr_AGO(); break;
                case 2: SaveCurr_CL(); break;
                case 3:
                case 4: SaveCurr_CB(); break;
                ///... general use one channel... one table
                case 6: case 8: case 10: case 11: case 12: case 15: case 17: case 18: case 19:
                case 20: SaveCurr_NVP(); break;
                // case 22: SaveCurr_MCCF(); break;
                ///
                case 7: //SaveCurr_CTRY_RGN();
                    if (parseInt(_subSetIndex) == 2) { SaveCurr_CTRY_RGN(); }
                    break;


                //{
                //    if (currSubSetIndex == 1) SaveCurr_CTRY(); break;
                //    else if (currSubSetIndex == 2) SaveCurr_CTRY_RGN(); break;
                //    else if (currSubSetIndex == 3) SaveCurr_CURR(); break;
                //}

            }

            //switch (new Date().getDay()) {
            //    case 6:
            //        text = "Today is Saturday";
            //        break;
            //    case 0:
            //        text = "Today is Sunday";
            //        break;
            //    default:
            //        text = "Looking forward to the Weekend";
            //}

            //if (currSetIndex==1) {  SaveCurr_AGO(); }
            //else if (currSetIndex == 1) { SaveCurr_CL(); }

            // }, false);
        })


        //$(document).on('click', '#btnSaveChanges_CB', function (e) {
        //    e.preventDefault();

        //  //  var _currSetIndex = $("#_oSetIndex").data("value");
        //    var currSetIndex = $("#_setIndex").val();


        //    alert('..OrgType: ' + $("#_OrgType").val());
        //    alert('..ChurchLevelId: ' + $("#_ChurchLevelId").val());
        //    alert('..setIndex: ' + currSetIndex);

        //    SaveCurr_CB();
        //})



        //// API url
        //const api_url =
        //    "https://mygfgapi.free.beeceptor.com/my/api/path";

        //// Defining async function
        //async function getapi(url) {

        //    // Storing response
        //    const response = await fetch(url);

        //    // Storing data in form of JSON
        //    var apidata = await response.json();
        //    console.log(apidata);
        //    if (response) {
        //        hideSpinner();
        //    }
        //    document.getElementById("data").innerHTML
        //        = `<h1>${apidata.data}</h1>`;
        //}

        //// Calling that async function
        //getapi(api_url);

        // Function to hide the Spinner
        //function hideSpinner() {
        //    document.getElementById('spinner_NVP')
        //        .style.display = 'none';
        //}




    </script>


     AGO 1 no ADD, no DEL, only EDIT 
    <script>
        var AddEditCurrData_AGO = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
              //  alert('addORedit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               //  public IActionResult AddOrEdit_AGO(int id = 0, int? oAGOId_Logged = null, int? oCBId_Logged = null, int? oUserId_Logged = null)

                var url = "@Url.Action("AddOrEdit_AGO", "ClientSetupParameters")?id=" + currId +
                                            "&oAGOId_Logged=" + currAGOId_Logged + "&oCBId_Logged=" + currCBId_Logged + "&oUserId_Logged=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_AGO').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });


                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                            $("#divPopModal_AddEdit").modal('show');
                        });

        };

        var ReloadCurrPage_AGO = function (currSetIndex, currSubSetIndex) {
                // public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0)
                window.location.href = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex; // + '&oChuCategId=' + chuCategId + '&oShowAllCong=' + showAllCong;
        }

        //$(document).on('click', '#btnSaveChanges_AGO_AGO', function (e) {
        //    e.preventDefault();

        //   // alert('click..');
        //    const form = document.getElementById("currForm_AGO");
        //    //alert('val 4 .. ' + form.checkValidity())

        //    if (form.checkValidity() === true) {

        //        SaveCurr_AGO(); //currSetIndex, currSubSetIndex);
        //    }
        //    else {
        //       // alert('val 5')
        //        event.preventDefault();
        //        event.stopPropagation();

        //        form.classList.add('was-validated');
        //    }


        //   // }, false);
        //})

        var SaveCurr_AGO = function () { // (currSetIndex, currSubSetIndex) {
            // alert('save... ');

            const form = document.getElementById("currForm_AGO");
            //alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {

                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
                var currFormData = new FormData($("#currForm_AGO").get(0));
                // var currFormData = $("#currForm_AGO").serialize();
              //  alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_AGO", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_AGO",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                          //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_AGO").val();
                         //   alert(res.userMess)
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);

                            // document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update';  // $('#btnSaveChanges_AGO').html('Update'); //var AddEditCurrData_AGO = function (currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

                            var _desc = "'[New] Denomination (Church)'";
                            if (res.resetNew == true) {
                                AddEditCurrData_AGO(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            }
                            else {
                                //$("#btnSaveChanges_AGO").prop();
                               // alert('closing...')
                                $("#divPopModal_AddEdit .close").click();
                            }

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });

                           // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                            // $("#lblUserMessage").text(msg);
                        }
                    }
                })
            }
        }

    </script>

     CL 2 no ADD, no DEL, only EDIT 
     CB 3 no ADD, no DEL, only EDIT 
    <script>
        var AddEditCurrData_CB = function (currId, currDenomId, currChurchBodyId, _strItemName, setIndex = 3) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

              alert('addORedit...');
            //alert('addORedit.. ' + currId + ' ..currDenomId: ' + currDenomId + ' .._pageIndex: ' + _pageIndex + ' .._strItemName: ' + _strItemName);

            //alert('currDenomId... ' + currDenomId)
            //alert('currChurchBodyId... ' + currChurchBodyId)

           // var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
           // var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");

           // var currParBodyId = null;
            if (currDenomId == null) currDenomId = $("#_oAppGloOwnId_Logged").data("value");
            if (currChurchBodyId == null) currChurchBodyId = $("#_oChurchBodyId_Logged").data("value");

            //alert('currDenomId: ' + currDenomId)
            //alert('currChurchBodyId: ' + currChurchBodyId)
            //alert('currUserId_Logged: ' + currUserId_Logged)

            if (currId < 0) currId = null;
            if (currDenomId < 0) currDenomId = null;
            if (currChurchBodyId < 0) currChurchBodyId = null;

            //if (currChuBodyId < 0) currChuBodyId = null;
            // if (currSetIndex < 0) currSetIndex = null;
            //if (currSubSetIndex < 0) currSubSetIndex = null;


            // public IActionResult AddOrEdit_CB(int id = 0, int? oAppGloOwnId = null, int? oAGOId_Logged = null, int? oCBId_Logged = null, int? oUserId_Logged = null)
            var url = "@Url.Action("AddOrEdit_CB", "ClientSetupParameters")?id=" + currId + "&oAppGloOwnId=" + currDenomId + //"&pageIndex=" + _pageIndex +
                                            "&oAGOId_Logged=" + currAGOId_Logged + "&oCBId_Logged=" + currCBId_Logged + "&oUserId_Logged=" + currUserId_Logged;

            // public IActionResult AddOrEdit_CB(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null, int? setIndex = 0)
            var url = "@Url.Action("AddOrEdit_CB", "ClientSetupParameters")?id=" + currId +
                "&oAppGloOwnId=" + currDenomId + "&oChurchBodyId=" + currChurchBodyId + "&oUserId=" + currUserId_Logged + "&setIndex=" + setIndex;


                     //   alert(url)

                       // if (currId > 0) { document.querySelector('#btnSaveChanges').innerHTML = 'Update'; }
            if (currId > 0) { $('#btnSaveChanges').html('Update'); }

                      //  alert(url)

            $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        //$("#_setIndex").val(setIndex);
                        //$('#divModalBody_AddEdit').load(url, function () {
            $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                           // alert('load level..')
                            $('#_ChurchLevelId').change();

                $("#divPopModal_AddEdit").modal('show');
                        });

        };


       var ReloadCurrPage_CB = function (currSetIndex = 7, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
            // alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CB').load(url, function () {

                //$("#tabData_CBA").DataTable({
                //    "responsive": true,
                //    "autoWidth": false,
                //    //"paging": true,
                //    //"lengthChange": false,
                //    //"searching": false,
                //    //  "orderable": true,
                //    //"info": true,
                //    "columnDefs": [{
                //        "targets": [0, 5],
                //        "orderable": false,
                //    }]
                //});

            });
        }


        var ReloadCurrPage_CB = function (currSetIndex, currSubSetIndex) {
                // public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0)
                window.location.href = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex; // + '&oChuCategId=' + chuCategId + '&oShowAllCong=' + showAllCong;
        }

        //$(document).on('click', '#btnSaveChanges', function (e) {
        //    e.preventDefault();

        //    alert('click..');

        //    const form = document.getElementById("currForm_CB");

        //    if (form.checkValidity() === true) {

        //        SaveCurr_CB(); //currSetIndex, currSubSetIndex);
        //    }
        //    else {
        //       // alert('val 5')+*

        //        event.preventDefault();
        //        event.stopPropagation();

        //        form.classList.add('was-validated');
        //    }


        //   // }, false);
        //})

        var SaveCurr_CB = function () { // (currSetIndex, currSubSetIndex) {
            alert('saving CB... ');

            var currFormData = new FormData($("#currForm_CB").get(0));
            // var currFormData = $("#currForm_CB").serialize();

           // alert('save... submitting...');

            $.ajax({
                type: 'POST',
                // data: formdata,
                // processData: false,

                url: '@Url.Action("AddOrEdit_CB", "ClientSetupParameters")',

               // url: "/ClientSetupParameters/AddOrEdit_CB",
                data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                contentType: false,
                processData: false,
                success: function (res) {

                    if (res.taskSuccess == true) {
                        //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_AGO").val();
                        //   alert(res.userMess)
                        DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);

                        // document.querySelector('#btnSaveChanges_AGO').innerHTML = 'Update';  // $('#btnSaveChanges_AGO').html('Update'); //var AddEditCurrData_AGO = function (currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)

                        if (res.resetNew == true) {
                            var _desc = "'[New] Church Body'";
                            var _denomId = $("#_hdnAppGloOwnId").val();

                            var currSetIndex = $("#_setIndex").val();
                            alert('currSetIndex: ' + currSetIndex)
                            alert('currSetIndex: ' + currSetIndex)

                            var _churchBodyId = null; // $("#_oChurchBodyId_Logged").data("value");  // $("#_oChurchBodyId_Logged").val();
                            if (parseInt(currSetIndex) == 3)
                                _churchBodyId = $("#_hdnCurrId_CB").val();
                            else if (parseInt(currSetIndex) == 4)
                                _churchBodyId = $("#_hdnCurrId_CBA").val();

                            AddEditCurrData_CB(0, _denomId, _churchBodyId, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                        }
                        else {
                            //$("#btnSaveChanges_AGO").prop();
                            // alert('closing...')
                            $("#divPopModal_AddEdit .close").click();
                        }

                        //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                    }

                    else //if (res.taskSuccess == false)
                    {
                        $.alert({
                            title: 'Oops!',
                            content: res.userMess,
                            type: 'red',
                            typeAnimated: true,
                        });

                        // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                        // $("#lblUserMessage").text(msg);
                    }

                }
            })
        }

    </script>

    <script>

        $(document).on('change', '#_CountryId', function (e) {
            e.preventDefault();

         var _ctryId = $("#_CountryId").val();

            var hdn_CountryRegionId = $('#hdn_CountryRegionId').val();

         //  alert('ctryId: ' + _ctryId);

            var url = '@Url.Action("GetCountryRegionsByCountry", "ClientSetupParameters")'; // '@Url.Content("~/")' + 'ClientSetupParameters/GetCountryRegionsByCountry';
            $('#_CountryRegionId').empty();
            //GetCountryRegionsByCountry( int? ctryId, bool addEmpty = false)
            $.getJSON(url, { ctryId: _ctryId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, ctryReg) {
                        items += "<option value='" + ctryReg.value + "'>" + ctryReg.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                 //   alert(items)
                    $('#_CountryRegionId').html(items);

                    $('#_CountryRegionId').val(hdn_CountryRegionId);
                }
            });
        })

         $(document).on('change', '#_ChurchBodyId_4', function (e) {
            e.preventDefault();

           //  alert('_ChurchBodyId_4: ' + $("#_ChurchBodyId_4").val())

             var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_4").val();
             var hdn_ChurchBodyId_5 = $('#hdn_ChurchBodyId_5').val();
           //  alert('4. parentCBId: ' + parentCBId);

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_5').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_5').html(items);

                    $('#_ChurchBodyId_5').val(hdn_ChurchBodyId_5);


                    //if ($("#_div_ChurchBodyId_6").is(":hidden") == false) {
                    //    $('#_ChurchBodyId_5').change();
                    //}
                }
            });
        })

        $(document).on('change', '#_ChurchBodyId_3', function (e) {
            e.preventDefault();

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var parentCBId = $("#_ChurchBodyId_3").val();
             var hdn_ChurchBodyId_4 = $('#hdn_ChurchBodyId_4').val();
           //  alert('_ChurchBodyId_3: ' + $("#_ChurchBodyId_3").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_4').empty();

             //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
             $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_4').html(items);

                    $('#_ChurchBodyId_4').val(hdn_ChurchBodyId_4);

                    if ($("#_div_ChurchBodyId_5").is(":hidden") == false) {
                        $('#_ChurchBodyId_4').change();
                    }
                }
            });
         })

        $(document).on('change', '#_ChurchBodyId_2', function (e) {
            e.preventDefault();
          //  alert(' triggered...')

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
             var parentCBId = $("#_ChurchBodyId_2").val();

             var hdn_ChurchBodyId_3 = $('#hdn_ChurchBodyId_3').val();
          //   alert('_ChurchBodyId_2: ' + $("#_ChurchBodyId_2").val())

            var url = '@Url.Action("GetChurchBodyListByParentBody", "ClientSetupParameters")';
            $('#_ChurchBodyId_3').empty();

            //  public JsonResult GetChurchBodyListByParentBody(int? oParentCBId, int? oAppGloOwnId, string strOrgType = null, bool addEmpty = false)
            $.getJSON(url, { oParentCBId: parentCBId, oAppGloOwnId: currDenomId, strOrgType: 'CH', addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_3').html(items);

                    $('#_ChurchBodyId_3').val(hdn_ChurchBodyId_3);

                    if ($("#_div_ChurchBodyId_4").is(":hidden") == false) {
                        $('#_ChurchBodyId_3').change();
                    }
                }
            });
        })

        $(document).on('change', '#_ChurchLevelId', function (e) {
            e.preventDefault();

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
            var churchLevelId = $("#_ChurchLevelId").val();


           //alert('_ChurchLevelId: ' + churchLevelId);
           // alert('currDenomId: ' + currDenomId);

            //  public JsonResult GetChurchLevelIndexByChurchLevel(int? oChurchLevelId, int? oAppGloOwnId, bool addEmpty = false)
            var url = '@Url.Action("GetChurchLevelIndexByChurchLevel", "ClientSetupParameters")';

                $('#_ChurchBodyId_2').empty();

             //document.getElementById('_CountryId').value = '';
            $.getJSON(url, { oChurchLevelId: churchLevelId, oAppGloOwnId: currDenomId }, function (res) {
                 if (res != null) {  // alert(res.taskSuccess);  alert(res.strResId); alert(res.strRes);
                    // document.getElementById('_CountryId').value = res.strResId;    // return Json(new { taskSuccess = res, numResLev = _numResLev, strRes = _strRes });

                     var CHLevelIndex = res.numResLev - 1;
                     $('#_numCLIndex').val(res.numResLev);
                     $('#_oCBLevelCount').val(CHLevelIndex);

                   // alert('CHLevelIndex: ' + CHLevelIndex);
                     //
                     $('#_div_ChurchBodyId_1').prop('hidden', !(CHLevelIndex > 0));
                     ///
                     $('#_div_ChurchBodyId_2').prop('hidden', !(CHLevelIndex > 1));
                     $('#_div_ChurchBodyId_3').prop('hidden', !(CHLevelIndex > 2));
                     $('#_div_ChurchBodyId_4').prop('hidden', !(CHLevelIndex > 3));
                     $('#_div_ChurchBodyId_5').prop('hidden', !(CHLevelIndex > 4));
                     ///
                     //if ($("#_div_ChurchBodyId_2").is(":hidden") == false) {
                     //    alert('visible... trigger')

                     initChurchBodyListLookUp();
                     $('#_CountryId').change();

                        // $('#_CountryId').trigger('change');
                     //}
                 }
            });
        })

        var initChurchBodyListLookUp = function () {

            var url = '@Url.Action("GetInitChurchBodyListByAppGloOwn", "ClientSetupParameters")';

            var currDenomId = $("#_oAppGloOwnId_Logged").data("value");
           // var currDenomId = $("#_hdnAppGloOwnId").val();
           // var churchLevelId = $("#_ChurchLevelId").val();

           // var tempChurchId_2 = $('#_ChurchBodyId_2').val();

           var hdn_ChurchBodyId_2 = $('#hdn_ChurchBodyId_2').val();


          //  alert('bf: ' + tempChurchId_2)
          //  alert('bf: ' + tempChurchId_2 + ' ...  bf hdn: ' + hdn_ChurchBodyId_2)

            $('#_ChurchBodyId_2').empty();
            //   public JsonResult GetInitChurchBodyListByAppGloOwn(int? oAppGloOwnId, bool addEmpty = false)
            $.getJSON(url, { oAppGloOwnId: currDenomId, addEmpty: true }, function (data) {
                if (Object.keys(data).length > 0) {
                    var items = '';
                    $.each(data, function (i, oData) {
                        items += "<option value='" + oData.value + "'>" + oData.text + "</option>";   // alert(items);
                    });
                    // items += "<option value=''> Select </option>";
                    $('#_ChurchBodyId_2').html(items);

                  //  alert('af: ' + tempChurchId_2)
                  //  alert('af: ' + tempChurchId_2 + ' ... af hdn: ' + hdn_ChurchBodyId_2)

                   // alert('hdn2: ' + $('#hdn_ChurchBodyId_2').val())

                    $('#_ChurchBodyId_2').val(hdn_ChurchBodyId_2);

                    if ($("#_div_ChurchBodyId_3").is(":hidden") == false) {
                       // alert('trig 2...')
                        $('#_ChurchBodyId_2').change();
                    }
                }
            });
        }

    </script>


     CB 4 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_CBA").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
                //  "orderable": true,
                //"info": true,
                //"order": [],
                "columnDefs": [{
                    "targets": [0, 6],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CBA = function (currSetIndex = 7, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
            // alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CBA').load(url, function () {

                $("#tabData_CBA").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"paging": true,
                    //"lengthChange": false,
                    //"searching": false,
                    //  "orderable": true,
                    //"info": true,
                    "columnDefs": [{
                        "targets": [0, 5],
                        "orderable": false,
                    }]
                });

            });
        }


    </script>

     NVP 6 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_NVP").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"aaSorting": [],
                //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
            //$('#tabData_NVP').DataTable({
            //    "paging": true,
            //    "lengthChange": false,
            //    "searching": false,
            //    "ordering": true,
            //    "info": true,
            //    "autoWidth": false,
            //    "responsive": true,
            //});
        });

        var ReloadCurrPage_NVP = function (currSetIndex = 6, currSubSetIndex = 1, strNVPCode = "", currNVPCategoryId = null) {
           // alert('reload..')
                // public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0)
            //$("#spinner_NVP").show();
              //  window.location.href = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex; // + '&oChuCategId=' + chuCategId + '&oShowAllCong=' + showAllCong;

            if (strNVPCode == null || strNVPCode == "")
                strNVPCode = $("#_currNVPCode").val();

            else if ((strNVPCode != null && strNVPCode != "") && strNVPCode != $("#_currNVPCode").val()) {
                $("#_currNVPCode").val(strNVPCode);
            }

           // alert("old 2: " + currNVPCategoryId)

            if (strNVPCode == 'CLARD') {
                if (currNVPCategoryId == null)
                    currNVPCategoryId = $("#_currNVPCategoryId").val();

              //  alert("new 2: " + currNVPCategoryId)

                var isHidden = $("#_currNVPCategoryId").is(":hidden", true);
                if (isHidden || $("#_currNVPCategoryId").val() == null)
                {
                    $("#_currNVPCategoryIdTemp").val(currNVPCategoryId);
                    $("#_currNVPCode").change(); // trigger to reload list

                   // alert('...reloading list')
                    var parId = $("#_currNVPCode").val();
                    $('#_currNVPCategoryId').prop('hidden', !(parId == 'CLARD'));

                    alert('init: ' + currNVPCategoryId)
                    if (currNVPCategoryId == null) { currNVPCategoryId = $("#_currNVPCategoryId").val(); }
                    alert('val2: ' + currNVPCategoryId);

                   // alert('parId: ' + parId);
                    if (parId == 'CLARD') {
                        var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetCLAsByNVPCode';
                        $('#_currNVPCategoryId').empty();
                        // public JsonResult GetCLAsByNVPCode(string parId, int? oAGOId = null, int? oCBId = null, bool addEmpty = false)
                        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
                        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
                        $.getJSON(url, { parId: parId, oAGOId: currAGOId_Logged, oCBId: currCBId_Logged, addEmpty: true}, function (data) {
                            if (Object.keys(data).length > 0)
                            {
                                var items = '';
                                $.each(data, function (i, oVal) {
                                    items += "<option value='" + oVal.value + "'>" + oVal.text + "</option>";   // alert(items);
                                    //if (oVal.value == currNVPCategoryId) items += " selected";
                                    //items += "</option>";
                                });
                               // items += "<option value=''> Select </option>";
                                $('#_currNVPCategoryId').html(items);

                                $("#_currNVPCategoryId").find("option").each(function () {
                                    if ($(this).val() == currNVPCategoryId) {
                                        $(this).attr("selected", true);
                                        return false;
                                    }
                                });
                            }
                        });
                    }
                }

                //if ((currNVPCategoryId != null) && $("#_currNVPCategoryId").val() != currNVPCategoryId) {
                //    $("#_currNVPCategoryId").val(currNVPCategoryId);
                //}
                //else currNVPCategoryId = $("#_currNVPCategoryId").val();

                //alert('init: ' + currNVPCategoryId)

                //if (currNVPCategoryId != null) {
                //    alert(document.getElementById("_currNVPCategoryId").length);

                //    $("#_currNVPCategoryId").val(currNVPCategoryId); alert('val1: ' + $("#_currNVPCategoryId").val());

                //   // var ddl_1 = "#_TransferType";
                //    document.getElementById("_currNVPCategoryId").value = currNVPCategoryId;
                //    alert('value1: ' + document.getElementById("_currNVPCategoryId").value)
                //}
                //else if (currNVPCategoryId == null) { currNVPCategoryId = $("#_currNVPCategoryId").val(); alert('val2: ' + currNVPCategoryId);}

                //if (!$("#_currNVPCategoryId").is(":hidden", true) && $("#_currNVPCategoryId").val()==null) {
                //   // alert("Please select the Churchlife activity");
                //    DisplayFailMsg("Please select the churchlife activity to configure the steps");

                //    return false;
                //}

            }

           // if (currNVPCategoryId == null) currNVPCategoryId = -1;

            //alert('code 1:.. ' + strNVPCode)
            //alert('code 2:.. ' + currNVPCategoryId)

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&numCodeCriteria_1=' + currNVPCategoryId + '&strCodeCriteria_2=' + strNVPCode;

            //$('#_tabData_NVP').load(url);

           // var $sectionData = $("#tab-section-data-NVP");
           //// var url=$productList.data("url");
           // alert(url);
           // $sectionData.load(url);

            //$(window).scroll(function () {
            //    sessionStorage.scrollTop = $(this).scrollTop();
            //});

                $('#divTabData_NVP').load(url, function (e) {

                    $("#tabData_NVP").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        //"aaSorting": [],
                        //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                        "columnDefs": [{
                            "targets": [5],
                            "orderable": false,
                        }]
                    });

                    //if (sessionStorage.scrollTop != "undefined") {
                    //    $(window).scrollTop(sessionStorage.scrollTop);
                    //}

                    //$('#divPopModal_AddEdit .modal-title').html(_strItemName);
                    // $("#divPopModal_AddEdit").modal('show');
                });


            //$.ajax({
            //    url: url,
            //    type:get,
            //    success: function (data) {
            //        alert('done')
            //        $("#tabSectionData_NVP").html(data);
            //    },
            //    error: function () {
            //        alert("Error occured while loading data");
            //    }
            //})

           // $("#spinner_NVP").hide();
        }

        var AddEditCurrData_NVP = function (currId, _strItemName, currNVPCode = '', currNVPCategoryId = 0) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
            // alert('addORedit... nvp');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");

           // alert("old 1: " + currNVPCode)
          //  alert("old 2: " + currNVPCategoryId)

            // if (currNVPCode == null || currNVPCode == "") currNVPCode = $("#_NVPCode").val();
            if (currNVPCode == null || currNVPCode == "") currNVPCode = $("#_currNVPCode").val();
            if (currNVPCode == 'CLARD') currNVPCategoryId = $("#_currNVPCategoryId").val();

           // alert("new 1: " + currNVPCode)
          //  alert("new 2: " + currNVPCategoryId)
           // var currParBodyId = null;

            if (currId == 0) {

                //var oNVPCodeSelect = document.getElementById("_currNVPCode");
                //var strNVP = oNVPCodeSelect.options[oNVPCodeSelect.selectedIndex].text;
                //var oNVPCode_ParSelect = document.getElementById("_NVPCategoryId");
                //var strNVP_Par = oNVPCode_ParSelect.options[oNVPCode_ParSelect.selectedIndex].text;
               // if ((currSetIndex = 18 || strNVPCode == 'CLARD') && currNVPCategoryId == 0) currNVPCategoryId = $("#_currNVPCategoryId").val();

                var str1 = document.getElementById("_currNVPCode").options[document.getElementById('_currNVPCode').selectedIndex].text;
              //  var str2 = document.getElementById("_currNVPCategoryId").options[document.getElementById('_currNVPCategoryId').selectedIndex].text;
              //  str2 = str2 != '' ? '/' + str2 : str2;

              //  alert("desc: " + str1 + str2)
                _strItemName = "[New] Lookup Parameter (" + str1 + ")";
            }

                if (currId < 0) currId = null;
             //  public IActionResult AddOrEdit_NVP(int id = 0, int ? oAppGloOwnId = null, int ? oChurchBodyId = null, int ? numCodeCriteria_1 = null, string strCodeCriteria_2 = null, int ? oUserId = null)

            var url = "@Url.Action("AddOrEdit_NVP", "ClientSetupParameters")?id=" + currId + "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged +
                "&numCodeCriteria_1=" + currNVPCategoryId + "&strCodeCriteria_2=" + currNVPCode + "&oUserId=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_NVP').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_NVP').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });


                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $("#_NVPCode").val(currNVPCode);
                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                            $("#divPopModal_AddEdit").modal('show');
                        });

        };

        //$(document).on('click', '#btnSaveChanges_NVP', function (e) {
        //    e.preventDefault();

        //   // alert('click..');
        //    const form = document.getElementById("currForm_NVP");
        //    //alert('val 4 .. ' + form.checkValidity())

        //    if (form.checkValidity() === true) {

        //        SaveCurr_NVP(); //currSetIndex, currSubSetIndex);
        //    }
        //    else {
        //       // alert('val 5')
        //        event.preventDefault();
        //        event.stopPropagation();

        //        form.classList.add('was-validated');
        //    }


        //   // }, false);
        //})

        var SaveCurr_NVP = function () {
            // (currSetIndex, currSubSetIndex) {
           // alert('save... ');

            const form = document.getElementById("currForm_NVP");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {
              //  alert('not valid')
                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
               // alert('about to save...');
                var currFormData = new FormData($("#currForm_NVP").get(0));

                // var currFormData = $("#currForm_NVP").serialize();
              // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_NVP", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_NVP",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                          //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_NVP").val();
                         //   alert(res.userMess)
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_NVP(6, 1);   //via AJAX...

                            // document.querySelector('#btnSaveChanges_NVP').innerHTML = 'Update';  // $('#btnSaveChanges_NVP').html('Update'); //var AddEditCurrData_NVP = function (currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
                            var _currParam = $("#_NVPCode").val();
                            var _desc = "'[New] Lookup Parameter'";
                            if (res.resetNew == true) {
                                AddEditCurrData_NVP(0, _desc, _currParam); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            }
                            else {
                                //$("#btnSaveChanges_NVP").prop();
                               // alert('closing...')
                                $("#divPopModal_AddEdit .close").click();
                            }

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });

                           // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                            // $("#lblUserMessage").text(msg);
                        }
                    }
                })
            }
        }

        var DeleteCurrData_NVP = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')
       // alert('DEL.. ' + currId + ' __ indx: ' + currSetIndex + ' .. forceDeleteConfirm: ' + forceDeleteConfirm);

            //  if (delConfirm == null) { delConfirm = false; }

            //alert('DEL.. ' + currId + ' __ indx: ' + currSetIndex + 'delConfirm: ' + delConfirm);
           // var oAppGloId = null;

       // var currUserId = $("#_oUserId_Logged").val();

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            // var currDenomId = $("#_hdnAppGloOwnId").val();
       // alert('currUserId: ' + currUserId)

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified lookup parameter' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_NVP", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_NVP",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_NVP(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_NVP(6, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_NVP(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>

    <script>
        $(document).on('change', '#_ValueType', function (e) {
            e.preventDefault();

            // alert('chk...')
            var valType = $('#_ValueType').val();
            //  alert('value type: ' + valType)

            $('#_NVPValue').prop('hidden', !(valType == 'T'));
            $('#_NVPNumVal').prop('hidden', !(valType == 'N'));
            $('#_NVPFromDate').prop('hidden', !(valType == 'D'));
            $('#_NVPToDate').prop('hidden', !(valType == 'D'));

        });

        $(document).on('change', '#_currNVPCode', function (e) {
            e.preventDefault();

            // alert('...reloading list')
            var parId = $("#_currNVPCode").val();
            $('#_currNVPCategoryId').prop('hidden', !(parId == 'CLARD'));

            var currNVPCategoryId = $("#_currNVPCategoryIdTemp").val();
          //  alert('init: ' + currNVPCategoryId)
            if (currNVPCategoryId == null) { currNVPCategoryId = $("#_currNVPCategoryId").val(); }
          //  alert('val2: ' + currNVPCategoryId);

           // alert('parId: ' + parId);
            if (parId == 'CLARD') {
                var url = '@Url.Content("~/")' + 'ClientSetupParameters/GetCLAsByNVPCode';
                $('#_currNVPCategoryId').empty();
                // public JsonResult GetCLAsByNVPCode(string parId, int? oAGOId = null, int? oCBId = null, bool addEmpty = false)
                var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
                var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
                $.getJSON(url, { parId: parId, oAGOId: currAGOId_Logged, oCBId: currCBId_Logged, addEmpty: true}, function (data) {
                    if (Object.keys(data).length > 0)
                    {
                        var items = ''; var sel = 0;
                        $.each(data, function (i, oVal) {
                            items += "<option value='" + oVal.value +"'"; //>" + oVal.text; //+ "</option>";   // alert(items);
                            if (oVal.value == currNVPCategoryId && sel == 0) { items += " selected "; sel++; }
                            items += ">" + oVal.text + "</option>";
                        });

                        //alert('sel: ' + sel);
                        //alert(items)

                        // items += "<option value=''> Select </option>";
                        $('#_currNVPCategoryId').html(items);

                        //$("#_currNVPCategoryId").find("option").each(function () {
                        //    if ($(this).val() == currNVPCategoryId) {
                        //        $(this).attr("selected", true);
                        //        return false;
                        //    }
                        //});
                    }
                });
            }
        });

    </script>


     CTRY 7.1 no ADD, no DEL, only EDIT 
    <script>

        $(function () {
            $("#tabData_CTRY").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [3, 4, 5],
                    "orderable": false,
                }]
            });

            $("#tabData_CTRY_BLK").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [10, 11, 12],
                    "orderable": false,
                }]
            });
        });

        //LoadTable_CTRY();

        //var LoadTable_CTRY = function () {
        //    $("#tabData_CTRY").DataTable({
        //        "responsive": true,
        //        "autoWidth": false,
        //        "columnDefs": [{
        //            "targets": [4],
        //            "orderable": false,
        //        }]
        //    });
        //}

        var AddEditCurrData_CTRY = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
              //  alert('addORedit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               //   public IActionResult AddOrEdit_CTRY(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null)

                var url = "@Url.Action("AddOrEdit_CTRY", "ClientSetupParameters")?id=" + currId +
                                            "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged + "&oUserId=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_CTRY').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_CTRY').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                            $("#divPopModal_AddEdit").modal('show');
                        });

        };

        var ReloadCurrPage_CTRY = function (currSetIndex = 7, currSubSetIndex = 1, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
            // alert('currSetIndex: ' + currSetIndex)
            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CTRY').load(url, function () {

                if (currPageIndex == 2) {
                    $("#tabData_CTRY_BLK").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [10, 11, 12],
                            "orderable": false,
                        }]
                    });
                }
                else {
                    $("#tabData_CTRY").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [3, 4, 5],
                            "orderable": false,
                        }]
                    });
                }
            });

            //if (currPageIndex != 1) {
            //    $('#tabSectionMod_CTRY').hide();
            //}
        }

        $(document).on('click', '#btnSaveChanges_CTRY_BLK', function (e) {
            e.preventDefault();

           // alert('click..');
              SaveCurr_CTRY();
        })

        var SaveCurr_CTRY = function () { // (currSetIndex, currSubSetIndex) {

           // alert('save... ');
          //  var currFormData = new FormData($("#currForm_CTRY_BLK").get(0));

            var currFormData = $("#currForm_CTRY_BLK").serializeArray();
            //var parameters = [];
            var tbl = $('#tabData_CTRY_BLK').DataTable();
            var tbl_data = tbl.$('input, select').serializeArray();

            //   alert("tab len: " + tbl_data.length);

            //$.each(tbl_data, function (i, tab_f) {
            //    alert('tab...');
            //    alert(tab_f.name + ' == ' + tab_f.value);
            //});


            //{ title = "_rowdata" }  $('input[name!=security]', this).serialize();

           // var currFormData = $("#currForm_CTRY_BLK").serializeArray();

            // var formdata = $('#currForm_Attendee').find('input[title!=_rowdata]').serializeArray();
            // var formdata = $("#currForm_Attendee :not(.row-hide) > :input").serializeArray();
            //  var formdata = $("#currForm_Attendee :not(.row-hide)").serializeArray();
            //   var formdata = $("#currForm_Attendee").not(".row-hide").serializeArray();

            //   alert("len 1: " + formdata.length);
            //$.each(formdata, function (i, field) {
            //       alert(field.name + ' == ' + field.value);
            //})
            //  $.each(formdata, function (i, field) {
            //   alert(field.name + ' == ' + field.value);


          //  var counter = 0; var counterIn = 0;

            $.each(tbl_data, function (i, tab_f) {
                // alert('tab...');
                // alert(tab_f.name + ' == ' + tab_f.value);

              //  counter++;

                // if (field.name == tab_f.name) {
                // formdata.push({ name: tab_f.name, value: tab_f.value });

                // formdata.append(tab_f.name, tab_f.value);

                var attr_found = false;
                $.each(currFormData, function (i, field) {
                    //
                    if (field.name == tab_f.name) {
                        // alert(field.name + ' == ' + tab_f.name);
                        field.value = tab_f.value;
                        attr_found = true;

                       // counterIn++;
                        return false;
                    }
                });

                // alert('attr_found: ' + attr_found);
                if (attr_found == false) {
                   // alert('adding.. ' + tab_f.name)
                    //  formdata.append(tab_f.name, tab_f.value);

                    currFormData.push({ name: tab_f.name, value: tab_f.value });
                }

                // field.value = tab_f.value;
                // formdata[field.name] = tab_f.value;
                // }
            });

           // var _data = JSON.stringify(parameters);
            alert('finally... serialized... save');
          //  alert('finally... save:- ' + counter + " ... counterIn:- " + counterIn)


            $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,
                    url: '@Url.Action("AddOrEdit_CTRY_BLK", "ClientSetupParameters")',
                   // url: "/ClientSetupParameters/AddOrEdit_CTRY",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                   // contentType: false,
                   // processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_CTRY(7, 1, 2);   //via AJAX...

                            //var _desc = "'[New] Country'";

                            //if (res.resetNew == true) {
                            //    AddEditCurrData_CTRY(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            //}
                            //else {
                            //    $("#divPopModal_AddEdit .close").click();
                            //}

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });
                        }
                    }
                })
        }

        var DeleteCurrData_CTRY = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified country' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CTRY", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_CTRY",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_CTRY(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CTRY(7, 1, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CTRY(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>


     CTRY_RGN 7.2 no ADD, no DEL, only EDIT 
    <script>
        //LoadTable_CTRY_RGN();

        $(function () {
            $("#tabData_CTRY_RGN").DataTable({
                "responsive": true,
                "autoWidth": false,
                //"paging": true,
                //"lengthChange": false,
                //"searching": false,
              //  "orderable": true,
                //"info": true,
                "columnDefs": [{
                    "targets": [0, 1, 2],
                    "orderable": false,
                }]
            });
        });

        //$('#tabData_CTRY_RGN').DataTable({
        //    "paging": true,
        //    "lengthChange": false,
        //    "searching": false,
        //    "ordering": true,
        //    "info": true,
        //    "autoWidth": false,
        //    "responsive": true,
        //});


        //$(function () {
        //    ReloadCurrPage_CTRY_RGN(7, 2)
        //});

        var AddEditCurrData_CTRY_RGN = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
           //    alert('add OR edit...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
            var currCountryCode = $("#_currCountryCode").val();
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               // public IActionResult AddOrEdit_CTRY_RGN (int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, string strCodeCriteria_2 = null, int? oUserId = null)

                var url = "@Url.Action("AddOrEdit_CTRY_RGN", "ClientSetupParameters")?id=" + currId +
                                            "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged + "&strCodeCriteria_2=" + currCountryCode + "&oUserId=" + currUserId_Logged ;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_CTRY_RGN').innerHTML = 'Update'; }
            if (currId > 0) { $('#btnSaveChanges_CTRY_RGN').html('Update'); }

            $('#divPopModal_AddEdit').modal({
                backdrop: 'static',
                keyboard: false
            });
                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

            $('#divPopModal_AddEdit .modal-dialog').draggable({
                handle: ".modal-header"
            });

            //alert('loading modal...')
            $('#divPopModal_AddEdit .modal-body').load(url, function () {

                $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                $("#divPopModal_AddEdit").modal('show');
            });

        };

        var ReloadCurrPage_CTRY_RGN = function (currSetIndex = 7, currSubSetIndex = 2, ctryCode = "") {
          // alert('reload.. ' )
          //  alert('reload.. ' + ctryCode)

            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            if (ctryCode == null || ctryCode == "") ctryCode = $("#_currCountryCode").val();
          //  alert('reload in:.. ' + ctryCode)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + ctryCode;

            // tabData_CTRY
            $('#divTabData_CTRY_RGN').load(url, function (e) {
               // e.preventDefault();

                $("#tabData_CTRY_RGN").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"paging": true,
                    //"lengthChange": false,
                    //"searching": false,
                    //"ordering": true,
                    //"info": true,
                    "columnDefs": [{
                        "targets": [0, 1, 2],
                        "orderable": false,
                    }]
                });
            });
        }

        var SaveCurr_CTRY_RGN = function () { // (currSetIndex, currSubSetIndex) {
            // alert('save... ');

            const form = document.getElementById("currForm_CTRY_RGN");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {

                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
                var currFormData = new FormData($("#currForm_CTRY_RGN").get(0));
                // var currFormData = $("#currForm_CTRY_RGN").serialize();
               // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_CTRY_RGN", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_CTRY_RGN",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_CTRY_RGN(7, 2);   //via AJAX...
                            var _desc = "'[New] Country Region'";

                            if (res.resetNew == true) {
                                AddEditCurrData_CTRY_RGN(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            }
                            else {
                                $("#divPopModal_AddEdit .close").click();
                            }

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });
                        }
                    }
                })
            }
        }

        var DeleteCurrData_CTRY_RGN = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified country region' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CTRY_RGN", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_CTRY_RGN",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_CTRY_RGN(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CTRY_RGN(7, 2);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CTRY_RGN(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>


     CURR 7.3 no ADD, no DEL, only EDIT 
    <script>

          $(function () {
              $("#tabData_CURR").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [4, 5, 6],
                    "orderable": false,
                }]
              });

              $("#tabData_CURR_BLK").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [10, 11, 12],
                    "orderable": false,
                }]
              });
          });


        //LoadTable_CURR();

        //var LoadTable_CURR = function () {
        //    $("#tabData_CURR").DataTable({
        //        "responsive": true,
        //        "autoWidth": false,
        //        "columnDefs": [{
        //            "targets": [4],
        //            "orderable": false,
        //        }]
        //    });
        //}

        var AddEditCurrData_CURR = function (currId, _strItemName) {  //(currId, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _strItemName)
                alert('addORedit curr...');
               // alert('addORedit.. ' + currId )  //+ ' __indx: ' + currSetIndex);

            var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
            var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");
            var currUserId_Logged = $("#_oUserId_Logged").data("value");
           // var currParBodyId = null;

                if (currId < 0) currId = null;
               //   public IActionResult AddOrEdit_CURR(int id = 0, int? oAppGloOwnId = null, int? oChurchBodyId = null, int? oUserId = null)

                var url = "@Url.Action("AddOrEdit_CURR", "ClientSetupParameters")?id=" + currId +
                                            "&oAppGloOwnId=" + currAGOId_Logged + "&oChurchBodyId=" + currCBId_Logged + "&oUserId=" + currUserId_Logged;

                     //   alert(url)  // if (currId > 0) { document.querySelector('#btnSaveChanges_CURR').innerHTML = 'Update'; }
                        if (currId > 0) { $('#btnSaveChanges_CURR').html('Update'); }
                        $('#divPopModal_AddEdit').modal({
                            backdrop: 'static',
                            keyboard: false
                        });

                        //$('#divPopModal_AddEdit').modal({
                        //    backdrop: false,
                        //    show: true
                        //});

                        $('#divPopModal_AddEdit .modal-dialog').draggable({
                            handle: ".modal-header"
                        });

                        //alert('loading modal...')
                        $('#divPopModal_AddEdit .modal-body').load(url, function () {

                            $('#divPopModal_AddEdit .modal-title').html(_strItemName);
                            $("#divPopModal_AddEdit").modal('show');
                        });

        };

        var ReloadCurrPage_CURR = function (currSetIndex = 7, currSubSetIndex = 3, currPageIndex = 1, currFilterIndex = 1, currLoadSectionOnly = true) {
           // alert('CURR ... currFilterIndex: ' + currFilterIndex)

            //  public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1)
            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=' + currLoadSectionOnly + '&filterIndex=' + currFilterIndex + '&pageIndex=' + currPageIndex;

            $('#divTabData_CURR').load(url, function () {
                if (currPageIndex == 2) {
                    $("#tabData_CURR_BLK").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [10, 11, 12],
                            "orderable": false,
                        }]
                    });
                }
                else {
                    $("#tabData_CURR").DataTable({
                        "responsive": true,
                        "autoWidth": false,
                        "columnDefs": [{
                            "targets": [4, 5, 6],
                            "orderable": false,
                        }]
                    });
                }
            });

            //if (currPageIndex != 1) {
            //    $('#tabSectionMod_CURR').hide();
            //}
        }

          $(document).on('click', '#btnSaveChanges_CURR_BLK', function (e) {
            e.preventDefault();

           // alert('click..');
              SaveCurr_CURR();
        })

        var SaveCurr_CURR = function () { // (currSetIndex, currSubSetIndex) {

         //   alert('save... curr');
          //  var currFormData = new FormData($("#currForm_CURR_BLK").get(0));

            var currFormData = $("#currForm_CURR_BLK").serializeArray();

            var tbl = $('#tabData_CURR_BLK').DataTable();
            var tbl_data = tbl.$('input, select').serializeArray();


          //  alert("tab len: " + tbl_data.length);

            //$.each(tbl_data, function (i, tab_f) {
            //    alert('tab...');
            //    alert(tab_f.name + ' == ' + tab_f.value);
            //});


            //{ title = "_rowdata" }  $('input[name!=security]', this).serialize();

           // var currFormData = $("#currForm_CURR_BLK").serializeArray();

            // var formdata = $('#currForm_Attendee').find('input[title!=_rowdata]').serializeArray();
            // var formdata = $("#currForm_Attendee :not(.row-hide) > :input").serializeArray();
            //  var formdata = $("#currForm_Attendee :not(.row-hide)").serializeArray();
            //   var formdata = $("#currForm_Attendee").not(".row-hide").serializeArray();

            //   alert("len 1: " + formdata.length);
            //$.each(formdata, function (i, field) {
            //       alert(field.name + ' == ' + field.value);
            //})
            //  $.each(formdata, function (i, field) {
            //   alert(field.name + ' == ' + field.value);


          //  var counter = 0; var counterIn = 0;

            $.each(tbl_data, function (i, tab_f) {
                // alert('tab...');
                // alert(tab_f.name + ' == ' + tab_f.value);

              //  counter++;

                // if (field.name == tab_f.name) {
                // formdata.push({ name: tab_f.name, value: tab_f.value });

                // formdata.append(tab_f.name, tab_f.value);

                var attr_found = false;
                $.each(currFormData, function (i, field) {
                    //
                    if (field.name == tab_f.name) {
                        // alert(field.name + ' == ' + tab_f.name);
                        field.value = tab_f.value;
                        attr_found = true;

                       // counterIn++;
                        return false;
                    }
                });

                // alert('attr_found: ' + attr_found);
                if (attr_found == false) {
                   // alert('adding.. ' + tab_f.name)
                    //  formdata.append(tab_f.name, tab_f.value);

                    currFormData.push({ name: tab_f.name, value: tab_f.value });
                }


                // field.value = tab_f.value;
                // formdata[field.name] = tab_f.value;
                // }
            });


            alert('finally... save');
           // alert('finally... save:- ' + counter + " ... counterIn:- " + counterIn)

            $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,
                    url: '@Url.Action("AddOrEdit_CURR_BLK", "ClientSetupParameters")',
                   // url: "/ClientSetupParameters/AddOrEdit_CURR",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                   // contentType: false,
                   // processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_CURR(7, 3, 2);   //via AJAX...

                            //var _desc = "'[New] Country'";

                            //if (res.resetNew == true) {
                            //    AddEditCurrData_CURR(0, _desc); //(0, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex, _desc);
                            //}
                            //else {
                            //    $("#divPopModal_AddEdit .close").click();
                            //}

                            //window.location.href = '/ClientSetupParameters/Index?oCurrChuBodyId=' + currChuBodyId + '&setIndex=' + currSetIndex;
                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });
                        }
                    }
                })
        }

        var DeleteCurrData_CURR = function (currId, forceDeleteConfirm = false, msg = "") {
       // alert('deleting')

        var currUserId_Logged = $("#_oUserId_Logged").data("value");
        var currAGOId_Logged = $("#_oAppGloOwnId_Logged").data("value");
        var currCBId_Logged = $("#_oChurchBodyId_Logged").data("value");

            $.confirm({
                title: 'Confirm delete!',
                content: (msg == '' ? 'Are you sure you want to delete the specified currency' : msg) + ' ?',
                type: 'red',
                typeAnimated: true,
                buttons: {
                    cancel: function () {
                        //$.alert('Canceled!');
                    },
                    //info: {
                    //    btnClass: 'btn-blue',
                    //    action: function(){}
                    //},

                    delete: {
                        btnClass: 'btn-danger ',
                        action: function () {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("Delete_CURR", "ClientSetupParameters")',
                               // url: "/ClientSetupParameters/Delete_CURR",
                               // data: { loggedUserId: currUserId_Logged, id: currId, setIndex: currSetIndex, subSetIndex: currSubSetIndex, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}

                                // public IActionResult Delete_CURR(int? oAppGloOwnId, int? oChurchBodyId, int? loggedUserId, int id, int setIndex, int subSetIndex, bool forceDeleteConfirm = false)
                                data: { oAppGloOwnId: currAGOId_Logged, oChurchBodyId: currCBId_Logged, loggedUserId: currUserId_Logged, id: currId, forceDeleteConfirm: forceDeleteConfirm },  //forceDeleteConfirm = -1 {denied-error, info}, 0 {denied-dependencies, info}, 1 {denied-confirm to force-delete, task}
                                contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                                success: function (res) {
                                    if (res.taskSuccess == true) {          //var currChuBodyId = $("#_hdnChuBodyId").val();
                                        DisplaySuccessInfo(res.userMess); // currDenomId, currChuBodyId, currSetIndex, currSubSetIndex);        //DisplaySuccessInfo(res.userMess, oAppGloId, currChuBodyId, currSetIndex);
                                        ReloadCurrPage_CURR(7, 3, 1);
                                    }

                                    else {
                                        // alert(res.userMess);  (currSetIndex == 1 && !delConfirm)   //
                                        if (res.tryForceDelete == true) {
                                            DeleteCurrData_CURR(currId, true, res.userMess);
                                        }

                                        else {
                                            //alert(res.userMess);
                                            $.alert({
                                                title: 'Oops! Delete failed.',
                                                content: res.userMess, //'Could not delete specified record(s). Please try again.',
                                                type: 'red',
                                            });
                                        }
                                    }
                                },

                                error: function () {
                                    alert("Error occured while deleting data");
                                }
                            });
                        }
                    },

                    //,
                }
            });

        };

    </script>


     LSPK 8 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_LSPK").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_LSPK = function (currSetIndex = 8, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_LSPK').load(url, function (e) {

                $("#tabData_LSPK").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


     NIDT 10 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_NIDT").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_NIDT = function (currSetIndex = 10, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_NIDT').load(url, function (e) {

                $("#tabData_NIDT").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


     INST 11 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_INST").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_INST = function (currSetIndex = 11, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_INST').load(url, function (e) {

                $("#tabData_INST").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


     CTT 12 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_CTT").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CTT = function (currSetIndex = 12, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_CTT').load(url, function (e) {

                $("#tabData_CTT").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


     CR 15 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_CR").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CR = function (currSetIndex = 15, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_CR').load(url, function (e) {

                $("#tabData_CR").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


     CMT 19 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_CMT").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CMT = function (currSetIndex = 19, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_CMT').load(url, function (e) {

                $("#tabData_CMT").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


     CMS 20 no ADD, no DEL, only EDIT 
    <script>
        $(function () {
            $("#tabData_CMS").DataTable({
                "responsive": true,
                "autoWidth": false,
                "columnDefs": [{
                    "targets": [5],
                    "orderable": false,
                }]
            });
        });

        var ReloadCurrPage_CMS = function (currSetIndex = 20, currSubSetIndex = 1, strNVPCode = "") {
           // alert('reload..')
           // alert('1st:.. ' + strNVPCode)
            if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
            //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

            $('#divTabData_CMS').load(url, function (e) {

                $("#tabData_CMS").DataTable({
                    "responsive": true,
                    "autoWidth": false,
                    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                    "columnDefs": [{
                        "targets": [5],
                        "orderable": false,
                    }]
                });
            });
        }
    </script>


     CT 21 no ADD, no DEL, only EDIT 
     MCCF 22 no ADD, no DEL, only EDIT 
    <script>

        var ReloadCurrPage_MCCF = function (currSetIndex = 22, currSubSetIndex = 1, strNVPCode = 'MCCF') {
          //  alert('reload..')

           // alert('1st:.. ' + strNVPCode)
           // if (strNVPCode == null || strNVPCode == "") strNVPCode = $("#_currNVPCode").val();

           // alert('now new:.. ' + strNVPCode)
           //   public ActionResult Index(int? setIndex = 0, int? subSetIndex = 0, bool loadSectionOnly = false, int filterIndex = 1, int pageIndex = 1, int? numCodeCriteria_1 = (int?)null, string strCodeCriteria_2 = null)

            var url = '@Url.Action("Index", "ClientSetupParameters")?setIndex=' + currSetIndex + '&subSetIndex=' + currSubSetIndex + '&loadSectionOnly=true' + '&strCodeCriteria_2=' + strNVPCode;

          //  alert(url)

            $('#divTabData_MCCF').load(url, function (e) {

                //$("#tabData_CMS").DataTable({
                //    "responsive": true,
                //    "autoWidth": false,
                //    //"columnDefs": [{ "searching": false, "ordering": false, "targets": [5] }],
                //    "columnDefs": [{
                //        "targets": [5],
                //        "orderable": false,
                //    }]
                //});
            });
        }


        var SaveCurr_MCCF = function () {
            // (currSetIndex, currSubSetIndex) {
           // alert('save... ');

            const form = document.getElementById("currForm_MCCF");
           // alert('val 4 .. ' + form.checkValidity())

            if (!(form.checkValidity() === true)) {
              //  alert('not valid')
                event.preventDefault();
                event.stopPropagation();

                form.classList.add('was-validated');
            }

            else {
               // alert('about to save...');
                var currFormData = new FormData($("#currForm_MCCF").get(0));

                // var currFormData = $("#currForm_MCCF").serialize();
              // alert('save... submitting...');

                $.ajax({
                    type: 'POST',
                    // data: formdata,
                    // processData: false,

                    url: '@Url.Action("AddOrEdit_MCCF", "ClientSetupParameters")',

                   // url: "/ClientSetupParameters/AddOrEdit_MCCF",
                    data: currFormData,   //{ data: currFormData, taskIndx: oTask },  //
                    //contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    contentType: false,
                    processData: false,
                    success: function (res) {

                        if (res.taskSuccess == true) {
                          //  var currChuBodyId = $("#_hdnChuBodyId").val(); // var currDenomId = $("#_hdnAppGloOwnId").val();  // var currId = $("#_hdnCurrId_MCCF").val();
                         //   alert(res.userMess)
                            DisplaySuccessInfo(res.userMess); //(res.userMess, currDenomId, currChuBodyId, currSetIndex, currSubSetIndex); // "/ClientSetupParameters/Index?oCurrChuBodyId=" + currChuBodyId + "&dxn=" + dxn);
                            ReloadCurrPage_MCCF(22, 1, 'MCCF');   //via AJAX...

                        }

                        else //if (res.taskSuccess == false)
                        {
                            $.alert({
                                title: 'Oops!',
                                content: res.userMess,
                                type: 'red',
                                typeAnimated: true,
                            });

                           // alert(res.userMess); //"Member transfer request failed. Details: " + ViewBag.UserMsg);
                            // $("#lblUserMessage").text(msg);
                        }
                    }
                })
            }
        }
    </script>

    <script>
        $(document).on('change', '#chk_IsAutogenMCCFCode', function (e) {
            e.preventDefault();

            //  $('#_divMCCFDetails').prop('enabled', ($("#chk_IsAutogenMCCFCode").is(":checked")));
            // $("#dcacl").attr('disabled','disabled');

            $("#_divMCCFDetails").children().attr("disabled", !($("#chk_IsAutogenMCCFCode").is(":checked")));

            //$('#_divMCCFDetails').fadeTo('slow', .6);
            //$('#_divMCCFDetails').append('<div style="position: absolute;top:0;left:0;width: 100%;height:100%;z-index:2;opacity:0.4;filter: alpha(opacity = 50)"></div>');

        });

        var showMCCFSample = function () {
            var strVar = '1';
            if ($("#chk_IsLeadingZeros").is(":checked")) {
                strVar = '0001';
            }

            var strSamp = $("#_strPrefix").val() + strVar + $("#_strSuffix").val();
            document.getElementById('_sampleLDZR').value = strSamp;
        }

        $(document).on('change', '#chk_IsLeadingZeros', function (e) {
            e.preventDefault();

            showMCCFSample();
        });
        $(document).on('change', '#_strPrefix', function (e) {
            e.preventDefault();

            showMCCFSample();
        });
        $(document).on('change', '#_strSuffix', function (e) {
            e.preventDefault();

            showMCCFSample();
        });

    </script>



}*@
